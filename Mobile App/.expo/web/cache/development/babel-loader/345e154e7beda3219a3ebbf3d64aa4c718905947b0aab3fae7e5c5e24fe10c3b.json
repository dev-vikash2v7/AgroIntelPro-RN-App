{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimultaneousGesture = exports.ExclusiveGesture = exports.ComposedGesture = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _gesture = require(\"./gesture\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction extendRelation(currentRelation, extendWith) {\n  if (currentRelation === undefined) {\n    return (0, _toConsumableArray2.default)(extendWith);\n  } else {\n    return [].concat((0, _toConsumableArray2.default)(currentRelation), (0, _toConsumableArray2.default)(extendWith));\n  }\n}\nvar ComposedGesture = function (_Gesture) {\n  (0, _inherits2.default)(ComposedGesture, _Gesture);\n  var _super = _createSuper(ComposedGesture);\n  function ComposedGesture() {\n    var _this;\n    (0, _classCallCheck2.default)(this, ComposedGesture);\n    _this = _super.call(this);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"gestures\", []);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"simultaneousGestures\", []);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"requireGesturesToFail\", []);\n    for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n      gestures[_key] = arguments[_key];\n    }\n    _this.gestures = gestures;\n    return _this;\n  }\n  (0, _createClass2.default)(ComposedGesture, [{\n    key: \"prepareSingleGesture\",\n    value: function prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof _gesture.BaseGesture) {\n        var newConfig = Object.assign({}, gesture.config);\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare() {\n      for (var gesture of this.gestures) {\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      for (var gesture of this.gestures) {\n        gesture.initialize();\n      }\n    }\n  }, {\n    key: \"toGestureArray\",\n    value: function toGestureArray() {\n      return this.gestures.flatMap(function (gesture) {\n        return gesture.toGestureArray();\n      });\n    }\n  }]);\n  return ComposedGesture;\n}(_gesture.Gesture);\nexports.ComposedGesture = ComposedGesture;\nvar SimultaneousGesture = function (_ComposedGesture) {\n  (0, _inherits2.default)(SimultaneousGesture, _ComposedGesture);\n  var _super2 = _createSuper(SimultaneousGesture);\n  function SimultaneousGesture() {\n    (0, _classCallCheck2.default)(this, SimultaneousGesture);\n    return _super2.apply(this, arguments);\n  }\n  (0, _createClass2.default)(SimultaneousGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var _this2 = this;\n      var simultaneousArrays = this.gestures.map(function (gesture) {\n        return _this2.gestures.filter(function (x) {\n          return x !== gesture;\n        }).flatMap(function (x) {\n          return x.toGestureArray();\n        });\n      });\n      for (var i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n      }\n    }\n  }]);\n  return SimultaneousGesture;\n}(ComposedGesture);\nexports.SimultaneousGesture = SimultaneousGesture;\nvar ExclusiveGesture = function (_ComposedGesture2) {\n  (0, _inherits2.default)(ExclusiveGesture, _ComposedGesture2);\n  var _super3 = _createSuper(ExclusiveGesture);\n  function ExclusiveGesture() {\n    (0, _classCallCheck2.default)(this, ExclusiveGesture);\n    return _super3.apply(this, arguments);\n  }\n  (0, _createClass2.default)(ExclusiveGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var gestureArrays = this.gestures.map(function (gesture) {\n        return gesture.toGestureArray();\n      });\n      var requireToFail = [];\n      for (var i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }]);\n  return ExclusiveGesture;\n}(ComposedGesture);\nexports.ExclusiveGesture = ExclusiveGesture;","map":{"version":3,"names":["_gesture","require","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","extendRelation","currentRelation","extendWith","undefined","_toConsumableArray2","concat","ComposedGesture","_Gesture","_inherits2","_super","_this","_classCallCheck2","_defineProperty","_assertThisInitialized2","_len","length","gestures","Array","_key","_createClass2","key","value","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","BaseGesture","newConfig","Object","assign","config","simultaneousWith","requireToFail","prepare","initialize","toGestureArray","flatMap","Gesture","exports","SimultaneousGesture","_ComposedGesture","_super2","_this2","simultaneousArrays","map","filter","x","i","ExclusiveGesture","_ComposedGesture2","_super3","gestureArrays"],"sources":["D:\\vikash\\AgroIntelPro-RN-App\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\gestureComposition.ts"],"sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    // this piece of magic works something like this:\n    // for every gesture in the array\n    const simultaneousArrays = this.gestures.map((gesture) =>\n      // we take the array it's in\n      this.gestures\n        // and make a copy without it\n        .filter((x) => x !== gesture)\n        // then we flatmap the result to get list of raw (not composed) gestures\n        // this way we don't make the gestures simultaneous with themselves, which is\n        // important when the gesture is `ExclusiveGesture` - we don't want to make\n        // exclusive gestures simultaneous\n        .flatMap((x) => x.toGestureArray())\n    );\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        simultaneousArrays[i],\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    // transforms the array of gestures into array of grouped raw (not composed) gestures\n    // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      // every group gets to wait for all groups before it\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}