{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VEC_LEN_SQ = exports.TEST_MIN_IF_NOT_NAN = exports.TEST_MAX_IF_NOT_NAN = void 0;\nexports.fireAfterInterval = fireAfterInterval;\nexports.isnan = exports.isValidNumber = void 0;\nvar isnan = function isnan(v) {\n  return Number.isNaN(v);\n};\nexports.isnan = isnan;\nvar isValidNumber = function isValidNumber(v) {\n  return typeof v === 'number' && !Number.isNaN(v);\n};\nexports.isValidNumber = isValidNumber;\nvar TEST_MIN_IF_NOT_NAN = function TEST_MIN_IF_NOT_NAN(value, limit) {\n  return !isnan(limit) && (limit < 0 && value <= limit || limit >= 0 && value >= limit);\n};\nexports.TEST_MIN_IF_NOT_NAN = TEST_MIN_IF_NOT_NAN;\nvar VEC_LEN_SQ = function VEC_LEN_SQ() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$x = _ref.x,\n    x = _ref$x === void 0 ? 0 : _ref$x,\n    _ref$y = _ref.y,\n    y = _ref$y === void 0 ? 0 : _ref$y;\n  return x * x + y * y;\n};\nexports.VEC_LEN_SQ = VEC_LEN_SQ;\nvar TEST_MAX_IF_NOT_NAN = function TEST_MAX_IF_NOT_NAN(value, max) {\n  return !isnan(max) && (max < 0 && value < max || max >= 0 && value > max);\n};\nexports.TEST_MAX_IF_NOT_NAN = TEST_MAX_IF_NOT_NAN;\nfunction fireAfterInterval(method, interval) {\n  if (!interval) {\n    method();\n    return null;\n  }\n  return setTimeout(function () {\n    return method();\n  }, interval);\n}","map":{"version":3,"names":["isnan","v","Number","isNaN","isValidNumber","exports","TEST_MIN_IF_NOT_NAN","value","limit","VEC_LEN_SQ","_ref","arguments","length","undefined","_ref$x","x","_ref$y","y","TEST_MAX_IF_NOT_NAN","max","fireAfterInterval","method","interval","setTimeout"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\utils.ts"],"sourcesContent":["// TODO(TS) remove if not necessary after rewrite\nexport const isnan = (v: unknown) => Number.isNaN(v);\n\n// TODO(TS) remove if not necessary after rewrite\nexport const isValidNumber = (v: unknown) =>\n  typeof v === 'number' && !Number.isNaN(v);\n\nexport const TEST_MIN_IF_NOT_NAN = (value: number, limit: number): boolean =>\n  !isnan(limit) &&\n  ((limit < 0 && value <= limit) || (limit >= 0 && value >= limit));\nexport const VEC_LEN_SQ = ({ x = 0, y = 0 } = {}) => x * x + y * y;\nexport const TEST_MAX_IF_NOT_NAN = (value: number, max: number) =>\n  !isnan(max) && ((max < 0 && value < max) || (max >= 0 && value > max));\n\nexport function fireAfterInterval(\n  method: () => void,\n  interval?: number | boolean\n) {\n  if (!interval) {\n    method();\n    return null;\n  }\n  return setTimeout(() => method(), interval as number);\n}\n"],"mappings":";;;;;;AACO,IAAMA,KAAK,GAAI,SAATA,KAAKA,CAAIC,CAAD;EAAA,OAAgBC,MAAM,CAACC,KAAP,CAAaF,CAAb,CAA9B;AAAA;;AAGA,IAAMG,aAAa,GAAI,SAAjBA,aAAaA,CAAIH,CAAD;EAAA,OAC3B,OAAOA,CAAP,KAAa,QAAb,IAAyB,CAACC,MAAM,CAACC,KAAP,CAAaF,CAAb,CADrB;AAAA;AAAAI,OAAA,CAAAD,aAAA,GAAAA,aAAA;AAGA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,KAAD,EAAgBC,KAAhB;EAAA,OACjC,CAACR,KAAK,CAACQ,KAAD,CAAN,KACEA,KAAK,GAAG,CAAR,IAAaD,KAAK,IAAIC,KAAvB,IAAkCA,KAAK,IAAI,CAAT,IAAcD,KAAK,IAAIC,KAD1D,CADK;AAAA;AAAAH,OAAA,CAAAC,mBAAA,GAAAA,mBAAA;AAGA,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAA;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuB,EAApB;IAAAG,MAAA,GAAAJ,IAAA,CAAGK,CAAC;IAADA,CAAC,GAAAD,MAAA,cAAG,CAAN,GAAAA,MAAA;IAAAE,MAAA,GAAAN,IAAA,CAASO,CAAC;IAADA,CAAC,GAAAD,MAAA,cAAG,IAAAA,MAAA;EAAA,OAAaD,CAAC,GAAGA,CAAJ,GAAQE,CAAC,GAAGA,CAA1D;AAAA;AAAAZ,OAAA,CAAAI,UAAA,GAAAA,UAAA;AACA,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIX,KAAD,EAAgBY,GAAhB;EAAA,OACjC,CAACnB,KAAK,CAACmB,GAAD,CAAN,KAAiBA,GAAG,GAAG,CAAN,IAAWZ,KAAK,GAAGY,GAApB,IAA6BA,GAAG,IAAI,CAAP,IAAYZ,KAAK,GAAGY,GAAjE,CADK;AAAA;AAAAd,OAAA,CAAAa,mBAAA,GAAAA,mBAAA;AAGA,SAASE,iBAATA,CACLC,MADK,EAELC,QAFK,EAGL;EACA,IAAI,CAACA,QAAL,EAAe;IACbD,MAAM;IACN,OAAO,IAAP;EACD;EACD,OAAOE,UAAU,CAAC;IAAA,OAAMF,MAAM,EAAb;EAAA,GAAiBC,QAAjB,CAAjB;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}