{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAnimatedSensor = useAnimatedSensor;\nvar _react = require(\"react\");\nvar _core = require(\"../core\");\nvar _commonTypes = require(\"../commonTypes\");\nvar _threads = require(\"../threads\");\nfunction eulerToQuaternion(pitch, roll, yaw) {\n  'worklet';\n\n  var c1 = Math.cos(pitch / 2);\n  var s1 = Math.sin(pitch / 2);\n  var c2 = Math.cos(roll / 2);\n  var s2 = Math.sin(roll / 2);\n  var c3 = Math.cos(yaw / 2);\n  var s3 = Math.sin(yaw / 2);\n  return [s1 * c2 * c3 - c1 * s2 * s3, c1 * s2 * c3 + s1 * c2 * s3, c1 * c2 * s3 + s1 * s2 * c3, c1 * c2 * c3 - s1 * s2 * s3];\n}\nfunction adjustRotationToInterfaceOrientation(data) {\n  'worklet';\n\n  var interfaceOrientation = data.interfaceOrientation,\n    pitch = data.pitch,\n    roll = data.roll,\n    yaw = data.yaw;\n  if (interfaceOrientation === 90) {\n    data.pitch = roll;\n    data.roll = -pitch;\n    data.yaw = yaw - Math.PI / 2;\n  } else if (interfaceOrientation === 270) {\n    data.pitch = -roll;\n    data.roll = pitch;\n    data.yaw = yaw + Math.PI / 2;\n  } else if (interfaceOrientation === 180) {\n    data.pitch *= -1;\n    data.roll *= -1;\n    data.yaw *= -1;\n  }\n  var q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\n  data.qx = q[0];\n  data.qy = q[1];\n  data.qz = q[2];\n  data.qw = q[3];\n  return data;\n}\nfunction adjustVectorToInterfaceOrientation(data) {\n  'worklet';\n\n  var interfaceOrientation = data.interfaceOrientation,\n    x = data.x,\n    y = data.y;\n  if (interfaceOrientation === 90) {\n    data.x = -y;\n    data.y = x;\n  } else if (interfaceOrientation === 270) {\n    data.x = y;\n    data.y = -x;\n  } else if (interfaceOrientation === 180) {\n    data.x *= -1;\n    data.y *= -1;\n  }\n  return data;\n}\nfunction useAnimatedSensor(sensorType, userConfig) {\n  var config = Object.assign({\n    interval: 'auto',\n    adjustToInterfaceOrientation: true,\n    iosReferenceFrame: _commonTypes.IOSReferenceFrame.Auto\n  }, userConfig);\n  var ref = (0, _react.useRef)({\n    sensor: (0, _core.initializeSensor)(sensorType, config),\n    unregister: function unregister() {},\n    isAvailable: false,\n    config: config\n  });\n  (0, _react.useEffect)(function () {\n    var newConfig = Object.assign({}, config, userConfig);\n    ref.current.sensor = (0, _core.initializeSensor)(sensorType, newConfig);\n    var sensorData = ref.current.sensor;\n    var adjustToInterfaceOrientation = ref.current.config.adjustToInterfaceOrientation;\n    var id = (0, _core.registerSensor)(sensorType, config, function (data) {\n      'worklet';\n\n      if (adjustToInterfaceOrientation) {\n        if (sensorType === _commonTypes.SensorType.ROTATION) {\n          data = adjustRotationToInterfaceOrientation(data);\n        } else {\n          data = adjustVectorToInterfaceOrientation(data);\n        }\n      }\n      sensorData.value = data;\n      (0, _threads.callMicrotasks)();\n    });\n    if (id !== -1) {\n      ref.current.unregister = function () {\n        return (0, _core.unregisterSensor)(id);\n      };\n      ref.current.isAvailable = true;\n    } else {\n      ref.current.unregister = function () {};\n      ref.current.isAvailable = false;\n    }\n    return function () {\n      ref.current.unregister();\n    };\n  }, [sensorType, userConfig]);\n  return ref.current;\n}","map":{"version":3,"names":["_react","require","_core","_commonTypes","_threads","eulerToQuaternion","pitch","roll","yaw","c1","Math","cos","s1","sin","c2","s2","c3","s3","adjustRotationToInterfaceOrientation","data","interfaceOrientation","PI","q","qx","qy","qz","qw","adjustVectorToInterfaceOrientation","x","y","useAnimatedSensor","sensorType","userConfig","config","Object","assign","interval","adjustToInterfaceOrientation","iosReferenceFrame","IOSReferenceFrame","Auto","ref","useRef","sensor","initializeSensor","unregister","isAvailable","useEffect","newConfig","current","sensorData","id","registerSensor","SensorType","ROTATION","value","callMicrotasks","unregisterSensor"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useAnimatedSensor.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { initializeSensor, registerSensor, unregisterSensor } from '../core';\nimport {\n  SensorType,\n  IOSReferenceFrame,\n  SensorConfig,\n  AnimatedSensor,\n  Value3D,\n  ValueRotation,\n} from '../commonTypes';\nimport { callMicrotasks } from '../threads';\n\n// euler angles are in order ZXY, z = yaw, x = pitch, y = roll\n// https://github.com/mrdoob/three.js/blob/dev/src/math/Quaternion.js#L237\nfunction eulerToQuaternion(pitch: number, roll: number, yaw: number) {\n  'worklet';\n  const c1 = Math.cos(pitch / 2);\n  const s1 = Math.sin(pitch / 2);\n  const c2 = Math.cos(roll / 2);\n  const s2 = Math.sin(roll / 2);\n  const c3 = Math.cos(yaw / 2);\n  const s3 = Math.sin(yaw / 2);\n\n  return [\n    s1 * c2 * c3 - c1 * s2 * s3,\n    c1 * s2 * c3 + s1 * c2 * s3,\n    c1 * c2 * s3 + s1 * s2 * c3,\n    c1 * c2 * c3 - s1 * s2 * s3,\n  ];\n}\n\nfunction adjustRotationToInterfaceOrientation(data: ValueRotation) {\n  'worklet';\n  const { interfaceOrientation, pitch, roll, yaw } = data;\n  if (interfaceOrientation === 90) {\n    data.pitch = roll;\n    data.roll = -pitch;\n    data.yaw = yaw - Math.PI / 2;\n  } else if (interfaceOrientation === 270) {\n    data.pitch = -roll;\n    data.roll = pitch;\n    data.yaw = yaw + Math.PI / 2;\n  } else if (interfaceOrientation === 180) {\n    data.pitch *= -1;\n    data.roll *= -1;\n    data.yaw *= -1;\n  }\n\n  const q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\n  data.qx = q[0];\n  data.qy = q[1];\n  data.qz = q[2];\n  data.qw = q[3];\n  return data;\n}\n\nfunction adjustVectorToInterfaceOrientation(data: Value3D) {\n  'worklet';\n  const { interfaceOrientation, x, y } = data;\n  if (interfaceOrientation === 90) {\n    data.x = -y;\n    data.y = x;\n  } else if (interfaceOrientation === 270) {\n    data.x = y;\n    data.y = -x;\n  } else if (interfaceOrientation === 180) {\n    data.x *= -1;\n    data.y *= -1;\n  }\n  return data;\n}\n\nexport function useAnimatedSensor(\n  sensorType: SensorType,\n  userConfig?: Partial<SensorConfig>\n): AnimatedSensor {\n  const config: SensorConfig = {\n    interval: 'auto',\n    adjustToInterfaceOrientation: true,\n    iosReferenceFrame: IOSReferenceFrame.Auto,\n    ...userConfig,\n  };\n  const ref = useRef<AnimatedSensor>({\n    sensor: initializeSensor(sensorType, config),\n    unregister: () => {\n      // NOOP\n    },\n    isAvailable: false,\n    config: config,\n  });\n\n  useEffect(() => {\n    const newConfig = {\n      ...config,\n      ...userConfig,\n    };\n    ref.current.sensor = initializeSensor(sensorType, newConfig);\n\n    const sensorData = ref.current.sensor;\n    const adjustToInterfaceOrientation =\n      ref.current.config.adjustToInterfaceOrientation;\n\n    const id = registerSensor(sensorType, config, (data) => {\n      'worklet';\n      if (adjustToInterfaceOrientation) {\n        if (sensorType === SensorType.ROTATION) {\n          data = adjustRotationToInterfaceOrientation(data as ValueRotation);\n        } else {\n          data = adjustVectorToInterfaceOrientation(data as Value3D);\n        }\n      }\n      sensorData.value = data;\n      callMicrotasks();\n    });\n\n    if (id !== -1) {\n      // if sensor is available\n      ref.current.unregister = () => unregisterSensor(id);\n      ref.current.isAvailable = true;\n    } else {\n      // if sensor is unavailable\n      ref.current.unregister = () => {\n        // NOOP\n      };\n      ref.current.isAvailable = false;\n    }\n\n    return () => {\n      ref.current.unregister();\n    };\n  }, [sensorType, userConfig]);\n\n  return ref.current;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}