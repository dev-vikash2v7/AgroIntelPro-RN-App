{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveAssetSource;\nexports.pickScale = void 0;\nexports.setCustomSourceTransformer = setCustomSourceTransformer;\nvar _AssetRegistry = require(\"react-native/Libraries/Image/AssetRegistry\");\nvar _AssetSourceResolver = _interopRequireDefault(require(\"./AssetSourceResolver\"));\nvar _customSourceTransformer;\nfunction setCustomSourceTransformer(transformer) {\n  _customSourceTransformer = transformer;\n}\nfunction resolveAssetSource(source) {\n  if (typeof source === 'object') {\n    return source;\n  }\n  var asset = (0, _AssetRegistry.getAssetByID)(source);\n  if (!asset) {\n    return undefined;\n  }\n  var resolver = new _AssetSourceResolver.default('https://expo.dev', null, asset);\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get: function get() {\n    return setCustomSourceTransformer;\n  }\n});\nvar pickScale = _AssetSourceResolver.default.pickScale;\nexports.pickScale = pickScale;","map":{"version":3,"names":["_AssetRegistry","require","_AssetSourceResolver","_interopRequireDefault","_customSourceTransformer","setCustomSourceTransformer","transformer","resolveAssetSource","source","asset","getAssetByID","undefined","resolver","AssetSourceResolver","defaultAsset","Object","defineProperty","get","pickScale","exports"],"sources":["E:\\React Native Android Apps\\AgrI Intel Pro - Hackaton Project\\node_modules\\expo-asset\\src\\resolveAssetSource.web.ts"],"sourcesContent":["import { getAssetByID } from 'react-native/Libraries/Image/AssetRegistry';\n\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver';\n\nlet _customSourceTransformer;\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nexport default function resolveAssetSource(source: any): ResolvedAssetSource | undefined {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return undefined;\n  }\n\n  const resolver = new AssetSourceResolver(\n    // Doesn't matter since this is removed on web\n    'https://expo.dev',\n    null,\n    asset\n  );\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport const { pickScale } = AssetSourceResolver;\n"],"mappings":";;;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AAEA,IAAAC,oBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAIG,wBAAwB;AAEtB,SAAUC,0BAA0BA,CACxCC,WAAmE;EAEnEF,wBAAwB,GAAGE,WAAW;AACxC;AAMc,SAAUC,kBAAkBA,CAACC,MAAW;EACpD,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC9B,OAAOA,MAAM;;EAGf,IAAMC,KAAK,GAAG,IAAAC,2BAAY,EAACF,MAAM,CAAC;EAClC,IAAI,CAACC,KAAK,EAAE;IACV,OAAOE,SAAS;;EAGlB,IAAMC,QAAQ,GAAG,IAAIC,4BAAmB,CAEtC,kBAAkB,EAClB,IAAI,EACJJ,KAAK,CACN;EACD,IAAIL,wBAAwB,EAAE;IAC5B,OAAOA,wBAAwB,CAACQ,QAAQ,CAAC;;EAE3C,OAAOA,QAAQ,CAACE,YAAY,EAAE;AAChC;AAEAC,MAAM,CAACC,cAAc,CAACT,kBAAkB,EAAE,4BAA4B,EAAE;EACtEU,GAAG,WAAAA,IAAA;IACD,OAAOZ,0BAA0B;EACnC;CACD,CAAC;AAEK,IAAQa,SAAS,GAAKL,4BAAmB,CAAjCK,SAAS;AAAyBC,OAAA,CAAAD,SAAA,GAAAA,SAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}