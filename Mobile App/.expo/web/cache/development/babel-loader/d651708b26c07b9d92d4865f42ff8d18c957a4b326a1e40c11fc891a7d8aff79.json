{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _createForOfIteratorHelperLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\"));\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar ChildListCollection = function () {\n  function ChildListCollection() {\n    (0, _classCallCheck2.default)(this, ChildListCollection);\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n  (0, _createClass2.default)(ChildListCollection, [{\n    key: \"add\",\n    value: function add(list, cellKey) {\n      var _this$_cellKeyToChild;\n      (0, _invariant.default)(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n      var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n      cellLists.add(list);\n      this._cellKeyToChildren.set(cellKey, cellLists);\n      this._childrenToCellKey.set(list, cellKey);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(list) {\n      var cellKey = this._childrenToCellKey.get(list);\n      (0, _invariant.default)(cellKey != null, 'Trying to remove non-present child list');\n      this._childrenToCellKey.delete(list);\n      var cellLists = this._cellKeyToChildren.get(cellKey);\n      (0, _invariant.default)(cellLists, '_cellKeyToChildren should contain cellKey');\n      cellLists.delete(list);\n      if (cellLists.size === 0) {\n        this._cellKeyToChildren.delete(cellKey);\n      }\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      for (var _iterator = (0, _createForOfIteratorHelperLoose2.default)(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n        var listSet = _step.value;\n        for (var _iterator2 = (0, _createForOfIteratorHelperLoose2.default)(listSet), _step2; !(_step2 = _iterator2()).done;) {\n          var list = _step2.value;\n          fn(list);\n        }\n      }\n    }\n  }, {\n    key: \"forEachInCell\",\n    value: function forEachInCell(cellKey, fn) {\n      var _this$_cellKeyToChild2;\n      var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n      for (var _iterator3 = (0, _createForOfIteratorHelperLoose2.default)(listSet), _step3; !(_step3 = _iterator3()).done;) {\n        var list = _step3.value;\n        fn(list);\n      }\n    }\n  }, {\n    key: \"anyInCell\",\n    value: function anyInCell(cellKey, fn) {\n      var _this$_cellKeyToChild3;\n      var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n      for (var _iterator4 = (0, _createForOfIteratorHelperLoose2.default)(listSet), _step4; !(_step4 = _iterator4()).done;) {\n        var list = _step4.value;\n        if (fn(list)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this._childrenToCellKey.size;\n    }\n  }]);\n  return ChildListCollection;\n}();\nexports.default = ChildListCollection;","map":{"version":3,"names":["_createForOfIteratorHelperLoose2","_interopRequireDefault","require","_invariant","ChildListCollection","_classCallCheck2","default","_cellKeyToChildren","Map","_childrenToCellKey","_createClass2","key","value","add","list","cellKey","_this$_cellKeyToChild","invariant","has","cellLists","get","Set","set","remove","delete","size","forEach","fn","_iterator","_createForOfIteratorHelperLoose","values","_step","done","listSet","_iterator2","_step2","forEachInCell","_this$_cellKeyToChild2","_iterator3","_step3","anyInCell","_this$_cellKeyToChild3","_iterator4","_step4","exports"],"sources":["E:/Crop Disease Classifier- Hackaton project/Android App/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/ChildListCollection.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport invariant from 'fbjs/lib/invariant';\nexport default class ChildListCollection {\n  constructor() {\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n  add(list, cellKey) {\n    var _this$_cellKeyToChild;\n    invariant(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n    var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n    cellLists.add(list);\n    this._cellKeyToChildren.set(cellKey, cellLists);\n    this._childrenToCellKey.set(list, cellKey);\n  }\n  remove(list) {\n    var cellKey = this._childrenToCellKey.get(list);\n    invariant(cellKey != null, 'Trying to remove non-present child list');\n    this._childrenToCellKey.delete(list);\n    var cellLists = this._cellKeyToChildren.get(cellKey);\n    invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n    cellLists.delete(list);\n    if (cellLists.size === 0) {\n      this._cellKeyToChildren.delete(cellKey);\n    }\n  }\n  forEach(fn) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n      var listSet = _step.value;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(listSet), _step2; !(_step2 = _iterator2()).done;) {\n        var list = _step2.value;\n        fn(list);\n      }\n    }\n  }\n  forEachInCell(cellKey, fn) {\n    var _this$_cellKeyToChild2;\n    var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n    for (var _iterator3 = _createForOfIteratorHelperLoose(listSet), _step3; !(_step3 = _iterator3()).done;) {\n      var list = _step3.value;\n      fn(list);\n    }\n  }\n  anyInCell(cellKey, fn) {\n    var _this$_cellKeyToChild3;\n    var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n    for (var _iterator4 = _createForOfIteratorHelperLoose(listSet), _step4; !(_step4 = _iterator4()).done;) {\n      var list = _step4.value;\n      if (fn(list)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  size() {\n    return this._childrenToCellKey.size;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}