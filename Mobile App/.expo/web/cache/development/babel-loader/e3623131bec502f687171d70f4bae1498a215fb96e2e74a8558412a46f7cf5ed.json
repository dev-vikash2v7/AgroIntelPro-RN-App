{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodedError = void 0;\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar CodedError = function (_Error) {\n  (0, _inherits2.default)(CodedError, _Error);\n  var _super = _createSuper(CodedError);\n  function CodedError(code, message) {\n    var _this;\n    (0, _classCallCheck2.default)(this, CodedError);\n    _this = _super.call(this, message);\n    _this.code = code;\n    return _this;\n  }\n  return (0, _createClass2.default)(CodedError);\n}((0, _wrapNativeSuper2.default)(Error));\nexports.CodedError = CodedError;","map":{"version":3,"names":["CodedError","_Error","_inherits2","default","_super","_createSuper","code","message","_this","_classCallCheck2","call","_createClass2","_wrapNativeSuper2","Error","exports"],"sources":["D:\\vikash\\AgroIntelPro-RN-App\\node_modules\\expo-modules-core\\src\\errors\\CodedError.ts"],"sourcesContent":["/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;IAKaA,UAAW,aAAAC,MAAA;EAAA,IAAAC,UAAA,CAAAC,OAAA,EAAAH,UAAA,EAAAC,MAAA;EAAA,IAAAG,MAAA,GAAAC,YAAA,CAAAL,UAAA;EAItB,SAAAA,WAAYM,IAAY,EAAEC,OAAe;IAAA,IAAAC,KAAA;IAAA,IAAAC,gBAAA,CAAAN,OAAA,QAAAH,UAAA;IACvCQ,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAMH,OAAO;IACbC,KAAA,CAAKF,IAAI,GAAGA,IAAI;IAAC,OAAAE,KAAA;EACnB;EAAC,WAAAG,aAAA,CAAAR,OAAA,EAAAH,UAAA;AAAA,MAAAY,iBAAA,CAAAT,OAAA,EAP6BU,KAAK;AAAAC,OAAA,CAAAd,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}