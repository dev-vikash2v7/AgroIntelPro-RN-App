{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeMutable = makeMutable;\nexports.makeRemote = makeRemote;\nexports.makeUIMutable = makeUIMutable;\nObject.defineProperty(exports, \"stopMapper\", {\n  enumerable: true,\n  get: function get() {\n    return _mappers.stopMapper;\n  }\n});\nvar _NativeReanimated = _interopRequireDefault(require(\"./NativeReanimated\"));\nvar _shareables = require(\"./shareables\");\nvar _threads = require(\"./threads\");\nvar _valueSetter = require(\"./valueSetter\");\nvar _mappers = require(\"./mappers\");\nfunction makeUIMutable(initial, syncDataHolder) {\n  'worklet';\n\n  var listeners = new Map();\n  var value = initial;\n  var self = {\n    set value(newValue) {\n      (0, _valueSetter.valueSetter)(self, newValue);\n    },\n    get value() {\n      return value;\n    },\n    set _value(newValue) {\n      value = newValue;\n      if (syncDataHolder) {\n        _updateDataSynchronously(syncDataHolder, (0, _shareables.makeShareableCloneOnUIRecursive)(newValue));\n      }\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n    get _value() {\n      return value;\n    },\n    addListener: function addListener(id, listener) {\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true\n  };\n  return self;\n}\nfunction makeMutable(initial) {\n  var oneWayReadsOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var value = initial;\n  var syncDataHolder;\n  if (!oneWayReadsOnly && _NativeReanimated.default.native) {\n    syncDataHolder = _NativeReanimated.default.makeSynchronizedDataHolder((0, _shareables.makeShareableCloneRecursive)(value));\n    (0, _shareables.registerShareableMapping)(syncDataHolder);\n  }\n  var handle = (0, _shareables.makeShareableCloneRecursive)({\n    __init: function __init() {\n      'worklet';\n\n      return makeUIMutable(initial, syncDataHolder);\n    }\n  });\n  var listeners = _NativeReanimated.default.native ? undefined : new Map();\n  var mutable = {\n    set value(newValue) {\n      if (_NativeReanimated.default.native) {\n        (0, _threads.runOnUI)(function () {\n          mutable.value = newValue;\n        })();\n      } else {\n        (0, _valueSetter.valueSetter)(mutable, newValue);\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return _NativeReanimated.default.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue) {\n      if (_NativeReanimated.default.native) {\n        throw new Error('Setting `_value` directly is only possible on the UI runtime');\n      }\n      value = newValue;\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n    get _value() {\n      if (_NativeReanimated.default.native) {\n        throw new Error('Reading from `_value` directly is only possible on the UI runtime');\n      }\n      return value;\n    },\n    modify: function modify(modifier) {\n      (0, _threads.runOnUI)(function () {\n        mutable.value = modifier(mutable.value);\n      })();\n    },\n    addListener: function addListener(id, listener) {\n      if (_NativeReanimated.default.native) {\n        throw new Error('adding listeners is only possible on the UI runtime');\n      }\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      if (_NativeReanimated.default.native) {\n        throw new Error('removing listeners is only possible on the UI runtime');\n      }\n      listeners.delete(id);\n    },\n    _isReanimatedSharedValue: true\n  };\n  (0, _shareables.registerShareableMapping)(mutable, handle);\n  return mutable;\n}\nfunction makeRemote() {\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var handle = (0, _shareables.makeShareableCloneRecursive)({\n    __init: function __init() {\n      'worklet';\n\n      return initial;\n    }\n  });\n  (0, _shareables.registerShareableMapping)(initial, handle);\n  return initial;\n}","map":{"version":3,"names":["_NativeReanimated","_interopRequireDefault","require","_shareables","_threads","_valueSetter","_mappers","makeUIMutable","initial","syncDataHolder","listeners","Map","value","self","newValue","valueSetter","_value","_updateDataSynchronously","makeShareableCloneOnUIRecursive","forEach","listener","addListener","id","set","removeListener","delete","_animation","_isReanimatedSharedValue","makeMutable","oneWayReadsOnly","arguments","length","undefined","NativeReanimatedModule","native","makeSynchronizedDataHolder","makeShareableCloneRecursive","registerShareableMapping","handle","__init","mutable","runOnUI","getDataSynchronously","Error","modify","modifier","makeRemote"],"sources":["D:\\vikash\\AgroIntelPro-RN-App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\mutables.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { SharedValue, ShareableSyncDataHolderRef } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from './shareables';\nimport { runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\nexport { stopMapper } from './mappers';\n\nexport function makeUIMutable<T>(\n  initial: T,\n  syncDataHolder?: ShareableSyncDataHolderRef<T>\n) {\n  'worklet';\n\n  const listeners = new Map();\n  let value = initial;\n\n  const self = {\n    set value(newValue) {\n      valueSetter(self, newValue);\n    },\n    get value() {\n      return value;\n    },\n    /**\n     * _value prop should only be accessed by the valueSetter implementation\n     * which may make the decision about updating the mutable value depending\n     * on the provided new value. All other places should only attempt to modify\n     * the mutable by assigning to value prop directly.\n     */\n    set _value(newValue: T) {\n      value = newValue;\n      if (syncDataHolder) {\n        _updateDataSynchronously(\n          syncDataHolder,\n          makeShareableCloneOnUIRecursive(newValue)\n        );\n      }\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      return value;\n    },\n    addListener: (id: number, listener: (newValue: T) => void) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n  return self;\n}\n\nexport function makeMutable<T>(\n  initial: T,\n  oneWayReadsOnly = false\n): SharedValue<T> {\n  let value: T = initial;\n  let syncDataHolder: ShareableSyncDataHolderRef<T> | undefined;\n  if (!oneWayReadsOnly && NativeReanimatedModule.native) {\n    // updates are always synchronous when running on web or in Jest environment\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(\n      makeShareableCloneRecursive(value)\n    );\n    registerShareableMapping(syncDataHolder);\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return makeUIMutable(initial, syncDataHolder);\n    },\n  });\n  // listeners can only work on JS thread on Web and jest environments\n  const listeners = NativeReanimatedModule.native ? undefined : new Map();\n  const mutable = {\n    set value(newValue) {\n      if (NativeReanimatedModule.native) {\n        runOnUI(() => {\n          mutable.value = newValue;\n        })();\n      } else {\n        valueSetter(mutable, newValue);\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue: T) {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Setting `_value` directly is only possible on the UI runtime'\n        );\n      }\n      value = newValue;\n      listeners!.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Reading from `_value` directly is only possible on the UI runtime'\n        );\n      }\n      return value;\n    },\n    modify: (modifier: (value: T) => T) => {\n      runOnUI(() => {\n        mutable.value = modifier(mutable.value);\n      })();\n    },\n    addListener: (id: number, listener: (value: T) => void) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error('adding listeners is only possible on the UI runtime');\n      }\n      listeners!.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'removing listeners is only possible on the UI runtime'\n        );\n      }\n      listeners!.delete(id);\n    },\n    _isReanimatedSharedValue: true,\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\n\nexport function makeRemote<T extends object>(initial: T = {} as T): T {\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return initial;\n    },\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}