{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KeepAwakeEventState = void 0;\nvar KeepAwakeEventState;\nexports.KeepAwakeEventState = KeepAwakeEventState;\n(function (KeepAwakeEventState) {\n  KeepAwakeEventState[\"RELEASE\"] = \"release\";\n})(KeepAwakeEventState || (exports.KeepAwakeEventState = KeepAwakeEventState = {}));","map":{"version":3,"names":["KeepAwakeEventState","exports"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\expo-keep-awake\\src\\KeepAwake.types.ts"],"sourcesContent":["// @needsAudit\nexport type KeepAwakeEvent = {\n  /** Keep awake state. */\n  state: KeepAwakeEventState;\n};\n\n// @needsAudit\nexport enum KeepAwakeEventState {\n  RELEASE = 'release',\n}\n\n// @needsAudit\nexport type KeepAwakeListener = (event: KeepAwakeEvent) => void;\n\nexport type KeepAwakeOptions = {\n  /**\n   * The call will throw an unhandled promise rejection on Android when the original Activity is dead or deactivated.\n   * Set the value to `true` for suppressing the uncaught exception.\n   */\n  suppressDeactivateWarnings?: boolean;\n\n  /**\n   * A callback that is invoked when the keep-awake state changes.\n   * @platform web\n   */\n  listener?: KeepAwakeListener;\n};\n"],"mappings":";;;;AAOA,IAAYA,mBAEX;AAAAC,OAAA,CAAAD,mBAAA,GAAAA,mBAAA;AAFD,WAAYA,mBAAmB;EAC7BA,mBAAA,uBAAmB;AACrB,CAAC,EAFWA,mBAAmB,KAAAC,OAAA,CAAAD,mBAAA,GAAnBA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}