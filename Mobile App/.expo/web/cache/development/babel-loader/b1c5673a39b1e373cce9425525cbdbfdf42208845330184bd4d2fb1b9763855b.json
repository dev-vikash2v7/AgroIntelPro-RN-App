{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\nvar _constants = require(\"./constants\");\nvar _Errors = require(\"./Errors\");\nvar _DraggingGestureHandler = _interopRequireDefault(require(\"./DraggingGestureHandler\"));\nvar _utils = require(\"./utils\");\nvar _excluded = [\"numberOfPointers\", \"direction\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar FlingGestureHandler = function (_DraggingGestureHandl) {\n  (0, _inherits2.default)(FlingGestureHandler, _DraggingGestureHandl);\n  var _super = _createSuper(FlingGestureHandler);\n  function FlingGestureHandler() {\n    (0, _classCallCheck2.default)(this, FlingGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(FlingGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'swipe';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Swipe;\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(event) {\n      this.sendEvent(Object.assign({}, event, {\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      }));\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent(Object.assign({}, event, {\n        eventType: _hammerjs.default.INPUT_END,\n        isFinal: true\n      }));\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this = this;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(FlingGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n      if (this.hasGestureFailed) {\n        return;\n      }\n      if (ev.isFinal) {\n        setTimeout(function () {\n          if (_this.isGestureRunning) {\n            _this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        var gesture = this.hammer.get(this.name);\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return {\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n  }, {\n    key: \"getTargetDirections\",\n    value: function getTargetDirections(direction) {\n      var directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(_hammerjs.default.DIRECTION_RIGHT);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(_hammerjs.default.DIRECTION_LEFT);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(_hammerjs.default.DIRECTION_UP);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(_hammerjs.default.DIRECTION_DOWN);\n      }\n      return directions;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var _this$getConfig = this.getConfig(),\n        direction = _this$getConfig.direction;\n      var directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(_hammerjs.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(_hammerjs.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(_hammerjs.default.DIRECTION_VERTICAL);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(_hammerjs.default.DIRECTION_VERTICAL);\n      }\n      directions = (0, _toConsumableArray2.default)(new Set(directions));\n      if (directions.length === 0) return _hammerjs.default.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return _hammerjs.default.DIRECTION_ALL;\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref, _recognizer, _ref2) {\n      var numberOfPointers = _ref.numberOfPointers;\n      var pointerLength = _ref2.maxPointers;\n      var validPointerCount = pointerLength === numberOfPointers;\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$numberOfPointer = _ref3.numberOfPointers,\n        numberOfPointers = _ref3$numberOfPointer === void 0 ? 1 : _ref3$numberOfPointer,\n        direction = _ref3.direction,\n        props = (0, _objectWithoutProperties2.default)(_ref3, _excluded);\n      if ((0, _utils.isnan)(direction) || typeof direction !== 'number') {\n        throw new _Errors.GesturePropError('direction', direction, 'number');\n      }\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(FlingGestureHandler.prototype), \"updateGestureConfig\", this).call(this, Object.assign({\n        numberOfPointers: numberOfPointers,\n        direction: direction\n      }, props));\n    }\n  }]);\n  return FlingGestureHandler;\n}(_DraggingGestureHandler.default);\nvar _default = FlingGestureHandler;\nexports.default = _default;","map":{"version":3,"names":["_hammerjs","_interopRequireDefault","require","_constants","_Errors","_DraggingGestureHandler","_utils","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","FlingGestureHandler","_DraggingGestureHandl","_inherits2","_super","_classCallCheck2","_createClass2","key","get","Hammer","Swipe","value","onGestureActivated","event","sendEvent","Object","assign","eventType","INPUT_MOVE","isFinal","isFirst","isGestureRunning","hasGestureFailed","INPUT_END","onRawEvent","ev","_this","_get2","setTimeout","cancelEvent","gesture","hammer","name","options","enable","onStart","getHammerConfig","pointers","config","numberOfPointers","direction","getDirection","getTargetDirections","directions","Direction","RIGHT","push","DIRECTION_RIGHT","LEFT","DIRECTION_LEFT","UP","DIRECTION_UP","DOWN","DIRECTION_DOWN","_this$getConfig","getConfig","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","_toConsumableArray2","Set","length","DIRECTION_NONE","DIRECTION_ALL","isGestureEnabledForEvent","_ref","_recognizer","_ref2","pointerLength","maxPointers","validPointerCount","failed","success","updateGestureConfig","_ref3","_ref3$numberOfPointer","props","_objectWithoutProperties2","isnan","GesturePropError","DraggingGestureHandler","_default","exports"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\FlingGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\nimport { HammerInputExt } from './GestureHandler';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event: HammerInputExt) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore FIXME(TS)\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      // @ts-ignore FIXME(TS)\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction: number) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    // @ts-ignore FIXME(TS)\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    { numberOfPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }: any) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}