{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAssets = useAssets;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _Asset = require(\"./Asset\");\nfunction useAssets(moduleIds) {\n  var _useState = (0, _react.useState)(),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    assets = _useState2[0],\n    setAssets = _useState2[1];\n  var _useState3 = (0, _react.useState)(),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  (0, _react.useEffect)(function () {\n    _Asset.Asset.loadAsync(moduleIds).then(setAssets).catch(setError);\n  }, []);\n  return [assets, error];\n}","map":{"version":3,"names":["_react","require","_Asset","useAssets","moduleIds","_useState","useState","_useState2","_slicedToArray2","default","assets","setAssets","_useState3","_useState4","error","setError","useEffect","Asset","loadAsync","then","catch"],"sources":["D:\\vikash\\AgroIntelPro-RN-App\\node_modules\\expo-asset\\src\\AssetHooks.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { Asset } from './Asset';\n\n// @needsAudit\n/**\n * Downloads and stores one or more assets locally.\n * After the assets are loaded, this hook returns a list of asset instances.\n * If something went wrong when loading the assets, an error is returned.\n *\n * > Note, the assets are not \"reloaded\" when you dynamically change the asset list.\n *\n * @return Returns an array containing:\n * - on the first position, a list of all loaded assets. If they aren't loaded yet, this value is\n *   `undefined`.\n * - on the second position, an error which encountered when loading the assets. If there was no\n *   error, this value is `undefined`.\n *\n * @example\n * ```tsx\n * const [assets, error] = useAssets([require('path/to/asset.jpg'), require('path/to/other.png')]);\n *\n * return assets ? <Image source={assets[0]} /> : null;\n * ```\n */\nexport function useAssets(moduleIds: number | number[]): [Asset[] | undefined, Error | undefined] {\n  const [assets, setAssets] = useState<Asset[]>();\n  const [error, setError] = useState<Error>();\n\n  useEffect(() => {\n    Asset.loadAsync(moduleIds).then(setAssets).catch(setError);\n  }, []);\n\n  return [assets, error];\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAD,OAAA;AAuBM,SAAUE,SAASA,CAACC,SAA4B;EACpD,IAAAC,SAAA,GAA4B,IAAAC,eAAQ,GAAW;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAAxCK,MAAM,GAAAH,UAAA;IAAEI,SAAS,GAAAJ,UAAA;EACxB,IAAAK,UAAA,GAA0B,IAAAN,eAAQ,GAAS;IAAAO,UAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA;IAApCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAAG,gBAAS,EAAC,YAAK;IACbC,YAAK,CAACC,SAAS,CAACd,SAAS,CAAC,CAACe,IAAI,CAACR,SAAS,CAAC,CAACS,KAAK,CAACL,QAAQ,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACL,MAAM,EAAEI,KAAK,CAAC;AACxB"},"metadata":{},"sourceType":"script","externalDependencies":[]}