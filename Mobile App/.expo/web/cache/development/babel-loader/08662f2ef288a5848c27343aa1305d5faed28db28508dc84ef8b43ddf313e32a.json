{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkCppVersion = checkCppVersion;\nexports.matchVersion = matchVersion;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _jsVersion = require(\"./jsVersion\");\nfunction checkCppVersion() {\n  var cppVersion = global._REANIMATED_VERSION_CPP;\n  if (cppVersion === undefined) {\n    throw new Error(`[Reanimated] Couldn't determine the version of the native part of Reanimated. Did you forget to re-build the app after upgrading react-native-reanimated? If you use Expo Go, you must use the exact version which is bundled into Expo SDK.`);\n  }\n  var ok = matchVersion(_jsVersion.jsVersion, cppVersion);\n  if (!ok) {\n    throw new Error(`[Reanimated] Mismatch between JavaScript part and native part of Reanimated (${_jsVersion.jsVersion} vs. ${cppVersion}). Did you forget to re-build the app after upgrading react-native-reanimated? If you use Expo Go, you must downgrade to ${cppVersion} which is bundled into Expo SDK.`);\n  }\n}\nfunction matchVersion(version1, version2) {\n  if (version1.match(/^\\d+\\.\\d+\\.\\d+$/) && version2.match(/^\\d+\\.\\d+\\.\\d+$/)) {\n    var _version1$split = version1.split('.'),\n      _version1$split2 = (0, _slicedToArray2.default)(_version1$split, 2),\n      major1 = _version1$split2[0],\n      minor1 = _version1$split2[1];\n    var _version2$split = version2.split('.'),\n      _version2$split2 = (0, _slicedToArray2.default)(_version2$split, 2),\n      major2 = _version2$split2[0],\n      minor2 = _version2$split2[1];\n    return major1 === major2 && minor1 === minor2;\n  } else {\n    return version1 === version2;\n  }\n}","map":{"version":3,"names":["_jsVersion","require","checkCppVersion","cppVersion","global","_REANIMATED_VERSION_CPP","undefined","Error","ok","matchVersion","jsVersion","version1","version2","match","_version1$split","split","_version1$split2","_slicedToArray2","default","major1","minor1","_version2$split","_version2$split2","major2","minor2"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\platform-specific\\checkCppVersion.ts"],"sourcesContent":["import { jsVersion } from './jsVersion';\n\nexport function checkCppVersion() {\n  const cppVersion = global._REANIMATED_VERSION_CPP;\n  if (cppVersion === undefined) {\n    throw new Error(\n      `[Reanimated] Couldn't determine the version of the native part of Reanimated. Did you forget to re-build the app after upgrading react-native-reanimated? If you use Expo Go, you must use the exact version which is bundled into Expo SDK.`\n    );\n  }\n  const ok = matchVersion(jsVersion, cppVersion);\n  if (!ok) {\n    throw new Error(\n      `[Reanimated] Mismatch between JavaScript part and native part of Reanimated (${jsVersion} vs. ${cppVersion}). Did you forget to re-build the app after upgrading react-native-reanimated? If you use Expo Go, you must downgrade to ${cppVersion} which is bundled into Expo SDK.`\n    );\n  }\n}\n\nexport function matchVersion(version1: string, version2: string) {\n  if (version1.match(/^\\d+\\.\\d+\\.\\d+$/) && version2.match(/^\\d+\\.\\d+\\.\\d+$/)) {\n    // x.y.z, compare only major and minor, skip patch\n    const [major1, minor1] = version1.split('.');\n    const [major2, minor2] = version2.split('.');\n    return major1 === major2 && minor1 === minor2;\n  } else {\n    // alpha, beta or rc, compare everything\n    return version1 === version2;\n  }\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAEO,SAASC,eAAeA,CAAA,EAAG;EAChC,IAAMC,UAAU,GAAGC,MAAM,CAACC,uBAAuB;EACjD,IAAIF,UAAU,KAAKG,SAAS,EAAE;IAC5B,MAAM,IAAIC,KAAK,CACZ,8OAA6O,CAC/O;EACH;EACA,IAAMC,EAAE,GAAGC,YAAY,CAACC,oBAAS,EAAEP,UAAU,CAAC;EAC9C,IAAI,CAACK,EAAE,EAAE;IACP,MAAM,IAAID,KAAK,CACZ,gFAA+EG,oBAAU,QAAOP,UAAW,4HAA2HA,UAAW,kCAAiC,CACpR;EACH;AACF;AAEO,SAASM,YAAYA,CAACE,QAAgB,EAAEC,QAAgB,EAAE;EAC/D,IAAID,QAAQ,CAACE,KAAK,CAAC,iBAAiB,CAAC,IAAID,QAAQ,CAACC,KAAK,CAAC,iBAAiB,CAAC,EAAE;IAE1E,IAAAC,eAAA,GAAyBH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC;MAAAC,gBAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,eAAA;MAArCK,MAAM,GAAAH,gBAAA;MAAEI,MAAM,GAAAJ,gBAAA;IACrB,IAAAK,eAAA,GAAyBT,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;MAAAO,gBAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,eAAA;MAArCE,MAAM,GAAAD,gBAAA;MAAEE,MAAM,GAAAF,gBAAA;IACrB,OAAOH,MAAM,KAAKI,MAAM,IAAIH,MAAM,KAAKI,MAAM;EAC/C,CAAC,MAAM;IAEL,OAAOb,QAAQ,KAAKC,QAAQ;EAC9B;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}