{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _State = require(\"../../State\");\nvar _constants = require(\"../constants\");\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\nvar _excluded = [\"enabled\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar NativeViewGestureHandler = function (_GestureHandler) {\n  (0, _inherits2.default)(NativeViewGestureHandler, _GestureHandler);\n  var _super = _createSuper(NativeViewGestureHandler);\n  function NativeViewGestureHandler() {\n    var _this;\n    (0, _classCallCheck2.default)(this, NativeViewGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"buttonRole\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"shouldActivateOnStart\", false);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"disallowInterruption\", false);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"startX\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"startY\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"minDistSq\", _constants.DEFAULT_TOUCH_SLOP * _constants.DEFAULT_TOUCH_SLOP);\n    return _this;\n  }\n  (0, _createClass2.default)(NativeViewGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeViewGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n      this.setShouldCancelWhenOutside(true);\n      this.view.style['touchAction'] = 'auto';\n      this.view.style['WebkitTouchCallout'] = 'auto';\n      if (this.view.hasAttribute('role')) {\n        this.buttonRole = true;\n      } else {\n        this.buttonRole = false;\n      }\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeViewGestureHandler.prototype), \"updateGestureConfig\", this).call(this, Object.assign({\n        enabled: enabled\n      }, props));\n      if (this.config.shouldActivateOnStart !== undefined) {\n        this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n      }\n      if (this.config.disallowInterruption !== undefined) {\n        this.disallowInterruption = this.config.disallowInterruption;\n      }\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeViewGestureHandler.prototype), \"resetConfig\", this).call(this);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeViewGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n      this.newPointerAction();\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeViewGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n      this.newPointerAction();\n    }\n  }, {\n    key: \"newPointerAction\",\n    value: function newPointerAction() {\n      this.startX = this.tracker.getLastAvgX();\n      this.startY = this.tracker.getLastAvgY();\n      if (this.currentState !== _State.State.UNDETERMINED) {\n        return;\n      }\n      this.begin();\n      if (this.buttonRole) {\n        this.activate();\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tracker.track(event);\n      var dx = this.startX - this.tracker.getLastAvgX();\n      var dy = this.startY - this.tracker.getLastAvgY();\n      var distSq = dx * dx + dy * dy;\n      if (distSq >= this.minDistSq) {\n        if (this.buttonRole && this.currentState === _State.State.ACTIVE) {\n          this.cancel();\n        } else if (!this.buttonRole && this.currentState === _State.State.BEGAN) {\n          this.activate();\n        }\n      }\n    }\n  }, {\n    key: \"onPointerOut\",\n    value: function onPointerOut() {\n      if (this.currentState === _State.State.BEGAN || this.currentState === _State.State.ACTIVE) {\n        this.cancel();\n      }\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeViewGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n      this.onUp(event);\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeViewGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n      this.onUp(event);\n    }\n  }, {\n    key: \"onUp\",\n    value: function onUp(event) {\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.tracker.getTrackedPointersCount() === 0) {\n        if (this.currentState === _State.State.ACTIVE) {\n          this.end();\n        } else {\n          this.fail();\n        }\n      }\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler) {\n      if ((0, _get2.default)((0, _getPrototypeOf2.default)(NativeViewGestureHandler.prototype), \"shouldRecognizeSimultaneously\", this).call(this, handler)) {\n        return true;\n      }\n      if (handler instanceof NativeViewGestureHandler && handler.getState() === _State.State.ACTIVE && handler.disallowsInterruption()) {\n        return false;\n      }\n      var canBeInterrupted = !this.disallowInterruption;\n      if (this.currentState === _State.State.ACTIVE && handler.getState() === _State.State.ACTIVE && canBeInterrupted) {\n        return false;\n      }\n      return this.currentState === _State.State.ACTIVE && canBeInterrupted && handler.getTag() > 0;\n    }\n  }, {\n    key: \"shouldBeCancelledByOther\",\n    value: function shouldBeCancelledByOther(_handler) {\n      return !this.disallowInterruption;\n    }\n  }, {\n    key: \"disallowsInterruption\",\n    value: function disallowsInterruption() {\n      return this.disallowInterruption;\n    }\n  }]);\n  return NativeViewGestureHandler;\n}(_GestureHandler2.default);\nexports.default = NativeViewGestureHandler;","map":{"version":3,"names":["_State","require","_constants","_GestureHandler2","_interopRequireDefault","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","NativeViewGestureHandler","_GestureHandler","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty","_assertThisInitialized2","DEFAULT_TOUCH_SLOP","_createClass2","key","value","init","ref","propsRef","_get2","setShouldCancelWhenOutside","view","style","hasAttribute","buttonRole","updateGestureConfig","_ref","_ref$enabled","enabled","props","_objectWithoutProperties2","Object","assign","config","shouldActivateOnStart","undefined","disallowInterruption","resetConfig","onPointerDown","event","tracker","addToTracker","newPointerAction","onPointerAdd","startX","getLastAvgX","startY","getLastAvgY","currentState","State","UNDETERMINED","begin","activate","onPointerMove","track","dx","dy","distSq","minDistSq","ACTIVE","cancel","BEGAN","onPointerOut","onPointerUp","onUp","onPointerRemove","removeFromTracker","pointerId","getTrackedPointersCount","end","fail","shouldRecognizeSimultaneously","handler","getState","disallowsInterruption","canBeInterrupted","getTag","shouldBeCancelledByOther","_handler","GestureHandler","exports"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\NativeViewGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nexport default class NativeViewGestureHandler extends GestureHandler {\n  private buttonRole!: boolean;\n\n  //TODO: Implement logic for activation on start\n  //@ts-ignore Logic yet to be implemented\n  private shouldActivateOnStart = false;\n  private disallowInterruption = false;\n\n  private startX = 0;\n  private startY = 0;\n  private minDistSq = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n\n    this.setShouldCancelWhenOutside(true);\n\n    this.view.style['touchAction'] = 'auto';\n\n    //@ts-ignore Turns on defualt touch behavior on Safari\n    this.view.style['WebkitTouchCallout'] = 'auto';\n\n    if (this.view.hasAttribute('role')) {\n      this.buttonRole = true;\n    } else {\n      this.buttonRole = false;\n    }\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.shouldActivateOnStart !== undefined) {\n      this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n    }\n    if (this.config.disallowInterruption !== undefined) {\n      this.disallowInterruption = this.config.disallowInterruption;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.newPointerAction();\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    this.startX = this.tracker.getLastAvgX();\n    this.startY = this.tracker.getLastAvgY();\n\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.begin();\n    if (this.buttonRole) {\n      this.activate();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    const dx = this.startX - this.tracker.getLastAvgX();\n    const dy = this.startY - this.tracker.getLastAvgY();\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq >= this.minDistSq) {\n      if (this.buttonRole && this.currentState === State.ACTIVE) {\n        this.cancel();\n      } else if (!this.buttonRole && this.currentState === State.BEGAN) {\n        this.activate();\n      }\n    }\n  }\n\n  protected onPointerOut(): void {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      this.cancel();\n    }\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.tracker.getTrackedPointersCount() === 0) {\n      if (this.currentState === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (super.shouldRecognizeSimultaneously(handler)) {\n      return true;\n    }\n\n    if (\n      handler instanceof NativeViewGestureHandler &&\n      handler.getState() === State.ACTIVE &&\n      handler.disallowsInterruption()\n    ) {\n      return false;\n    }\n\n    const canBeInterrupted = !this.disallowInterruption;\n\n    if (\n      this.currentState === State.ACTIVE &&\n      handler.getState() === State.ACTIVE &&\n      canBeInterrupted\n    ) {\n      return false;\n    }\n\n    return (\n      this.currentState === State.ACTIVE &&\n      canBeInterrupted &&\n      handler.getTag() > 0\n    );\n  }\n\n  public shouldBeCancelledByOther(_handler: GestureHandler): boolean {\n    return !this.disallowInterruption;\n  }\n\n  public disallowsInterruption(): boolean {\n    return this.disallowInterruption;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}