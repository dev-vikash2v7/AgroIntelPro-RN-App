{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = AppNavigator;\nvar _native = require(\"@react-navigation/native\");\nvar _nativeStack = require(\"@react-navigation/native-stack\");\nvar _reactNative = require(\"react-native\");\nvar _HomeScreen = _interopRequireDefault(require(\"./Screens/HomeScreen\"));\nvar _Header = _interopRequireDefault(require(\"./Components/Header\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _expo = require(\"expo\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"E:\\\\React Native Android Apps\\\\AgrI Intel Pro - Hackaton Project\\\\src\\\\EXPO\\\\AppNavigator.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar Stack = (0, _nativeStack.createNativeStackNavigator)();\nfunction AppNavigator() {\n  var _this = this;\n  (0, _react.useEffect)(function () {\n    _expo.Font.loadAsync({\n      FontAwesome: require(\"../node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome.ttf\")\n    }), _expo.Font.loadAsync({\n      Ionicons: require(\"../node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf\")\n    }), _expo.Font.loadAsync({\n      Entypo: require(\"../node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Entypo.ttf\")\n    });\n  }, []);\n  return (0, _jsxRuntime.jsx)(_native.NavigationContainer, {\n    children: (0, _jsxRuntime.jsx)(Stack.Navigator, {\n      initialRouteName: \"HomeScreen\",\n      children: (0, _jsxRuntime.jsx)(Stack.Screen, {\n        name: \"HomeScreen\",\n        component: _HomeScreen.default,\n        options: {\n          header: function header() {\n            return (0, _jsxRuntime.jsx)(_Header.default, {});\n          }\n        }\n      })\n    })\n  });\n}","map":{"version":3,"names":["_native","require","_nativeStack","_reactNative","_HomeScreen","_interopRequireDefault","_Header","_react","_interopRequireWildcard","_expo","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Stack","createNativeStackNavigator","AppNavigator","_this","useEffect","Font","loadAsync","FontAwesome","Ionicons","Entypo","jsx","NavigationContainer","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","options","header"],"sources":["E:/React Native Android Apps/AgrI Intel Pro - Hackaton Project/src/EXPO/AppNavigator.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { Text } from 'react-native';\r\nimport HomeScreen from './Screens/HomeScreen';\r\nimport Header from './Components/Header';\r\nimport React,{useEffect , useState} from 'react'\r\n// import LogInScreen from './Screens/LogInScreen';\r\n// import SignUpScreen from './Screens/SignUpScreen';\r\n\r\nimport {Font} from 'expo';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nexport default function AppNavigator() {\r\n\r\n  useEffect(()=>{\r\n    Font.loadAsync({FontAwesome: require(\"../node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome.ttf\")}),\r\n    Font.loadAsync({Ionicons: require(\"../node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf\")}),\r\n    Font.loadAsync({Entypo: require(\"../node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Entypo.ttf\")})\r\n  },[])\r\n\r\n  return (\r\n    <NavigationContainer >\r\n      \r\n   <Stack.Navigator     initialRouteName='HomeScreen'>\r\n\r\n      <Stack.Screen \r\n      name='HomeScreen' \r\n      component={HomeScreen} \r\n      options={{header: () => <Header />, }} />\r\n\r\n      {/* <Stack.Screen \r\n      name='SignUp' \r\n      component={SignUpScreen} \r\n       options={{headerShown: false}}\r\n       /> \r\n       \r\n       <Stack.Screen \r\n      name='LogIn' \r\n      component={LogInScreen} \r\n       options={{headerShown: false}}\r\n       /> */}\r\n   </Stack.Navigator>\r\n      \r\n      </NavigationContainer>\r\n\r\n    \r\n  );\r\n}"],"mappings":";;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,WAAA,GAAAC,sBAAA,CAAAJ,OAAA;AACA,IAAAK,OAAA,GAAAD,sBAAA,CAAAJ,OAAA;AACA,IAAAM,MAAA,GAAAC,uBAAA,CAAAP,OAAA;AAIA,IAAAQ,KAAA,GAAAR,OAAA;AAA0B,IAAAS,WAAA,GAAAT,OAAA;AAAA,IAAAU,YAAA;AAAA,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAL,wBAAAS,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAE1B,IAAMW,KAAK,GAAG,IAAAC,uCAA0B,EAAC,CAAC;AAE3B,SAASC,YAAYA,CAAA,EAAG;EAAA,IAAAC,KAAA;EAErC,IAAAC,gBAAS,EAAC,YAAI;IACZC,UAAI,CAACC,SAAS,CAAC;MAACC,WAAW,EAAExC,OAAO,CAAC,iGAAiG;IAAC,CAAC,CAAC,EACzIsC,UAAI,CAACC,SAAS,CAAC;MAACE,QAAQ,EAAEzC,OAAO,CAAC,8FAA8F;IAAC,CAAC,CAAC,EACnIsC,UAAI,CAACC,SAAS,CAAC;MAACG,MAAM,EAAE1C,OAAO,CAAC,4FAA4F;IAAC,CAAC,CAAC;EACjI,CAAC,EAAC,EAAE,CAAC;EAEL,OACE,IAAAS,WAAA,CAAAkC,GAAA,EAAC5C,OAAA,CAAA6C,mBAAmB;IAAAC,QAAA,EAErB,IAAApC,WAAA,CAAAkC,GAAA,EAACV,KAAK,CAACa,SAAS;MAAKC,gBAAgB,EAAC,YAAY;MAAAF,QAAA,EAE/C,IAAApC,WAAA,CAAAkC,GAAA,EAACV,KAAK,CAACe,MAAM;QACbC,IAAI,EAAC,YAAY;QACjBC,SAAS,EAAEC,mBAAW;QACtBC,OAAO,EAAE;UAACC,MAAM,EAAE,SAAAA,OAAA;YAAA,OAAM,IAAA5C,WAAA,CAAAkC,GAAA,EAACtC,OAAA,CAAAa,OAAM,IAAE,CAAC;UAAA;QAAE;MAAE,CAAE;IAAC,CAa3B;EAAC,CAEM,CAAC;AAI5B"},"metadata":{},"sourceType":"script","externalDependencies":[]}