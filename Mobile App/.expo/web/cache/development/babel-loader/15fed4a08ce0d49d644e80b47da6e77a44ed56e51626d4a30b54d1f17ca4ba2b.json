{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _createForOfIteratorHelperLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _RefreshControl = _interopRequireDefault(require(\"../../../exports/RefreshControl\"));\nvar _ScrollView = _interopRequireDefault(require(\"../../../exports/ScrollView\"));\nvar _View = _interopRequireDefault(require(\"../../../exports/View\"));\nvar _StyleSheet = _interopRequireDefault(require(\"../../../exports/StyleSheet\"));\nvar _findNodeHandle = _interopRequireDefault(require(\"../../../exports/findNodeHandle\"));\nvar _Batchinator = _interopRequireDefault(require(\"../Batchinator\"));\nvar _clamp = _interopRequireDefault(require(\"../Utilities/clamp\"));\nvar _infoLog = _interopRequireDefault(require(\"../infoLog\"));\nvar _CellRenderMask = require(\"./CellRenderMask\");\nvar _ChildListCollection = _interopRequireDefault(require(\"./ChildListCollection\"));\nvar _FillRateHelper = _interopRequireDefault(require(\"../FillRateHelper\"));\nvar _StateSafePureComponent = _interopRequireDefault(require(\"./StateSafePureComponent\"));\nvar _ViewabilityHelper = _interopRequireDefault(require(\"../ViewabilityHelper\"));\nvar _VirtualizedListCellRenderer = _interopRequireDefault(require(\"./VirtualizedListCellRenderer\"));\nvar _VirtualizedListContext = require(\"./VirtualizedListContext.js\");\nvar _VirtualizeUtils = require(\"../VirtualizeUtils\");\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar _nullthrows = _interopRequireDefault(require(\"nullthrows\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold !== null && onStartReachedThreshold !== void 0 ? onStartReachedThreshold : 2;\n}\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\nvar VirtualizedList = function (_StateSafePureCompone) {\n  (0, _inherits2.default)(VirtualizedList, _StateSafePureCompone);\n  var _super = _createSuper(VirtualizedList);\n  function VirtualizedList(_props) {\n    var _this2;\n    (0, _classCallCheck2.default)(this, VirtualizedList);\n    var _this$props$updateCel;\n    _this2 = _super.call(this, _props);\n    _this2._getScrollMetrics = function () {\n      return _this2._scrollMetrics;\n    };\n    _this2._getOutermostParentListRef = function () {\n      if (_this2._isNestedWithSameOrientation()) {\n        return _this2.context.getOutermostParentListRef();\n      } else {\n        return (0, _assertThisInitialized2.default)(_this2);\n      }\n    };\n    _this2._registerAsNestedChild = function (childList) {\n      _this2._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (_this2._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    _this2._unregisterAsNestedChild = function (childList) {\n      _this2._nestedChildLists.remove(childList.ref);\n    };\n    _this2._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this2._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    _this2._getSpacerKey = function (isVertical) {\n      return isVertical ? 'height' : 'width';\n    };\n    _this2._averageCellLength = 0;\n    _this2._cellRefs = {};\n    _this2._frames = {};\n    _this2._footerLength = 0;\n    _this2._hasTriggeredInitialScrollToIndex = false;\n    _this2._hasInteracted = false;\n    _this2._hasMore = false;\n    _this2._hasWarned = {};\n    _this2._headerLength = 0;\n    _this2._hiPriInProgress = false;\n    _this2._highestMeasuredFrameIndex = 0;\n    _this2._indicesToKeys = new Map();\n    _this2._lastFocusedCellKey = null;\n    _this2._nestedChildLists = new _ChildListCollection.default();\n    _this2._offsetFromParentVirtualizedList = 0;\n    _this2._prevParentOffset = 0;\n    _this2._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    _this2._scrollRef = null;\n    _this2._sentStartForContentLength = 0;\n    _this2._sentEndForContentLength = 0;\n    _this2._totalCellLength = 0;\n    _this2._totalCellsMeasured = 0;\n    _this2._viewabilityTuples = [];\n    _this2._captureScrollRef = function (ref) {\n      _this2._scrollRef = ref;\n    };\n    _this2._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n      if (_this2._isNestedWithSameOrientation()) {\n        return React.createElement(_View.default, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        (0, _invariant.default)(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return React.createElement(_ScrollView.default, (0, _extends2.default)({}, props, {\n          refreshControl: props.refreshControl == null ? React.createElement(_RefreshControl.default, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset\n          }) : props.refreshControl\n        }));\n      } else {\n        return React.createElement(_ScrollView.default, props);\n      }\n    };\n    _this2._onCellLayout = function (e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: _this2._selectOffset(layout),\n        length: _this2._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = _this2._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        _this2._totalCellLength += next.length - (curr ? curr.length : 0);\n        _this2._totalCellsMeasured += curr ? 0 : 1;\n        _this2._averageCellLength = _this2._totalCellLength / _this2._totalCellsMeasured;\n        _this2._frames[cellKey] = next;\n        _this2._highestMeasuredFrameIndex = Math.max(_this2._highestMeasuredFrameIndex, index);\n        _this2._scheduleCellsToRenderUpdate();\n      } else {\n        _this2._frames[cellKey].inLayout = true;\n      }\n      _this2._triggerRemeasureForChildListsInCell(cellKey);\n      _this2._computeBlankness();\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n    };\n    _this2._onCellUnmount = function (cellKey) {\n      delete _this2._cellRefs[cellKey];\n      var curr = _this2._frames[cellKey];\n      if (curr) {\n        _this2._frames[cellKey] = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    _this2._onLayout = function (e) {\n      if (_this2._isNestedWithSameOrientation()) {\n        _this2.measureLayoutRelativeToContainingList();\n      } else {\n        _this2._scrollMetrics.visibleLength = _this2._selectLength(e.nativeEvent.layout);\n      }\n      _this2.props.onLayout && _this2.props.onLayout(e);\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEdgeReached();\n    };\n    _this2._onLayoutEmpty = function (e) {\n      _this2.props.onLayout && _this2.props.onLayout(e);\n    };\n    _this2._onLayoutFooter = function (e) {\n      _this2._triggerRemeasureForChildListsInCell(_this2._getFooterCellKey());\n      _this2._footerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onLayoutHeader = function (e) {\n      _this2._headerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this2.props.initialScrollIndex != null && _this2.props.initialScrollIndex > 0 && !_this2._hasTriggeredInitialScrollToIndex) {\n        if (_this2.props.contentOffset == null) {\n          if (_this2.props.initialScrollIndex < _this2.props.getItemCount(_this2.props.data)) {\n            _this2.scrollToIndex({\n              animated: false,\n              index: (0, _nullthrows.default)(_this2.props.initialScrollIndex)\n            });\n          } else {\n            _this2.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        _this2._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (_this2.props.onContentSizeChange) {\n        _this2.props.onContentSizeChange(width, height);\n      }\n      _this2._scrollMetrics.contentLength = _this2._selectLength({\n        height: height,\n        width: width\n      });\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEdgeReached();\n    };\n    _this2._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this2._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      var contentLength = _this2._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n    _this2._onScroll = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScroll(e);\n      });\n      if (_this2.props.onScroll) {\n        _this2.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = _this2._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = _this2._selectLength(e.nativeEvent.contentSize);\n      var offset = _this2._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      if (_this2._isNestedWithSameOrientation()) {\n        if (_this2._scrollMetrics.contentLength === 0) {\n          return;\n        }\n        var _this$_convertParentS = _this2._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = _this2._scrollMetrics.timestamp ? Math.max(1, timestamp - _this2._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && _this2._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this2._hasWarned.perf) {\n        (0, _infoLog.default)('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this2._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this2._hasWarned.perf = true;\n      }\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      _this2._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength,\n        zoomScale: zoomScale\n      };\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n      if (!_this2.props) {\n        return;\n      }\n      _this2._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        _this2._fillRateHelper.activate();\n      }\n      _this2._computeBlankness();\n      _this2._scheduleCellsToRenderUpdate();\n    };\n    _this2._onScrollBeginDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScrollBeginDrag(e);\n      });\n      _this2._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      _this2._hasInteracted = true;\n      _this2.props.onScrollBeginDrag && _this2.props.onScrollBeginDrag(e);\n    };\n    _this2._onScrollEndDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        _this2._scrollMetrics.velocity = _this2._selectOffset(velocity);\n      }\n      _this2._computeBlankness();\n      _this2.props.onScrollEndDrag && _this2.props.onScrollEndDrag(e);\n    };\n    _this2._onMomentumScrollBegin = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollBegin(e);\n      });\n      _this2.props.onMomentumScrollBegin && _this2.props.onMomentumScrollBegin(e);\n    };\n    _this2._onMomentumScrollEnd = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollEnd(e);\n      });\n      _this2._scrollMetrics.velocity = 0;\n      _this2._computeBlankness();\n      _this2.props.onMomentumScrollEnd && _this2.props.onMomentumScrollEnd(e);\n    };\n    _this2._updateCellsToRender = function () {\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n      _this2.setState(function (state, props) {\n        var cellsAroundViewport = _this2._adjustCellsAroundViewport(props, state.cellsAroundViewport);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, _this2._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport: cellsAroundViewport,\n          renderMask: renderMask\n        };\n      });\n    };\n    _this2._createViewToken = function (index, isViewable, props) {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: _this2._keyExtractor(item, index, props),\n        isViewable: isViewable\n      };\n    };\n    _this2._getOffsetApprox = function (index, props) {\n      if (Number.isInteger(index)) {\n        return _this2.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = _this2.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    _this2.__getFrameMetricsApprox = function (index, props) {\n      var frame = _this2._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        (0, _invariant.default)(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this2._averageCellLength,\n          offset: _this2._averageCellLength * index\n        };\n      }\n    };\n    _this2._getFrameMetrics = function (index, props) {\n      var data = props.data,\n        getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = _this2._frames[_this2._keyExtractor(item, index, props)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    _this2._getNonViewportRenderRegions = function (props) {\n      if (!(_this2._lastFocusedCellKey && _this2._cellRefs[_this2._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = _this2._cellRefs[_this2._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n      if (focusedCellIndex >= itemCount || _this2._keyExtractor(props.getItem(props.data, focusedCellIndex), focusedCellIndex, props) !== _this2._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < _this2._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += _this2.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < _this2._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += _this2.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first: first,\n        last: last\n      }];\n    };\n    _this2._checkProps(_props);\n    _this2._fillRateHelper = new _FillRateHelper.default(_this2._getFrameMetrics);\n    _this2._updateCellsToRenderBatcher = new _Batchinator.default(_this2._updateCellsToRender, (_this$props$updateCel = _this2.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (_this2.props.viewabilityConfigCallbackPairs) {\n      _this2._viewabilityTuples = _this2.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new _ViewabilityHelper.default(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else {\n      var _this$props3 = _this2.props,\n        onViewableItemsChanged = _this$props3.onViewableItemsChanged,\n        viewabilityConfig = _this$props3.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        _this2._viewabilityTuples.push({\n          viewabilityHelper: new _ViewabilityHelper.default(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    _this2.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\n    };\n    _this2.invertedWheelEventHandler = function (ev) {\n      var scrollOffset = _this2.props.horizontal ? ev.target.scrollLeft : ev.target.scrollTop;\n      var scrollLength = _this2.props.horizontal ? ev.target.scrollWidth : ev.target.scrollHeight;\n      var clientLength = _this2.props.horizontal ? ev.target.clientWidth : ev.target.clientHeight;\n      var isEventTargetScrollable = scrollLength > clientLength;\n      var delta = _this2.props.horizontal ? ev.deltaX || ev.wheelDeltaX : ev.deltaY || ev.wheelDeltaY;\n      var leftoverDelta = delta;\n      if (isEventTargetScrollable) {\n        leftoverDelta = delta < 0 ? Math.min(delta + scrollOffset, 0) : Math.max(delta - (scrollLength - clientLength - scrollOffset), 0);\n      }\n      var targetDelta = delta - leftoverDelta;\n      if (_this2.props.inverted && _this2._scrollRef && _this2._scrollRef.getScrollableNode) {\n        var node = _this2._scrollRef.getScrollableNode();\n        if (_this2.props.horizontal) {\n          ev.target.scrollLeft += targetDelta;\n          var nextScrollLeft = node.scrollLeft - leftoverDelta;\n          node.scrollLeft = !_this2.props.getItemLayout ? Math.min(nextScrollLeft, _this2._totalCellLength) : nextScrollLeft;\n        } else {\n          ev.target.scrollTop += targetDelta;\n          var nextScrollTop = node.scrollTop - leftoverDelta;\n          node.scrollTop = !_this2.props.getItemLayout ? Math.min(nextScrollTop, _this2._totalCellLength) : nextScrollTop;\n        }\n        ev.preventDefault();\n      }\n    };\n    return _this2;\n  }\n  (0, _createClass2.default)(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n      if (veryLast < 0) {\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n      var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n      (0, _invariant.default)(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n      (0, _invariant.default)(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n      (0, _invariant.default)(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        (0, _invariant.default)(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n      var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n      var itemCount = getItemCount(data);\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex((0, _objectSpread2.default)((0, _objectSpread2.default)({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n        offset = params.offset;\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.recordInteraction();\n      });\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"_checkProps\",\n    value: function _checkProps(props) {\n      var onScroll = props.onScroll,\n        windowSize = props.windowSize,\n        getItemCount = props.getItemCount,\n        data = props.data,\n        initialScrollIndex = props.initialScrollIndex;\n      (0, _invariant.default)(!onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n      (0, _invariant.default)(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n      (0, _invariant.default)(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n      var itemCount = getItemCount(data);\n      if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n        console.warn(\"initialScrollIndex \\\"\" + initialScrollIndex + \"\\\" is not valid (list has \" + itemCount + \" items)\");\n        this._hasWarned.initialScrollIndex = true;\n      }\n      if (__DEV__ && !this._hasWarned.flexWrap) {\n        var flatStyles = _StyleSheet.default.flatten(this.props.contentContainerStyle);\n        if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n          console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n          this._hasWarned.flexWrap = true;\n        }\n      }\n    }\n  }, {\n    key: \"_adjustCellsAroundViewport\",\n    value: function _adjustCellsAroundViewport(props, cellsAroundViewport) {\n      var data = props.data,\n        getItemCount = props.getItemCount;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n      var _this$_scrollMetrics = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics.contentLength,\n        offset = _this$_scrollMetrics.offset,\n        visibleLength = _this$_scrollMetrics.visibleLength;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (visibleLength <= 0 || contentLength <= 0) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      var newCellsAroundViewport;\n      if (props.disableVirtualization) {\n        var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n        newCellsAroundViewport = {\n          first: 0,\n          last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n        };\n      } else {\n        if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\n          return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n        }\n        newCellsAroundViewport = (0, _VirtualizeUtils.computeWindowedRenderLimits)(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n        (0, _invariant.default)(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n      }\n      if (this._nestedChildLists.size() > 0) {\n        var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n        newCellsAroundViewport.last = childIdx !== null && childIdx !== void 0 ? childIdx : newCellsAroundViewport.last;\n      }\n      return newCellsAroundViewport;\n    }\n  }, {\n    key: \"_findFirstChildWithMore\",\n    value: function _findFirstChildWithMore(first, last) {\n      for (var ii = first; ii <= last; ii++) {\n        var cellKeyForIndex = this._indicesToKeys.get(ii);\n        if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, function (childList) {\n          return childList.hasMore();\n        })) {\n          return ii;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          ref: this,\n          cellKey: this.context.cellKey\n        });\n      }\n      this.setupWebWheelHandler();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          ref: this\n        });\n      }\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n      this._fillRateHelper.deactivateAndFlush();\n      this.teardownWebWheelHandler();\n    }\n  }, {\n    key: \"setupWebWheelHandler\",\n    value: function setupWebWheelHandler() {\n      var _this3 = this;\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n      } else {\n        setTimeout(function () {\n          return _this3.setupWebWheelHandler();\n        }, 50);\n        return;\n      }\n    }\n  }, {\n    key: \"teardownWebWheelHandler\",\n    value: function teardownWebWheelHandler() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n      }\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this = this;\n      var _this$props4 = this.props,\n        CellRendererComponent = _this$props4.CellRendererComponent,\n        ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n        ListHeaderComponent = _this$props4.ListHeaderComponent,\n        ListItemComponent = _this$props4.ListItemComponent,\n        data = _this$props4.data,\n        debug = _this$props4.debug,\n        getItem = _this$props4.getItem,\n        getItemCount = _this$props4.getItemCount,\n        getItemLayout = _this$props4.getItemLayout,\n        horizontal = _this$props4.horizontal,\n        renderItem = _this$props4.renderItem;\n      var stickyOffset = ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n      var _loop = function _loop() {\n        var item = getItem(data, ii);\n        var key = _this._keyExtractor(item, ii, _this.props);\n        _this._indicesToKeys.set(ii, key);\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n        var shouldListenForLayout = getItemLayout == null || debug || _this._fillRateHelper.enabled();\n        cells.push(React.createElement(_VirtualizedListCellRenderer.default, (0, _extends2.default)({\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          ListItemComponent: ListItemComponent,\n          cellKey: key,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          key: key,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this._onUpdateSeparators,\n          onCellFocusCapture: function onCellFocusCapture(e) {\n            return _this._onCellFocusCapture(key);\n          },\n          onUnmount: _this._onCellUnmount,\n          ref: function ref(_ref) {\n            _this._cellRefs[key] = _ref;\n          },\n          renderItem: renderItem\n        }, shouldListenForLayout && {\n          onCellLayout: _this._onCellLayout\n        })));\n        prevCellKey = key;\n      };\n      for (var ii = first; ii <= last; ii++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index, props) {\n      if (props.keyExtractor != null) {\n        return props.keyExtractor(item, index);\n      }\n      var key = (0, _VirtualizeUtils.keyExtractor)(item, index);\n      if (key === String(index)) {\n        _usedIndexForKey = true;\n        if (item.type && item.type.displayName) {\n          _keylessItemComponentName = item.type.displayName;\n        }\n      }\n      return key;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      this._checkProps(this.props);\n      var _this$props5 = this.props,\n        ListEmptyComponent = _this$props5.ListEmptyComponent,\n        ListFooterComponent = _this$props5.ListFooterComponent,\n        ListHeaderComponent = _this$props5.ListHeaderComponent;\n      var _this$props6 = this.props,\n        data = _this$props6.data,\n        horizontal = _this$props6.horizontal;\n      var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n        var _element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, null);\n        cells.push(React.createElement(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-header',\n          key: \"$header\"\n        }, React.createElement(_View.default, {\n          onLayout: this._onLayoutHeader,\n          style: [inversionStyle, this.props.ListHeaderComponentStyle]\n        }, _element)));\n      }\n      var itemCount = this.props.getItemCount(data);\n      if (itemCount === 0 && ListEmptyComponent) {\n        var _element2 = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, null);\n        cells.push(React.createElement(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-empty',\n          key: \"$empty\"\n        }, React.cloneElement(_element2, {\n          onLayout: function onLayout(event) {\n            _this4._onLayoutEmpty(event);\n            if (_element2.props.onLayout) {\n              _element2.props.onLayout(event);\n            }\n          },\n          style: [inversionStyle, _element2.props.style]\n        })));\n      }\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = this._getSpacerKey(!horizontal);\n        var renderRegions = this.state.renderMask.enumerateRegions();\n        var lastSpacer = findLastWhere(renderRegions, function (r) {\n          return r.isSpacer;\n        });\n        for (var _iterator = (0, _createForOfIteratorHelperLoose2.default)(renderRegions), _step; !(_step = _iterator()).done;) {\n          var section = _step.value;\n          if (section.isSpacer) {\n            if (this.props.disableVirtualization) {\n              continue;\n            }\n            var isLastSpacer = section === lastSpacer;\n            var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n            var last = constrainToMeasured ? (0, _clamp.default)(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n            var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n            var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n            var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n            cells.push(React.createElement(_View.default, {\n              key: \"$spacer-\" + section.first,\n              style: (0, _defineProperty2.default)({}, spacerKey, spacerSize)\n            }));\n          } else {\n            this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n          }\n        }\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n      }\n      if (ListFooterComponent) {\n        var _element3 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, null);\n        cells.push(React.createElement(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          key: \"$footer\"\n        }, React.createElement(_View.default, {\n          onLayout: this._onLayoutFooter,\n          style: [inversionStyle, this.props.ListFooterComponentStyle]\n        }, _element3)));\n      }\n      var scrollProps = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollBegin: this._onMomentumScrollBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n      this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n      var innerRet = React.createElement(_VirtualizedListContext.VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild\n        }\n      }, React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n        ref: this._captureScrollRef\n      }, cells));\n      var ret = innerRet;\n      if (this.props.debug) {\n        return React.createElement(_View.default, {\n          style: styles.debug\n        }, ret, this._renderDebugOverlay());\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props7 = this.props,\n        data = _this$props7.data,\n        extraData = _this$props7.extraData;\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n      var hiPriInProgress = this._hiPriInProgress;\n      this._scheduleCellsToRenderUpdate();\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellFocusCapture\",\n    value: function _onCellFocusCapture(cellKey) {\n      this._lastFocusedCellKey = cellKey;\n      this._updateCellsToRender();\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      this._nestedChildLists.forEachInCell(cellKey, function (childList) {\n        childList.measureLayoutRelativeToContainingList();\n      });\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this5 = this;\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this5._offsetFromParentVirtualizedList = _this5._selectOffset({\n            x: x,\n            y: y\n          });\n          _this5._scrollMetrics.contentLength = _this5._selectLength({\n            width: width,\n            height: height\n          });\n          var scrollMetrics = _this5._convertParentScrollMetrics(_this5.context.getScrollMetrics());\n          var metricsChanged = _this5._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this5._scrollMetrics.offset !== scrollMetrics.offset;\n          if (metricsChanged) {\n            _this5._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            _this5._scrollMetrics.offset = scrollMetrics.offset;\n            _this5._nestedChildLists.forEach(function (childList) {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this.__getFrameMetricsApprox(ii, this.props);\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n      var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n      var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return React.createElement(_View.default, {\n        style: [styles.debugOverlayBase, styles.debugOverlay]\n      }, framesInLayout.map(function (f, ii) {\n        return React.createElement(_View.default, {\n          key: 'f' + ii,\n          style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n            top: f.offset * normalize,\n            height: f.length * normalize\n          }]\n        });\n      }), React.createElement(_View.default, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n          top: windowTop * normalize,\n          height: windowLen * normalize\n        }]\n      }), React.createElement(_View.default, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n          top: visTop * normalize,\n          height: visLen * normalize\n        }]\n      }));\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEdgeReached\",\n    value: function _maybeCallOnEdgeReached() {\n      var _this$props8 = this.props,\n        data = _this$props8.data,\n        getItemCount = _this$props8.getItemCount,\n        onStartReached = _this$props8.onStartReached,\n        onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n        onEndReached = _this$props8.onEndReached,\n        onEndReachedThreshold = _this$props8.onEndReachedThreshold,\n        initialScrollIndex = _this$props8.initialScrollIndex;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n      var distanceFromStart = offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n        distanceFromStart = 0;\n      }\n      if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n        distanceFromEnd = 0;\n      }\n      var DEFAULT_THRESHOLD_PX = 2;\n      var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var isWithinStartThreshold = distanceFromStart <= startThreshold;\n      var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n      if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n        if (!initialScrollIndex || this._scrollMetrics.timestamp !== 0) {\n          this._sentStartForContentLength = this._scrollMetrics.contentLength;\n          onStartReached({\n            distanceFromStart: distanceFromStart\n          });\n        }\n      } else {\n        this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n        this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state$cellsArou = this.state.cellsAroundViewport,\n        first = _this$state$cellsArou.first,\n        last = _this$state$cellsArou.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n      if (first > 0) {\n        var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n        hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n      }\n      if (!hiPri && last >= 0 && last < itemCount - 1) {\n        var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n        hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n      }\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n        this._updateCellsToRender();\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(props, cellsAroundViewport) {\n      var _this6 = this;\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(props, _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._getFrameMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n      });\n    }\n  }], [{\n    key: \"_createRenderMask\",\n    value: function _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n      var itemCount = props.getItemCount(props.data);\n      (0, _invariant.default)(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\n      var renderMask = new _CellRenderMask.CellRenderMask(itemCount);\n      if (itemCount > 0) {\n        var allRegions = [cellsAroundViewport].concat((0, _toConsumableArray2.default)(additionalRegions !== null && additionalRegions !== void 0 ? additionalRegions : []));\n        for (var _i2 = 0, _allRegions = allRegions; _i2 < _allRegions.length; _i2++) {\n          var region = _allRegions[_i2];\n          renderMask.addCells(region);\n        }\n        if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n          var initialRegion = VirtualizedList._initialRenderRegion(props);\n          renderMask.addCells(initialRegion);\n        }\n        var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n        VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n      }\n      return renderMask;\n    }\n  }, {\n    key: \"_initialRenderRegion\",\n    value: function _initialRenderRegion(props) {\n      var _props$initialScrollI;\n      var itemCount = props.getItemCount(props.data);\n      var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) !== null && _props$initialScrollI !== void 0 ? _props$initialScrollI : 0)));\n      var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n      return {\n        first: firstCellIndex,\n        last: lastCellIndex\n      };\n    }\n  }, {\n    key: \"_ensureClosestStickyHeader\",\n    value: function _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n      var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n      for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n        if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n          renderMask.addCells({\n            first: itemIdx,\n            last: itemIdx\n          });\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var itemCount = newProps.getItemCount(newProps.data);\n      if (itemCount === prevState.renderMask.numCells()) {\n        return prevState;\n      }\n      var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\n      return {\n        cellsAroundViewport: constrainedCells,\n        renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\n      };\n    }\n  }, {\n    key: \"_constrainToItemCount\",\n    value: function _constrainToItemCount(cells, props) {\n      var itemCount = props.getItemCount(props.data);\n      var last = Math.min(itemCount - 1, cells.last);\n      var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n      return {\n        first: (0, _clamp.default)(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n        last: last\n      };\n    }\n  }]);\n  return VirtualizedList;\n}(_StateSafePureComponent.default);\nVirtualizedList.contextType = _VirtualizedListContext.VirtualizedListContext;\nvar styles = _StyleSheet.default.create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nvar _default = VirtualizedList;\nexports.default = _default;","map":{"version":3,"names":["_createForOfIteratorHelperLoose2","_interopRequireDefault","require","_extends2","_objectSpread2","_RefreshControl","_ScrollView","_View","_StyleSheet","_findNodeHandle","_Batchinator","_clamp","_infoLog","_CellRenderMask","_ChildListCollection","_FillRateHelper","_StateSafePureComponent","_ViewabilityHelper","_VirtualizedListCellRenderer","_VirtualizedListContext","_VirtualizeUtils","_invariant","_nullthrows","React","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","__DEV__","process","env","NODE_ENV","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onStartReachedThresholdOrDefault","onStartReachedThreshold","onEndReachedThresholdOrDefault","onEndReachedThreshold","getScrollingThreshold","threshold","visibleLength","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","findLastWhere","arr","predicate","i","length","VirtualizedList","_StateSafePureCompone","_inherits2","_super","_props","_this2","_classCallCheck2","_this$props$updateCel","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_assertThisInitialized2","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","_frames","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","Map","_lastFocusedCellKey","ChildListCollection","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","zoomScale","_scrollRef","_sentStartForContentLength","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","props","onRefresh","createElement","View","_props$refreshing","invariant","refreshing","JSON","stringify","ScrollView","_extends","refreshControl","RefreshControl","progressViewOffset","_onCellLayout","index","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","Math","max","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","state","cellsAroundViewport","_onCellUnmount","_objectSpread","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","getItemCount","data","scrollToIndex","animated","nullthrows","scrollToEnd","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_this$_convertParentS","perf","infoLog","prevDt","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","setState","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","isViewable","getItem","item","_keyExtractor","_getOffsetApprox","Number","isInteger","__getFrameMetricsApprox","frameMetrics","floor","remainder","frame","_getFrameMetrics","getItemLayout","lastFocusedCellRenderer","focusedCellIndex","itemCount","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","_i","_checkProps","FillRateHelper","_updateCellsToRenderBatcher","Batchinator","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","ViewabilityHelper","viewabilityConfig","onViewableItemsChanged","_this$props3","push","initialRenderRegion","_initialRenderRegion","invertedWheelEventHandler","ev","scrollOffset","target","scrollLeft","scrollTop","scrollLength","scrollWidth","scrollHeight","clientLength","clientWidth","clientHeight","isEventTargetScrollable","delta","deltaX","wheelDeltaX","deltaY","wheelDeltaY","leftoverDelta","min","targetDelta","inverted","getScrollableNode","node","nextScrollLeft","nextScrollTop","preventDefault","_createClass2","value","params","veryLast","scrollTo","console","warn","x","y","_this$props","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props2","_index","scrollToOffset","t","flashScrollIndicators","getScrollResponder","getScrollRef","_getCellKey","_this$context","hasMore","__isNative","flexWrap","flatStyles","StyleSheet","flatten","contentContainerStyle","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","abs","EPSILON","computeWindowedRenderLimits","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","anyInCell","componentDidMount","registerAsNestedChild","setupWebWheelHandler","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","teardownWebWheelHandler","_this3","addEventListener","setTimeout","removeEventListener","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","shouldListenForLayout","enabled","CellRenderer","undefined","onUpdateSeparators","onCellFocusCapture","_onCellFocusCapture","onUnmount","_ref","onCellLayout","nestedContext","keyExtractor","defaultKeyExtractor","String","type","displayName","render","_this4","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","styles","horizontallyInverted","verticallyInverted","Set","_element","isValidElement","VirtualizedListCellContextProvider","style","ListHeaderComponentStyle","_element2","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastSpacer","r","isSpacer","_iterator","_createForOfIteratorHelperLoose","_step","done","section","isLastSpacer","constrainToMeasured","clamp","firstMetrics","lastMetrics","spacerSize","_defineProperty2","_element3","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","VirtualizedListContextProvider","getScrollMetrics","renderScrollComponent","ret","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this5","measureLayout","scrollMetrics","metricsChanged","error","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props8","onStartReached","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","distTop","distBottom","schedule","_this6","onUpdate","additionalRegions","CellRenderMask","allRegions","concat","_toConsumableArray2","_i2","_allRegions","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","lastCellIndex","cellIdx","itemIdx","getDerivedStateFromProps","prevState","numCells","constrainedCells","StateSafePureComponent","contextType","VirtualizedListContext","create","transform","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","_default","exports"],"sources":["D:/vikash/AgroIntelPro-RN-App/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport Batchinator from '../Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../infoLog';\nimport { CellRenderMask } from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from '../FillRateHelper';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from '../ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\nimport { computeWindowedRenderLimits, keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\nimport invariant from 'fbjs/lib/invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRender)\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\n\n// onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold)\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold !== null && onStartReachedThreshold !== void 0 ? onStartReachedThreshold : 2;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\n\n// getScrollingThreshold(visibleLength, onEndReachedThreshold)\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params) {\n    var _this$props = this.props,\n      data = _this$props.data,\n      horizontal = _this$props.horizontal,\n      getItemCount = _this$props.getItemCount,\n      getItemLayout = _this$props.getItemLayout,\n      onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n      index = params.index,\n      viewOffset = params.viewOffset,\n      viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n    var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n    var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n      data = _this$props2.data,\n      getItem = _this$props2.getItem,\n      getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params) {\n    var animated = params.animated,\n      offset = params.offset;\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  _getCellKey() {\n    var _this$context;\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n\n  hasMore() {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n\n  constructor(_props) {\n    var _this$props$updateCel;\n    super(_props);\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n    this._registerAsNestedChild = childList => {\n      this._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.remove(childList.ref);\n    };\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n    this._averageCellLength = 0;\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasTriggeredInitialScrollToIndex = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._lastFocusedCellKey = null;\n    this._nestedChildLists = new ChildListCollection();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    this._scrollRef = null;\n    this._sentStartForContentLength = 0;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          // $FlowFixMe[incompatible-use]\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl\n            // $FlowFixMe[incompatible-type]\n            , {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n    this._onCellLayout = (e, cellKey, index) => {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n      this._triggerRemeasureForChildListsInCell(cellKey);\n      this._computeBlankness();\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    };\n    this._onCellUnmount = cellKey => {\n      delete this._cellRefs[cellKey];\n      var curr = this._frames[cellKey];\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n      this.props.onLayout && this.props.onLayout(e);\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEdgeReached();\n    };\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasTriggeredInitialScrollToIndex) {\n        if (this.props.contentOffset == null) {\n          if (this.props.initialScrollIndex < this.props.getItemCount(this.props.data)) {\n            this.scrollToIndex({\n              animated: false,\n              index: nullthrows(this.props.initialScrollIndex)\n            });\n          } else {\n            this.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        this._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEdgeReached();\n    };\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList;\n      // Child's visible length is the same as its parent's\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScroll(e);\n      });\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - this._scrollMetrics.offset;\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n\n      // For invalid negative values (w/ RTL), set this to 1.\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength,\n        zoomScale\n      };\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n      if (!this.props) {\n        return;\n      }\n      this._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n      this._computeBlankness();\n      this._scheduleCellsToRenderUpdate();\n    };\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScrollBeginDrag(e);\n      });\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n      this._computeBlankness();\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onMomentumScrollBegin(e);\n      });\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onMomentumScrollEnd(e);\n      });\n      this._scrollMetrics.velocity = 0;\n      this._computeBlankness();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this._updateCellsToRender = () => {\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n      this.setState((state, props) => {\n        var cellsAroundViewport = this._adjustCellsAroundViewport(props, state.cellsAroundViewport);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, this._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport,\n          renderMask\n        };\n      });\n    };\n    this._createViewToken = (index, isViewable, props\n    // $FlowFixMe[missing-local-annot]\n    ) => {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index, props),\n        isViewable\n      };\n    };\n    this._getOffsetApprox = (index, props) => {\n      if (Number.isInteger(index)) {\n        return this.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = this.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    this.__getFrameMetricsApprox = (index, props) => {\n      var frame = this._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n    this._getFrameMetrics = (index, props) => {\n      var data = props.data,\n        getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = this._frames[this._keyExtractor(item, index, props)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n           * suppresses an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    this._getNonViewportRenderRegions = props => {\n      // Keep a viewport's worth of content around the last focused cell to allow\n      // random navigation around it without any blanking. E.g. tabbing from one\n      // focused item out of viewport to another.\n      if (!(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n\n      // The last cell we rendered may be at a new index. Bail if we don't know\n      // where it is.\n      if (focusedCellIndex >= itemCount || this._keyExtractor(props.getItem(props.data, focusedCellIndex), focusedCellIndex, props) !== this._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < this._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += this.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first,\n        last\n      }];\n    };\n    this._checkProps(_props);\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else {\n      var _this$props3 = this.props,\n        onViewableItemsChanged = _this$props3.onViewableItemsChanged,\n        viewabilityConfig = _this$props3.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\n    };\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n    this.invertedWheelEventHandler = ev => {\n      var scrollOffset = this.props.horizontal ? ev.target.scrollLeft : ev.target.scrollTop;\n      var scrollLength = this.props.horizontal ? ev.target.scrollWidth : ev.target.scrollHeight;\n      var clientLength = this.props.horizontal ? ev.target.clientWidth : ev.target.clientHeight;\n      var isEventTargetScrollable = scrollLength > clientLength;\n      var delta = this.props.horizontal ? ev.deltaX || ev.wheelDeltaX : ev.deltaY || ev.wheelDeltaY;\n      var leftoverDelta = delta;\n      if (isEventTargetScrollable) {\n        leftoverDelta = delta < 0 ? Math.min(delta + scrollOffset, 0) : Math.max(delta - (scrollLength - clientLength - scrollOffset), 0);\n      }\n      var targetDelta = delta - leftoverDelta;\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n        if (this.props.horizontal) {\n          ev.target.scrollLeft += targetDelta;\n          var nextScrollLeft = node.scrollLeft - leftoverDelta;\n          node.scrollLeft = !this.props.getItemLayout ? Math.min(nextScrollLeft, this._totalCellLength) : nextScrollLeft;\n        } else {\n          ev.target.scrollTop += targetDelta;\n          var nextScrollTop = node.scrollTop - leftoverDelta;\n          node.scrollTop = !this.props.getItemLayout ? Math.min(nextScrollTop, this._totalCellLength) : nextScrollTop;\n        }\n        ev.preventDefault();\n      }\n    };\n  }\n  _checkProps(props) {\n    var onScroll = props.onScroll,\n      windowSize = props.windowSize,\n      getItemCount = props.getItemCount,\n      data = props.data,\n      initialScrollIndex = props.initialScrollIndex;\n    invariant(\n    // $FlowFixMe[prop-missing]\n    !onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    invariant(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n    var itemCount = getItemCount(data);\n    if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n      console.warn(\"initialScrollIndex \\\"\" + initialScrollIndex + \"\\\" is not valid (list has \" + itemCount + \" items)\");\n      this._hasWarned.initialScrollIndex = true;\n    }\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      var flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n  static _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n    var itemCount = props.getItemCount(props.data);\n    invariant(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\n    var renderMask = new CellRenderMask(itemCount);\n    if (itemCount > 0) {\n      var allRegions = [cellsAroundViewport, ...(additionalRegions !== null && additionalRegions !== void 0 ? additionalRegions : [])];\n      for (var _i2 = 0, _allRegions = allRegions; _i2 < _allRegions.length; _i2++) {\n        var region = _allRegions[_i2];\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        var initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n    }\n    return renderMask;\n  }\n  static _initialRenderRegion(props) {\n    var _props$initialScrollI;\n    var itemCount = props.getItemCount(props.data);\n    var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) !== null && _props$initialScrollI !== void 0 ? _props$initialScrollI : 0)));\n    var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex\n    };\n  }\n  static _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n    var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n    for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({\n          first: itemIdx,\n          last: itemIdx\n        });\n        break;\n      }\n    }\n  }\n  _adjustCellsAroundViewport(props, cellsAroundViewport) {\n    var data = props.data,\n      getItemCount = props.getItemCount;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n    var _this$_scrollMetrics = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics.contentLength,\n      offset = _this$_scrollMetrics.offset,\n      visibleLength = _this$_scrollMetrics.visibleLength;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n    }\n    var newCellsAroundViewport;\n    if (props.disableVirtualization) {\n      var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n      };\n    } else {\n      // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n      // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n      // So let's wait until we've scrolled the view to the right place. And until then,\n      // we will trust the initialScrollIndex suggestion.\n\n      // Thus, we want to recalculate the windowed render limits if any of the following hold:\n      // - initialScrollIndex is undefined or is 0\n      // - initialScrollIndex > 0 AND scrolling is complete\n      // - initialScrollIndex > 0 AND the end of the list is visible (this handles the case\n      //   where the list is shorter than the visible area)\n      if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      newCellsAroundViewport = computeWindowedRenderLimits(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n      invariant(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n    }\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n      newCellsAroundViewport.last = childIdx !== null && childIdx !== void 0 ? childIdx : newCellsAroundViewport.last;\n    }\n    return newCellsAroundViewport;\n  }\n  _findFirstChildWithMore(first, last) {\n    for (var ii = first; ii <= last; ii++) {\n      var cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, childList => childList.hasMore())) {\n        return ii;\n      }\n    }\n    return null;\n  }\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey\n      });\n    }\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.setupWebWheelHandler();\n  }\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        ref: this\n      });\n    }\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.teardownWebWheelHandler();\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n  static getDerivedStateFromProps(newProps, prevState) {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    var itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n    var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\n    };\n  }\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n    var _this$props4 = this.props,\n      CellRendererComponent = _this$props4.CellRendererComponent,\n      ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n      ListHeaderComponent = _this$props4.ListHeaderComponent,\n      ListItemComponent = _this$props4.ListItemComponent,\n      data = _this$props4.data,\n      debug = _this$props4.debug,\n      getItem = _this$props4.getItem,\n      getItemCount = _this$props4.getItemCount,\n      getItemLayout = _this$props4.getItemLayout,\n      horizontal = _this$props4.horizontal,\n      renderItem = _this$props4.renderItem;\n    var stickyOffset = ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n    var _loop = function _loop() {\n      var item = getItem(data, ii);\n      var key = _this._keyExtractor(item, ii, _this.props);\n      _this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      var shouldListenForLayout = getItemLayout == null || debug || _this._fillRateHelper.enabled();\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, _extends({\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        ListItemComponent: ListItemComponent,\n        cellKey: key,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onCellFocusCapture: e => _this._onCellFocusCapture(key),\n        onUnmount: _this._onCellUnmount,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        },\n        renderItem: renderItem\n      }, shouldListenForLayout && {\n        onCellLayout: _this._onCellLayout\n      })));\n      prevCellKey = key;\n    };\n    for (var ii = first; ii <= last; ii++) {\n      _loop();\n    }\n  }\n  static _constrainToItemCount(cells, props) {\n    var itemCount = props.getItemCount(props.data);\n    var last = Math.min(itemCount - 1, cells.last);\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n    return {\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n      last\n    };\n  }\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n  _keyExtractor(item, index, props\n  // $FlowFixMe[missing-local-annot]\n  ) {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n    var key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n  render() {\n    this._checkProps(this.props);\n    var _this$props5 = this.props,\n      ListEmptyComponent = _this$props5.ListEmptyComponent,\n      ListFooterComponent = _this$props5.ListFooterComponent,\n      ListHeaderComponent = _this$props5.ListHeaderComponent;\n    var _this$props6 = this.props,\n      data = _this$props6.data,\n      horizontal = _this$props6.horizontal;\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      var _element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: [inversionStyle, this.props.ListHeaderComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element)));\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    var itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-empty',\n        key: \"$empty\"\n      }, /*#__PURE__*/React.cloneElement(_element2, {\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n          if (_element2.props.onLayout) {\n            _element2.props.onLayout(event);\n          }\n        },\n        style: [inversionStyle, _element2.props.style]\n      })));\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      var spacerKey = this._getSpacerKey(!horizontal);\n      var renderRegions = this.state.renderMask.enumerateRegions();\n      var lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\n      for (var _iterator = _createForOfIteratorHelperLoose(renderRegions), _step; !(_step = _iterator()).done;) {\n        var section = _step.value;\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          var isLastSpacer = section === lastSpacer;\n          var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          var last = constrainToMeasured ? clamp(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n          var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n          var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n          var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$spacer-\" + section.first,\n            style: {\n              [spacerKey]: spacerSize\n            }\n          }));\n        } else {\n          this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n        }\n      }\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      var _element3 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: [inversionStyle, this.props.ListFooterComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element3)));\n    }\n\n    // 4. Render the ScrollView\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    var _this$props7 = this.props,\n      data = _this$props7.data,\n      extraData = _this$props7.extraData;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    var hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n\n  _onCellFocusCapture(cellKey) {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  }\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n\n          // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n          this._nestedChildLists.forEach(childList => {\n            childList.measureLayoutRelativeToContainingList();\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this.__getFrameMetricsApprox(ii, this.props);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n    var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n  _maybeCallOnEdgeReached() {\n    var _this$props8 = this.props,\n      data = _this$props8.data,\n      getItemCount = _this$props8.getItemCount,\n      onStartReached = _this$props8.onStartReached,\n      onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n      onEndReached = _this$props8.onEndReached,\n      onEndReachedThreshold = _this$props8.onEndReachedThreshold,\n      initialScrollIndex = _this$props8.initialScrollIndex;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics2.contentLength,\n      visibleLength = _this$_scrollMetrics2.visibleLength,\n      offset = _this$_scrollMetrics2.offset;\n    var distanceFromStart = offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    var DEFAULT_THRESHOLD_PX = 2;\n    var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n    var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n    var isWithinStartThreshold = distanceFromStart <= startThreshold;\n    var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n      // On initial mount when using initialScrollIndex the offset will be 0 initially\n      // and will trigger an unexpected onStartReached. To avoid this we can use\n      // timestamp to differentiate between the initial scroll metrics and when we actually\n      // received the first scroll event.\n      if (!initialScrollIndex || this._scrollMetrics.timestamp !== 0) {\n        this._sentStartForContentLength = this._scrollMetrics.contentLength;\n        onStartReached({\n          distanceFromStart\n        });\n      }\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    else {\n      this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n      this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n    }\n  }\n  _scheduleCellsToRenderUpdate() {\n    var _this$state$cellsArou = this.state.cellsAroundViewport,\n      first = _this$state$cellsArou.first,\n      last = _this$state$cellsArou.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n      offset = _this$_scrollMetrics3.offset,\n      visibleLength = _this$_scrollMetrics3.visibleLength,\n      velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n      hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n      hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n  _updateViewableItems(props, cellsAroundViewport) {\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(props, this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n    });\n  }\n}\nVirtualizedList.contextType = VirtualizedListContext;\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}