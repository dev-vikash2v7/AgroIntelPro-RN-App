{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = fromEntries;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nfunction fromEntries(entries) {\n  return entries.reduce(function (acc, _ref) {\n    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n      k = _ref2[0],\n      v = _ref2[1];\n    if (acc.hasOwnProperty(k)) {\n      throw new Error(`A value for key '${k}' already exists in the object.`);\n    }\n    acc[k] = v;\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["fromEntries","entries","reduce","acc","_ref","_ref2","_slicedToArray2","default","k","v","hasOwnProperty","Error"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\@react-navigation\\core\\src\\fromEntries.tsx"],"sourcesContent":["// Object.fromEntries is not available in older iOS versions\nexport default function fromEntries<K extends string, V>(\n  entries: (readonly [K, V])[]\n) {\n  return entries.reduce((acc, [k, v]) => {\n    if (acc.hasOwnProperty(k)) {\n      throw new Error(`A value for key '${k}' already exists in the object.`);\n    }\n\n    acc[k] = v;\n    return acc;\n  }, {} as Record<K, V>);\n}\n"],"mappings":";;;;;;AACe,SAASA,WAAWA,CACjCC,OAA4B,EAC5B;EACA,OAAOA,OAAO,CAACC,MAAM,CAAC,UAACC,GAAG,EAAAC,IAAA,EAAa;IAAA,IAAAC,KAAA,OAAAC,eAAA,CAAAC,OAAA,EAALH,IAAA;MAALI,CAAC,GAAAH,KAAA;MAAEI,CAAC,GAAAJ,KAAA;IAC/B,IAAIF,GAAG,CAACO,cAAc,CAACF,CAAC,CAAC,EAAE;MACzB,MAAM,IAAIG,KAAK,CAAE,oBAAmBH,CAAE,iCAAgC,CAAC;IACzE;IAEAL,GAAG,CAACK,CAAC,CAAC,GAAGC,CAAC;IACV,OAAON,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAiB;AACxB"},"metadata":{},"sourceType":"script","externalDependencies":[]}