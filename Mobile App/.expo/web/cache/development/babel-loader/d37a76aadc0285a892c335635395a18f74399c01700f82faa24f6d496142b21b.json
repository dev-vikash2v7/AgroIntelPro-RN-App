{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flingHandlerName = exports.flingGestureHandlerProps = exports.FlingGestureHandler = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _createHandler = _interopRequireDefault(require(\"./createHandler\"));\nvar _gestureHandlerCommon = require(\"./gestureHandlerCommon\");\nvar flingGestureHandlerProps = ['numberOfPointers', 'direction'];\nexports.flingGestureHandlerProps = flingGestureHandlerProps;\nvar flingHandlerName = 'FlingGestureHandler';\nexports.flingHandlerName = flingHandlerName;\nvar FlingGestureHandler = (0, _createHandler.default)({\n  name: flingHandlerName,\n  allowedProps: [].concat((0, _toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps), flingGestureHandlerProps),\n  config: {}\n});\nexports.FlingGestureHandler = FlingGestureHandler;","map":{"version":3,"names":["_createHandler","_interopRequireDefault","require","_gestureHandlerCommon","flingGestureHandlerProps","exports","flingHandlerName","FlingGestureHandler","createHandler","name","allowedProps","concat","_toConsumableArray2","default","baseGestureHandlerProps","config"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\FlingGestureHandler.ts"],"sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const flingGestureHandlerProps = [\n  'numberOfPointers',\n  'direction',\n] as const;\n\nexport type FlingGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\nexport interface FlingGestureConfig {\n  /**\n   * Expressed allowed direction of movement. It's possible to pass one or many\n   * directions in one parameter:\n   *\n   * ```js\n   * direction={Directions.RIGHT | Directions.LEFT}\n   * ```\n   *\n   * or\n   *\n   * ```js\n   * direction={Directions.DOWN}\n   * ```\n   */\n  direction?: number;\n\n  /**\n   * Determine exact number of points required to handle the fling gesture.\n   */\n  numberOfPointers?: number;\n}\n\nexport interface FlingGestureHandlerProps\n  extends BaseGestureHandlerProps<FlingGestureHandlerEventPayload>,\n    FlingGestureConfig {}\n\nexport const flingHandlerName = 'FlingGestureHandler';\n\nexport type FlingGestureHandler = typeof FlingGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const FlingGestureHandler = createHandler<\n  FlingGestureHandlerProps,\n  FlingGestureHandlerEventPayload\n>({\n  name: flingHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...flingGestureHandlerProps,\n  ] as const,\n  config: {},\n});\n"],"mappings":";;;;;;AAAA,IAAAA,cAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,qBAAA,GAAAD,OAAA;AAKO,IAAME,wBAAwB,GAAG,CACtC,kBADsC,EAEtC,WAFsC,CAAjC;AAAAC,OAAA,CAAAD,wBAAA,GAAAA,wBAAA;AAsCA,IAAME,gBAAgB,GAAG,qBAAzB;AAAAD,OAAA,CAAAC,gBAAA,GAAAA,gBAAA;AAIA,IAAMC,mBAAmB,GAAG,IAAAC,sBAAa,EAG9C;EACAC,IAAI,EAAEH,gBADN;EAEAI,YAAY,KAAAC,MAAA,KAAAC,mBAAA,CAAAC,OAAA,EACPC,6CADS,GAETV,wBAFS,CAFd;EAMAW,MAAM,EAAE;AANR,CAH8C,CAAzC;AAAAV,OAAA,CAAAE,mBAAA,GAAAA,mBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}