{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PermissionStatus = void 0;\nvar PermissionStatus;\nexports.PermissionStatus = PermissionStatus;\n(function (PermissionStatus) {\n  PermissionStatus[\"GRANTED\"] = \"granted\";\n  PermissionStatus[\"UNDETERMINED\"] = \"undetermined\";\n  PermissionStatus[\"DENIED\"] = \"denied\";\n})(PermissionStatus || (exports.PermissionStatus = PermissionStatus = {}));","map":{"version":3,"names":["PermissionStatus","exports"],"sources":["E:\\React Native Android Apps\\AgrI Intel Pro - Hackaton Project\\node_modules\\expo-modules-core\\src\\PermissionsInterface.ts"],"sourcesContent":["export enum PermissionStatus {\n  /**\n   * User has granted the permission.\n   */\n  GRANTED = 'granted',\n  /**\n   * User hasn't granted or denied the permission yet.\n   */\n  UNDETERMINED = 'undetermined',\n  /**\n   * User has denied the permission.\n   */\n  DENIED = 'denied',\n}\n\n/**\n * Permission expiration time. Currently, all permissions are granted permanently.\n */\nexport type PermissionExpiration = 'never' | number;\n\n/**\n * An object obtained by permissions get and request functions.\n */\nexport interface PermissionResponse {\n  /**\n   * Determines the status of the permission.\n   */\n  status: PermissionStatus;\n  /**\n   * Determines time when the permission expires.\n   */\n  expires: PermissionExpiration;\n  /**\n   * A convenience boolean that indicates if the permission is granted.\n   */\n  granted: boolean;\n  /**\n   * Indicates if user can be asked again for specific permission.\n   * If not, one should be directed to the Settings app\n   * in order to enable/disable the permission.\n   */\n  canAskAgain: boolean;\n}\n"],"mappings":";;;;AAAA,IAAYA,gBAaX;AAAAC,OAAA,CAAAD,gBAAA,GAAAA,gBAAA;AAbD,WAAYA,gBAAgB;EAI1BA,gBAAA,uBAAmB;EAInBA,gBAAA,iCAA6B;EAI7BA,gBAAA,qBAAiB;AACnB,CAAC,EAbWA,gBAAgB,KAAAC,OAAA,CAAAD,gBAAA,GAAhBA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}