{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updatePropsJestWrapper = exports.updateProps = exports.default = exports.colorProps = exports.ColorProperties = void 0;\nvar _Colors = require(\"./Colors\");\nvar _core = require(\"./core\");\nvar _jsReanimated = require(\"./js-reanimated\");\nvar _PlatformChecker = require(\"./PlatformChecker\");\nvar colorProps = ['backgroundColor', 'borderBottomColor', 'borderColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'borderStartColor', 'borderEndColor', 'color', 'shadowColor', 'textDecorationColor', 'tintColor', 'textShadowColor', 'overlayColor'];\nexports.colorProps = colorProps;\nvar ColorProperties = !(0, _core.isConfigured)() ? [] : (0, _core.makeShareable)(colorProps);\nexports.ColorProperties = ColorProperties;\nvar updatePropsByPlatform;\nif ((0, _PlatformChecker.shouldBeUseWeb)()) {\n  updatePropsByPlatform = function updatePropsByPlatform(_, updates, maybeViewRef) {\n    'worklet';\n\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach(function (item, _) {\n        (0, _jsReanimated._updatePropsJS)(updates, item);\n      });\n    }\n  };\n} else {\n  if (global._IS_FABRIC) {\n    updatePropsByPlatform = function updatePropsByPlatform(viewDescriptors, updates, _) {\n      'worklet';\n\n      for (var key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = (0, _Colors.processColor)(updates[key]);\n        }\n      }\n      viewDescriptors.value.forEach(function (viewDescriptor) {\n        _updatePropsFabric(viewDescriptor.shadowNodeWrapper, updates);\n      });\n    };\n  } else {\n    updatePropsByPlatform = function updatePropsByPlatform(viewDescriptors, updates, _) {\n      'worklet';\n\n      for (var key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = (0, _Colors.processColor)(updates[key]);\n        }\n      }\n      viewDescriptors.value.forEach(function (viewDescriptor) {\n        _updatePropsPaper(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\n      });\n    };\n  }\n}\nvar updateProps = updatePropsByPlatform;\nexports.updateProps = updateProps;\nvar updatePropsJestWrapper = function updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters) {\n  adapters.forEach(function (adapter) {\n    adapter(updates);\n  });\n  animatedStyle.current.value = Object.assign({}, animatedStyle.current.value, updates);\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\nexports.updatePropsJestWrapper = updatePropsJestWrapper;\nvar _default = updateProps;\nexports.default = _default;","map":{"version":3,"names":["_Colors","require","_core","_jsReanimated","_PlatformChecker","colorProps","exports","ColorProperties","isConfigured","makeShareable","updatePropsByPlatform","shouldBeUseWeb","_","updates","maybeViewRef","items","forEach","item","_updatePropsJS","global","_IS_FABRIC","viewDescriptors","key","indexOf","processColor","value","viewDescriptor","_updatePropsFabric","shadowNodeWrapper","_updatePropsPaper","tag","name","updateProps","updatePropsJestWrapper","animatedStyle","adapters","adapter","current","Object","assign","_default","default"],"sources":["D:\\vikash\\AgroIntelPro-RN-App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\UpdateProps.ts"],"sourcesContent":["/* global _updatePropsPaper _updatePropsFabric */\nimport { MutableRefObject } from 'react';\nimport { processColor } from './Colors';\nimport { AnimatedStyle, SharedValue, StyleProps } from './commonTypes';\nimport { makeShareable, isConfigured } from './core';\nimport { Descriptor } from './hook/commonTypes';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { ViewRefSet } from './ViewDescriptorsSet';\n\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const colorProps = [\n  'backgroundColor',\n  'borderBottomColor',\n  'borderColor',\n  'borderLeftColor',\n  'borderRightColor',\n  'borderTopColor',\n  'borderStartColor',\n  'borderEndColor',\n  'color',\n  'shadowColor',\n  'textDecorationColor',\n  'tintColor',\n  'textShadowColor',\n  'overlayColor',\n];\n\nexport const ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\n\nlet updatePropsByPlatform;\nif (shouldBeUseWeb()) {\n  updatePropsByPlatform = (\n    _: SharedValue<Descriptor[]>,\n    updates: StyleProps | AnimatedStyle,\n    maybeViewRef: ViewRefSet<any> | undefined\n  ): void => {\n    'worklet';\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach((item, _) => {\n        _updatePropsJS(updates, item);\n      });\n    }\n  };\n} else {\n  if (global._IS_FABRIC) {\n    updatePropsByPlatform = (\n      viewDescriptors: SharedValue<Descriptor[]>,\n      updates: StyleProps | AnimatedStyle,\n      _: ViewRefSet<any> | undefined\n    ): void => {\n      'worklet';\n\n      for (const key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n\n      viewDescriptors.value.forEach((viewDescriptor) => {\n        _updatePropsFabric!(viewDescriptor.shadowNodeWrapper, updates);\n      });\n    };\n  } else {\n    updatePropsByPlatform = (\n      viewDescriptors: SharedValue<Descriptor[]>,\n      updates: StyleProps | AnimatedStyle,\n      _: ViewRefSet<any> | undefined\n    ): void => {\n      'worklet';\n\n      for (const key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n      viewDescriptors.value.forEach((viewDescriptor) => {\n        _updatePropsPaper!(\n          viewDescriptor.tag,\n          viewDescriptor.name || 'RCTView',\n          updates\n        );\n      });\n    };\n  }\n}\n\nexport const updateProps: (\n  viewDescriptor: SharedValue<Descriptor[]>,\n  updates: StyleProps | AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined\n) => void = updatePropsByPlatform;\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updates: AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animatedStyle: MutableRefObject<AnimatedStyle>,\n  adapters: ((updates: AnimatedStyle) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\n\nexport default updateProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}