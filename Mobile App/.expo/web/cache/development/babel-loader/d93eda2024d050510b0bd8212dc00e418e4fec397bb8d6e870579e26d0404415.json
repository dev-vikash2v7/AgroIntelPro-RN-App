{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseToast = BaseToast;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _testId = require(\"../utils/test-id\");\nvar _BaseToast = require(\"./BaseToast.styles\");\nvar _Touchable = require(\"./Touchable\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"E:\\\\Crop Disease Classifier- Hackaton project\\\\Android App\\\\node_modules\\\\react-native-toast-message\\\\lib\\\\src\\\\components\\\\BaseToast.js\";\nfunction BaseToast(_ref) {\n  var _text1$length, _text2$length;\n  var text1 = _ref.text1,\n    text2 = _ref.text2,\n    onPress = _ref.onPress,\n    activeOpacity = _ref.activeOpacity,\n    style = _ref.style,\n    touchableContainerProps = _ref.touchableContainerProps,\n    contentContainerStyle = _ref.contentContainerStyle,\n    contentContainerProps = _ref.contentContainerProps,\n    text1Style = _ref.text1Style,\n    _ref$text1NumberOfLin = _ref.text1NumberOfLines,\n    text1NumberOfLines = _ref$text1NumberOfLin === void 0 ? 1 : _ref$text1NumberOfLin,\n    text1Props = _ref.text1Props,\n    text2Style = _ref.text2Style,\n    _ref$text2NumberOfLin = _ref.text2NumberOfLines,\n    text2NumberOfLines = _ref$text2NumberOfLin === void 0 ? 1 : _ref$text2NumberOfLin,\n    text2Props = _ref.text2Props,\n    renderLeadingIcon = _ref.renderLeadingIcon,\n    renderTrailingIcon = _ref.renderTrailingIcon;\n  return (0, _jsxRuntime.jsxs)(_Touchable.Touchable, Object.assign({\n    testID: (0, _testId.getTestId)('TouchableContainer'),\n    onPress: onPress,\n    activeOpacity: activeOpacity,\n    style: [_BaseToast.styles.base, _BaseToast.styles.leadingBorder, style]\n  }, touchableContainerProps, {\n    children: [renderLeadingIcon && renderLeadingIcon(), (0, _jsxRuntime.jsxs)(_reactNative.View, Object.assign({\n      testID: (0, _testId.getTestId)('ContentContainer'),\n      style: [_BaseToast.styles.contentContainer, contentContainerStyle]\n    }, contentContainerProps, {\n      children: [((_text1$length = text1 == null ? void 0 : text1.length) != null ? _text1$length : 0) > 0 && (0, _jsxRuntime.jsx)(_reactNative.Text, Object.assign({\n        testID: (0, _testId.getTestId)('Text1'),\n        style: [_BaseToast.styles.text1, text1Style],\n        numberOfLines: text1NumberOfLines,\n        ellipsizeMode: \"tail\"\n      }, text1Props, {\n        children: text1\n      })), ((_text2$length = text2 == null ? void 0 : text2.length) != null ? _text2$length : 0) > 0 && (0, _jsxRuntime.jsx)(_reactNative.Text, Object.assign({\n        testID: (0, _testId.getTestId)('Text2'),\n        style: [_BaseToast.styles.text2, text2Style],\n        numberOfLines: text2NumberOfLines,\n        ellipsizeMode: \"tail\"\n      }, text2Props, {\n        children: text2\n      }))]\n    })), renderTrailingIcon && renderTrailingIcon()]\n  }));\n}","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_testId","_BaseToast","_Touchable","_jsxRuntime","_jsxFileName","BaseToast","_ref","_text1$length","_text2$length","text1","text2","onPress","activeOpacity","style","touchableContainerProps","contentContainerStyle","contentContainerProps","text1Style","_ref$text1NumberOfLin","text1NumberOfLines","text1Props","text2Style","_ref$text2NumberOfLin","text2NumberOfLines","text2Props","renderLeadingIcon","renderTrailingIcon","jsxs","Touchable","Object","assign","testID","getTestId","styles","base","leadingBorder","children","View","contentContainer","length","jsx","Text","numberOfLines","ellipsizeMode"],"sources":["E:/Crop Disease Classifier- Hackaton project/Android App/node_modules/react-native-toast-message/lib/src/components/BaseToast.js"],"sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\nimport { getTestId } from '../utils/test-id';\nimport { styles } from './BaseToast.styles';\nimport { Touchable } from './Touchable';\nexport function BaseToast({ text1, text2, onPress, activeOpacity, style, touchableContainerProps, contentContainerStyle, contentContainerProps, text1Style, text1NumberOfLines = 1, text1Props, text2Style, text2NumberOfLines = 1, text2Props, renderLeadingIcon, renderTrailingIcon }) {\n    return (<Touchable testID={getTestId('TouchableContainer')} onPress={onPress} activeOpacity={activeOpacity} style={[styles.base, styles.leadingBorder, style]} {...touchableContainerProps}>\n      {renderLeadingIcon && renderLeadingIcon()}\n      <View testID={getTestId('ContentContainer')} style={[styles.contentContainer, contentContainerStyle]} {...contentContainerProps}>\n        {(text1?.length ?? 0) > 0 && (<Text testID={getTestId('Text1')} style={[styles.text1, text1Style]} numberOfLines={text1NumberOfLines} ellipsizeMode='tail' {...text1Props}>\n            {text1}\n          </Text>)}\n        {(text2?.length ?? 0) > 0 && (<Text testID={getTestId('Text2')} style={[styles.text2, text2Style]} numberOfLines={text2NumberOfLines} ellipsizeMode='tail' {...text2Props}>\n            {text2}\n          </Text>)}\n      </View>\n      {renderTrailingIcon && renderTrailingIcon()}\n    </Touchable>);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}