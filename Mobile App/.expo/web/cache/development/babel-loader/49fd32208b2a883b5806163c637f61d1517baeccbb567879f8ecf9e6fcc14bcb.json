{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.enableExperimentalWebImplementation = enableExperimentalWebImplementation;\nexports.enableLegacyWebImplementation = enableLegacyWebImplementation;\nexports.isNewWebImplementationEnabled = isNewWebImplementationEnabled;\nvar _reactNative = require(\"react-native\");\nvar useNewWebImplementation = true;\nvar getWasCalled = false;\nfunction enableExperimentalWebImplementation() {\n  var _shouldEnable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n}\nfunction enableLegacyWebImplementation() {\n  var shouldUseLegacyImplementation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  if (_reactNative.Platform.OS !== 'web' || useNewWebImplementation === !shouldUseLegacyImplementation) {\n    return;\n  }\n  if (getWasCalled) {\n    console.error('Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.');\n    return;\n  }\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\nfunction isNewWebImplementationEnabled() {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}","map":{"version":3,"names":["_reactNative","require","useNewWebImplementation","getWasCalled","enableExperimentalWebImplementation","_shouldEnable","arguments","length","undefined","enableLegacyWebImplementation","shouldUseLegacyImplementation","Platform","OS","console","error","isNewWebImplementationEnabled"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-gesture-handler\\lib\\module\\EnableNewWebImplementation.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nlet useNewWebImplementation = true;\nlet getWasCalled = false;\n\nexport function enableExperimentalWebImplementation(\n  _shouldEnable = true\n): void {\n  // NO-OP since the new implementation is now the default\n}\n\nexport function enableLegacyWebImplementation(\n  shouldUseLegacyImplementation = true\n): void {\n  if (\n    Platform.OS !== 'web' ||\n    useNewWebImplementation === !shouldUseLegacyImplementation\n  ) {\n    return;\n  }\n\n  if (getWasCalled) {\n    console.error(\n      'Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.'\n    );\n    return;\n  }\n\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\n\nexport function isNewWebImplementationEnabled(): boolean {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA,IAAIC,uBAAuB,GAAG,IAA9B;AACA,IAAIC,YAAY,GAAG,KAAnB;AAEO,SAASC,mCAATA,CAAA,EAEC;EAAA,IADNC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IADX;AAIN;AAEM,SAASG,6BAATA,CAAA,EAEC;EAAA,IADNC,6BAA6B,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAD3B;EAGL,IACEK,qBAAQ,CAACC,EAAT,KAAgB,KAAhB,IACAV,uBAAuB,KAAK,CAACQ,6BAF/B,EAGE;IACA;EACD;EAED,IAAIP,YAAJ,EAAkB;IAChBU,OAAO,CAACC,KAAR,CACE,mLADF;IAGA;EACD;EAEDZ,uBAAuB,GAAG,CAACQ,6BAA3B;AACD;AAEM,SAASK,6BAATA,CAAA,EAAkD;EACvDZ,YAAY,GAAG,IAAf;EACA,OAAOD,uBAAP;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}