{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Toast = Toast;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _contexts = require(\"./contexts\");\nvar _ToastUI = require(\"./ToastUI\");\nvar _useToast2 = require(\"./useToast\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _excluded = [\"config\"];\nvar _this = this,\n  _jsxFileName = \"E:\\\\Crop Disease Classifier- Hackaton project\\\\Android App\\\\node_modules\\\\react-native-toast-message\\\\lib\\\\src\\\\Toast.js\";\nvar ToastRoot = _react.default.forwardRef(function (props, ref) {\n  var config = props.config,\n    defaultOptions = (0, _objectWithoutProperties2.default)(props, _excluded);\n  var _useToast = (0, _useToast2.useToast)({\n      defaultOptions: defaultOptions\n    }),\n    show = _useToast.show,\n    hide = _useToast.hide,\n    isVisible = _useToast.isVisible,\n    options = _useToast.options,\n    data = _useToast.data;\n  _react.default.useImperativeHandle(ref, _react.default.useCallback(function () {\n    return {\n      show: show,\n      hide: hide\n    };\n  }, [hide, show]));\n  return (0, _jsxRuntime.jsx)(_ToastUI.ToastUI, {\n    isVisible: isVisible,\n    options: options,\n    data: data,\n    hide: hide,\n    show: show,\n    config: config\n  });\n});\nvar refs = [];\nfunction addNewRef(newRef) {\n  refs.push({\n    current: newRef\n  });\n}\nfunction removeOldRef(oldRef) {\n  refs = refs.filter(function (r) {\n    return r.current !== oldRef;\n  });\n}\nfunction Toast(props) {\n  var toastRef = _react.default.useRef(null);\n  var setRef = _react.default.useCallback(function (ref) {\n    if (ref) {\n      toastRef.current = ref;\n      addNewRef(ref);\n    } else {\n      removeOldRef(toastRef.current);\n    }\n  }, []);\n  return (0, _jsxRuntime.jsx)(_contexts.LoggerProvider, {\n    enableLogs: false,\n    children: (0, _jsxRuntime.jsx)(ToastRoot, Object.assign({\n      ref: setRef\n    }, props))\n  });\n}\nfunction getRef() {\n  var reversePriority = (0, _toConsumableArray2.default)(refs).reverse();\n  var activeRef = reversePriority.find(function (ref) {\n    return (ref == null ? void 0 : ref.current) !== null;\n  });\n  if (!activeRef) {\n    return null;\n  }\n  return activeRef.current;\n}\nToast.show = function (params) {\n  var _getRef;\n  (_getRef = getRef()) == null ? void 0 : _getRef.show(params);\n};\nToast.hide = function (params) {\n  var _getRef2;\n  (_getRef2 = getRef()) == null ? void 0 : _getRef2.hide(params);\n};","map":{"version":3,"names":["_react","_interopRequireDefault","require","_contexts","_ToastUI","_useToast2","_jsxRuntime","_excluded","_this","_jsxFileName","ToastRoot","React","forwardRef","props","ref","config","defaultOptions","_objectWithoutProperties2","default","_useToast","useToast","show","hide","isVisible","options","data","useImperativeHandle","useCallback","jsx","ToastUI","refs","addNewRef","newRef","push","current","removeOldRef","oldRef","filter","r","Toast","toastRef","useRef","setRef","LoggerProvider","enableLogs","children","Object","assign","getRef","reversePriority","_toConsumableArray2","reverse","activeRef","find","params","_getRef","_getRef2"],"sources":["E:/Crop Disease Classifier- Hackaton project/Android App/node_modules/react-native-toast-message/lib/src/Toast.js"],"sourcesContent":["import React from 'react';\nimport { LoggerProvider } from './contexts';\nimport { ToastUI } from './ToastUI';\nimport { useToast } from './useToast';\nconst ToastRoot = React.forwardRef((props, ref) => {\n    const { config, ...defaultOptions } = props;\n    const { show, hide, isVisible, options, data } = useToast({\n        defaultOptions\n    });\n    // This must use useCallback to ensure the ref doesn't get set to null and then a new ref every render.\n    React.useImperativeHandle(ref, React.useCallback(() => ({\n        show,\n        hide\n    }), [hide, show]));\n    return (<ToastUI isVisible={isVisible} options={options} data={data} hide={hide} show={show} config={config}/>);\n});\nlet refs = [];\n/**\n * Adds a ref to the end of the array, which will be used to show the toasts until its ref becomes null.\n *\n * @param newRef the new ref, which must be stable for the life of the Toast instance.\n */\nfunction addNewRef(newRef) {\n    refs.push({\n        current: newRef\n    });\n}\n/**\n * Removes the passed in ref from the file-level refs array using a strict equality check.\n *\n * @param oldRef the exact ref object to remove from the refs array.\n */\nfunction removeOldRef(oldRef) {\n    refs = refs.filter((r) => r.current !== oldRef);\n}\nexport function Toast(props) {\n    const toastRef = React.useRef(null);\n    /*\n      This must use `useCallback` to ensure the ref doesn't get set to null and then a new ref every render.\n      Failure to do so will cause whichever Toast *renders or re-renders* last to be the instance that is used,\n      rather than being the Toast that was *mounted* last.\n    */\n    const setRef = React.useCallback((ref) => {\n        // Since we know there's a ref, we'll update `refs` to use it.\n        if (ref) {\n            // store the ref in this toast instance to be able to remove it from the array later when the ref becomes null.\n            toastRef.current = ref;\n            addNewRef(ref);\n        }\n        else {\n            // remove the this toast's ref, wherever it is in the array.\n            removeOldRef(toastRef.current);\n        }\n    }, []);\n    return (<LoggerProvider enableLogs={false}>\n      <ToastRoot ref={setRef} {...props}/>\n    </LoggerProvider>);\n}\n/**\n * Get the active Toast instance `ref`, by priority.\n * The \"highest\" Toast in the `View` hierarchy has the highest priority.\n *\n * For example, a Toast inside a `Modal`, would have had its ref set later than a Toast inside App's Root.\n * Therefore, the library knows that it is currently visible on top of the App's Root\n * and will thus use the `Modal`'s Toast when showing/hiding.\n *\n * ```js\n * <>\n *  <Toast />\n *  <Modal>\n *    <Toast />\n *  </Modal>\n * </>\n * ```\n */\nfunction getRef() {\n    const reversePriority = [...refs].reverse();\n    const activeRef = reversePriority.find((ref) => ref?.current !== null);\n    if (!activeRef) {\n        return null;\n    }\n    return activeRef.current;\n}\nToast.show = (params) => {\n    getRef()?.show(params);\n};\nToast.hide = (params) => {\n    getRef()?.hide(params);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}