{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar BaseRouter = {\n  getStateForAction: function getStateForAction(state, action) {\n    switch (action.type) {\n      case 'SET_PARAMS':\n        {\n          var index = action.source ? state.routes.findIndex(function (r) {\n            return r.key === action.source;\n          }) : state.index;\n          if (index === -1) {\n            return null;\n          }\n          return Object.assign({}, state, {\n            routes: state.routes.map(function (r, i) {\n              return i === index ? Object.assign({}, r, {\n                params: Object.assign({}, r.params, action.payload.params)\n              }) : r;\n            })\n          });\n        }\n      case 'RESET':\n        {\n          var nextState = action.payload;\n          if (nextState.routes.length === 0 || nextState.routes.some(function (route) {\n            return !state.routeNames.includes(route.name);\n          })) {\n            return null;\n          }\n          if (nextState.stale === false) {\n            if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(function (name) {\n              return !state.routeNames.includes(name);\n            })) {\n              return null;\n            }\n            return Object.assign({}, nextState, {\n              routes: nextState.routes.map(function (route) {\n                return route.key ? route : Object.assign({}, route, {\n                  key: `${route.name}-${(0, _nonSecure.nanoid)()}`\n                });\n              })\n            });\n          }\n          return nextState;\n        }\n      default:\n        return null;\n    }\n  },\n  shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n    return action.type === 'NAVIGATE';\n  }\n};\nvar _default = BaseRouter;\nexports.default = _default;","map":{"version":3,"names":["_nonSecure","require","BaseRouter","getStateForAction","state","action","type","index","source","routes","findIndex","r","key","Object","assign","map","i","params","payload","nextState","length","some","route","routeNames","includes","name","stale","nanoid","shouldActionChangeFocus","_default","exports","default"],"sources":["D:\\vikash\\AgroIntelPro-RN-App\\node_modules\\@react-navigation\\routers\\src\\BaseRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport type {\n  CommonNavigationAction,\n  NavigationState,\n  PartialState,\n} from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex((r) => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET': {\n        const nextState = action.payload as State | PartialState<State>;\n\n        if (\n          nextState.routes.length === 0 ||\n          nextState.routes.some(\n            (route: { name: string }) => !state.routeNames.includes(route.name)\n          )\n        ) {\n          return null;\n        }\n\n        if (nextState.stale === false) {\n          if (\n            state.routeNames.length !== nextState.routeNames.length ||\n            nextState.routeNames.some(\n              (name) => !state.routeNames.includes(name)\n            )\n          ) {\n            return null;\n          }\n\n          return {\n            ...nextState,\n            routes: nextState.routes.map((route) =>\n              route.key ? route : { ...route, key: `${route.name}-${nanoid()}` }\n            ),\n          };\n        }\n\n        return nextState;\n      }\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n"],"mappings":";;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAYA,IAAMC,UAAU,GAAG;EACjBC,iBAAiB,WAAAA,kBACfC,KAAY,EACZC,MAA8B,EACM;IACpC,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,YAAY;QAAE;UACjB,IAAMC,KAAK,GAAGF,MAAM,CAACG,MAAM,GACvBJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAAE,UAAAC,CAAC;YAAA,OAAKA,CAAC,CAACC,GAAG,KAAKP,MAAM,CAACG,MAAM;UAAA,EAAC,GACtDJ,KAAK,CAACG,KAAK;UAEf,IAAIA,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,OAAO,IAAI;UACb;UAEA,OAAAM,MAAA,CAAAC,MAAA,KACKV,KAAK;YACRK,MAAM,EAAEL,KAAK,CAACK,MAAM,CAACM,GAAG,CAAC,UAACJ,CAAC,EAAEK,CAAC;cAAA,OAC5BA,CAAC,KAAKT,KAAK,GAAAM,MAAA,CAAAC,MAAA,KACFH,CAAC;gBAAEM,MAAM,EAAAJ,MAAA,CAAAC,MAAA,KAAOH,CAAC,CAACM,MAAM,EAAKZ,MAAM,CAACa,OAAO,CAACD,MAAA;cAAO,KACxDN,CAAC;YAAA;UAAA;QAGX;MAEA,KAAK,OAAO;QAAE;UACZ,IAAMQ,SAAS,GAAGd,MAAM,CAACa,OAAsC;UAE/D,IACEC,SAAS,CAACV,MAAM,CAACW,MAAM,KAAK,CAAC,IAC7BD,SAAS,CAACV,MAAM,CAACY,IAAI,CAClB,UAAAC,KAAuB;YAAA,OAAK,CAAClB,KAAK,CAACmB,UAAU,CAACC,QAAQ,CAACF,KAAK,CAACG,IAAI,CAAC;UAAA,EACpE,EACD;YACA,OAAO,IAAI;UACb;UAEA,IAAIN,SAAS,CAACO,KAAK,KAAK,KAAK,EAAE;YAC7B,IACEtB,KAAK,CAACmB,UAAU,CAACH,MAAM,KAAKD,SAAS,CAACI,UAAU,CAACH,MAAM,IACvDD,SAAS,CAACI,UAAU,CAACF,IAAI,CACtB,UAAAI,IAAI;cAAA,OAAK,CAACrB,KAAK,CAACmB,UAAU,CAACC,QAAQ,CAACC,IAAI,CAAC;YAAA,EAC3C,EACD;cACA,OAAO,IAAI;YACb;YAEA,OAAAZ,MAAA,CAAAC,MAAA,KACKK,SAAS;cACZV,MAAM,EAAEU,SAAS,CAACV,MAAM,CAACM,GAAG,CAAE,UAAAO,KAAK;gBAAA,OACjCA,KAAK,CAACV,GAAG,GAAGU,KAAK,GAAAT,MAAA,CAAAC,MAAA,KAAQQ,KAAK;kBAAEV,GAAG,EAAG,GAAEU,KAAK,CAACG,IAAK,IAAG,IAAAE,iBAAM,GAAG;gBAAA,EAAG;cAAA;YAAA;UAGxE;UAEA,OAAOR,SAAS;QAClB;MAEA;QACE,OAAO,IAAI;IAAC;EAElB,CAAC;EAEDS,uBAAuB,WAAAA,wBAACvB,MAA8B,EAAE;IACtD,OAAOA,MAAM,CAACC,IAAI,KAAK,UAAU;EACnC;AACF,CAAC;AAAA,IAAAuB,QAAA,GAEc3B,UAAU;AAAA4B,OAAA,CAAAC,OAAA,GAAAF,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}