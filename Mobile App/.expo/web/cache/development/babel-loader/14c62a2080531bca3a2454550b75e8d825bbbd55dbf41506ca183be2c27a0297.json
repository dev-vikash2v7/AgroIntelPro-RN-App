{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\nvar _State = require(\"../State\");\nvar _constants = require(\"./constants\");\nvar _DiscreteGestureHandler = _interopRequireDefault(require(\"./DiscreteGestureHandler\"));\nvar _utils = require(\"./utils\");\nvar _excluded = [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar PressGestureHandler = function (_DiscreteGestureHandl) {\n  (0, _inherits2.default)(PressGestureHandler, _DiscreteGestureHandl);\n  var _super = _createSuper(PressGestureHandler);\n  function PressGestureHandler() {\n    var _this;\n    (0, _classCallCheck2.default)(this, PressGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"visualFeedbackTimer\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"initialEvent\", null);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"shouldDelayTouches\", true);\n    return _this;\n  }\n  (0, _createClass2.default)(PressGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'press';\n    }\n  }, {\n    key: \"minDurationMs\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Press;\n    }\n  }, {\n    key: \"simulateCancelEvent\",\n    value: function simulateCancelEvent(inputData) {\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var shouldCancelWhenOutside = _ref.shouldCancelWhenOutside,\n        maxDistSq = _ref.maxDistSq;\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n      return (_Hammer$INPUT_START$H = {}, (0, _defineProperty3.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_START, _State.State.BEGAN), (0, _defineProperty3.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_MOVE, _State.State.ACTIVE), (0, _defineProperty3.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_END, _State.State.END), (0, _defineProperty3.default)(_Hammer$INPUT_START$H, _hammerjs.default.INPUT_CANCEL, _State.State.CANCELLED), _Hammer$INPUT_START$H)[type];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return Object.assign({}, (0, _get2.default)((0, _getPrototypeOf2.default)(PressGestureHandler.prototype), \"getHammerConfig\", this).call(this), {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n  }, {\n    key: \"shouldDelayTouchForEvent\",\n    value: function shouldDelayTouchForEvent(_ref2) {\n      var pointerType = _ref2.pointerType;\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n  }, {\n    key: \"onGestureStart\",\n    value: function onGestureStart(ev) {\n      var _this2 = this;\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(function () {\n        _this2.sendGestureStartedEvent(_this2.initialEvent);\n        _this2.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n  }, {\n    key: \"sendGestureStartedEvent\",\n    value: function sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(Object.assign({}, ev, {\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n  }, {\n    key: \"forceInvalidate\",\n    value: function forceInvalidate(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PressGestureHandler.prototype), \"forceInvalidate\", this).call(this, event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this3 = this;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PressGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          var timeout;\n          if (this.visualFeedbackTimer) {\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(function () {\n            _this3.sendEvent(Object.assign({}, ev, {\n              eventType: _hammerjs.default.INPUT_END,\n              isFinal: true\n            }));\n            _this3.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent(Object.assign({}, ev, {\n            eventType: _hammerjs.default.INPUT_MOVE,\n            isFinal: false\n          }));\n        }\n      }\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$shouldActivateO = _ref3.shouldActivateOnStart,\n        shouldActivateOnStart = _ref3$shouldActivateO === void 0 ? false : _ref3$shouldActivateO,\n        _ref3$disallowInterru = _ref3.disallowInterruption,\n        disallowInterruption = _ref3$disallowInterru === void 0 ? false : _ref3$disallowInterru,\n        _ref3$shouldCancelWhe = _ref3.shouldCancelWhenOutside,\n        shouldCancelWhenOutside = _ref3$shouldCancelWhe === void 0 ? true : _ref3$shouldCancelWhe,\n        _ref3$minDurationMs = _ref3.minDurationMs,\n        minDurationMs = _ref3$minDurationMs === void 0 ? Number.NaN : _ref3$minDurationMs,\n        _ref3$maxDist = _ref3.maxDist,\n        maxDist = _ref3$maxDist === void 0 ? Number.NaN : _ref3$maxDist,\n        _ref3$minPointers = _ref3.minPointers,\n        minPointers = _ref3$minPointers === void 0 ? 1 : _ref3$minPointers,\n        _ref3$maxPointers = _ref3.maxPointers,\n        maxPointers = _ref3$maxPointers === void 0 ? 1 : _ref3$maxPointers,\n        props = (0, _objectWithoutProperties2.default)(_ref3, _excluded);\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(PressGestureHandler.prototype), \"updateGestureConfig\", this).call(this, Object.assign({\n        shouldActivateOnStart: shouldActivateOnStart,\n        disallowInterruption: disallowInterruption,\n        shouldCancelWhenOutside: shouldCancelWhenOutside,\n        minDurationMs: minDurationMs,\n        maxDist: maxDist,\n        minPointers: minPointers,\n        maxPointers: maxPointers\n      }, props));\n    }\n  }]);\n  return PressGestureHandler;\n}(_DiscreteGestureHandler.default);\nvar _default = PressGestureHandler;\nexports.default = _default;","map":{"version":3,"names":["_hammerjs","_interopRequireDefault","require","_State","_constants","_DiscreteGestureHandler","_utils","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","PressGestureHandler","_DiscreteGestureHandl","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty","_assertThisInitialized2","_createClass2","key","get","isnan","config","minDurationMs","maxDist","Hammer","Press","value","simulateCancelEvent","inputData","hasGestureFailed","cancelEvent","updateHasCustomActivationCriteria","_ref","shouldCancelWhenOutside","maxDistSq","isValidNumber","getState","type","_Hammer$INPUT_START$H","_defineProperty3","INPUT_START","State","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","getConfig","hasCustomActivationCriteria","getHammerConfig","Object","assign","_get2","time","onGestureActivated","ev","onGestureStart","shouldDelayTouchForEvent","_ref2","pointerType","shouldDelayTouches","_this2","isGestureRunning","clearTimeout","visualFeedbackTimer","initialEvent","fireAfterInterval","sendGestureStartedEvent","CONTENT_TOUCHES_DELAY","sendEvent","eventType","isFirst","forceInvalidate","event","onRawEvent","_this3","isFinal","timeout","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","onGestureEnded","updateGestureConfig","_ref3","_ref3$shouldActivateO","shouldActivateOnStart","_ref3$disallowInterru","disallowInterruption","_ref3$shouldCancelWhe","_ref3$minDurationMs","Number","NaN","_ref3$maxDist","_ref3$minPointers","minPointers","_ref3$maxPointers","maxPointers","props","_objectWithoutProperties2","DiscreteGestureHandler","_default","exports"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\PressGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n  HammerInputNames,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { Config, HammerInputExt } from './GestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  private visualFeedbackTimer: any;\n  private initialEvent: HammerInputExt | null = null;\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    // @ts-ignore FIXME(TS)\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData: HammerInputExt) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({\n    shouldCancelWhenOutside,\n    maxDistSq,\n  }: Config & { shouldCancelWhenOutside: boolean }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type: keyof typeof HammerInputNames): State {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev: HammerInputExt) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }: HammerInputExt) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev: HammerInputExt) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev: HammerInputExt) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event: HammerInputExt) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.isGestureRunning) {\n      if (ev.isFinal) {\n        let timeout;\n        if (this.visualFeedbackTimer) {\n          // Aesthetic timing for a quick tap.\n          // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n          // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n          timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n          this.initialEvent = null;\n        }\n        fireAfterInterval(() => {\n          this.sendEvent({\n            ...ev,\n            eventType: Hammer.INPUT_END,\n            isFinal: true,\n          });\n          // @ts-ignore -- this should explicitly support undefined\n          this.onGestureEnded();\n        }, timeout);\n      } else {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_MOVE,\n          isFinal: false,\n        });\n      }\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}