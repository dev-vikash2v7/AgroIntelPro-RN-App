{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventType = void 0;\nexports.useAnimatedGestureHandler = useAnimatedGestureHandler;\nvar _Hooks = require(\"./Hooks\");\nvar EventType = function (EventType) {\n  EventType[EventType[\"UNDETERMINED\"] = 0] = \"UNDETERMINED\";\n  EventType[EventType[\"FAILED\"] = 1] = \"FAILED\";\n  EventType[EventType[\"BEGAN\"] = 2] = \"BEGAN\";\n  EventType[EventType[\"CANCELLED\"] = 3] = \"CANCELLED\";\n  EventType[EventType[\"ACTIVE\"] = 4] = \"ACTIVE\";\n  EventType[EventType[\"END\"] = 5] = \"END\";\n  return EventType;\n}({});\nexports.EventType = EventType;\nfunction useAnimatedGestureHandler(handlers, dependencies) {\n  var _useHandler = (0, _Hooks.useHandler)(handlers, dependencies),\n    context = _useHandler.context,\n    doDependenciesDiffer = _useHandler.doDependenciesDiffer,\n    useWeb = _useHandler.useWeb;\n  var handler = function handler(e) {\n    'worklet';\n\n    var event = useWeb ? e.nativeEvent : e;\n    if (event.state === EventType.BEGAN && handlers.onStart) {\n      handlers.onStart(event, context);\n    }\n    if (event.state === EventType.ACTIVE && handlers.onActive) {\n      handlers.onActive(event, context);\n    }\n    if (event.oldState === EventType.ACTIVE && event.state === EventType.END && handlers.onEnd) {\n      handlers.onEnd(event, context);\n    }\n    if (event.oldState === EventType.BEGAN && event.state === EventType.FAILED && handlers.onFail) {\n      handlers.onFail(event, context);\n    }\n    if (event.oldState === EventType.ACTIVE && event.state === EventType.CANCELLED && handlers.onCancel) {\n      handlers.onCancel(event, context);\n    }\n    if ((event.oldState === EventType.BEGAN || event.oldState === EventType.ACTIVE) && event.state !== EventType.BEGAN && event.state !== EventType.ACTIVE && handlers.onFinish) {\n      handlers.onFinish(event, context, event.state === EventType.CANCELLED || event.state === EventType.FAILED);\n    }\n  };\n  if (useWeb) {\n    return handler;\n  }\n  return (0, _Hooks.useEvent)(handler, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], doDependenciesDiffer);\n}","map":{"version":3,"names":["_Hooks","require","EventType","exports","useAnimatedGestureHandler","handlers","dependencies","_useHandler","useHandler","context","doDependenciesDiffer","useWeb","handler","e","event","nativeEvent","state","BEGAN","onStart","ACTIVE","onActive","oldState","END","onEnd","FAILED","onFail","CANCELLED","onCancel","onFinish","useEvent"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useAnimatedGestureHandler.ts"],"sourcesContent":["import { MutableRefObject } from 'react';\nimport { Context, WorkletFunction } from '../commonTypes';\nimport WorkletEventHandler from '../WorkletEventHandler';\nimport { DependencyList } from './commonTypes';\nimport { useEvent, useHandler } from './Hooks';\n\ninterface Handler<T, TContext extends Context> extends WorkletFunction {\n  (event: T, context: TContext, isCanceledOrFailed?: boolean): void;\n}\n\nexport interface GestureHandlers<T, TContext extends Context> {\n  [key: string]: Handler<T, TContext> | undefined;\n  onStart?: Handler<T, TContext>;\n  onActive?: Handler<T, TContext>;\n  onEnd?: Handler<T, TContext>;\n  onFail?: Handler<T, TContext>;\n  onCancel?: Handler<T, TContext>;\n  onFinish?: Handler<T, TContext>;\n}\n\nexport enum EventType {\n  UNDETERMINED = 0,\n  FAILED,\n  BEGAN,\n  CANCELLED,\n  ACTIVE,\n  END,\n}\n\nexport interface GestureHandlerStateChangeNativeEvent {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: EventType;\n  oldState: EventType;\n}\n\nexport interface GestureHandlerEvent<T>\n  extends GestureHandlerStateChangeNativeEvent {\n  nativeEvent: T;\n}\n\nexport function useAnimatedGestureHandler<\n  T extends GestureHandlerEvent<T>,\n  TContext extends Context\n>(\n  handlers: GestureHandlers<T, TContext>,\n  dependencies?: DependencyList\n): MutableRefObject<WorkletEventHandler<T> | null> | ((e: T) => void) {\n  const { context, doDependenciesDiffer, useWeb } = useHandler<T, TContext>(\n    handlers,\n    dependencies\n  );\n\n  const handler = (e: T) => {\n    'worklet';\n    const event = useWeb ? e.nativeEvent : e;\n\n    if (event.state === EventType.BEGAN && handlers.onStart) {\n      handlers.onStart(event, context);\n    }\n    if (event.state === EventType.ACTIVE && handlers.onActive) {\n      handlers.onActive(event, context);\n    }\n    if (\n      event.oldState === EventType.ACTIVE &&\n      event.state === EventType.END &&\n      handlers.onEnd\n    ) {\n      handlers.onEnd(event, context);\n    }\n    if (\n      event.oldState === EventType.BEGAN &&\n      event.state === EventType.FAILED &&\n      handlers.onFail\n    ) {\n      handlers.onFail(event, context);\n    }\n    if (\n      event.oldState === EventType.ACTIVE &&\n      event.state === EventType.CANCELLED &&\n      handlers.onCancel\n    ) {\n      handlers.onCancel(event, context);\n    }\n    if (\n      (event.oldState === EventType.BEGAN ||\n        event.oldState === EventType.ACTIVE) &&\n      event.state !== EventType.BEGAN &&\n      event.state !== EventType.ACTIVE &&\n      handlers.onFinish\n    ) {\n      handlers.onFinish(\n        event,\n        context,\n        event.state === EventType.CANCELLED || event.state === EventType.FAILED\n      );\n    }\n  };\n\n  if (useWeb) {\n    return handler;\n  }\n\n  return useEvent<T>(\n    handler,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    doDependenciesDiffer\n  );\n}\n"],"mappings":";;;;;AAIA,IAAAA,MAAA,GAAAC,OAAA;AAgBA,IAAYC,SAAS,aAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAAAC,OAAA,CAAAD,SAAA,GAAAA,SAAA;AAqBd,SAASE,yBAAyBA,CAIvCC,QAAsC,EACtCC,YAA6B,EACuC;EACpE,IAAAC,WAAA,GAAkD,IAAAC,iBAAU,EAC1DH,QAAQ,EACRC,YAAY,CACb;IAHOG,OAAO,GAAAF,WAAA,CAAPE,OAAO;IAAEC,oBAAoB,GAAAH,WAAA,CAApBG,oBAAoB;IAAEC,MAAA,GAAAJ,WAAA,CAAAI,MAAA;EAKvC,IAAMC,OAAO,GAAI,SAAXA,OAAOA,CAAIC,CAAI,EAAK;IACxB,SAAS;;IACT,IAAMC,KAAK,GAAGH,MAAM,GAAGE,CAAC,CAACE,WAAW,GAAGF,CAAC;IAExC,IAAIC,KAAK,CAACE,KAAK,KAAKd,SAAS,CAACe,KAAK,IAAIZ,QAAQ,CAACa,OAAO,EAAE;MACvDb,QAAQ,CAACa,OAAO,CAACJ,KAAK,EAAEL,OAAO,CAAC;IAClC;IACA,IAAIK,KAAK,CAACE,KAAK,KAAKd,SAAS,CAACiB,MAAM,IAAId,QAAQ,CAACe,QAAQ,EAAE;MACzDf,QAAQ,CAACe,QAAQ,CAACN,KAAK,EAAEL,OAAO,CAAC;IACnC;IACA,IACEK,KAAK,CAACO,QAAQ,KAAKnB,SAAS,CAACiB,MAAM,IACnCL,KAAK,CAACE,KAAK,KAAKd,SAAS,CAACoB,GAAG,IAC7BjB,QAAQ,CAACkB,KAAK,EACd;MACAlB,QAAQ,CAACkB,KAAK,CAACT,KAAK,EAAEL,OAAO,CAAC;IAChC;IACA,IACEK,KAAK,CAACO,QAAQ,KAAKnB,SAAS,CAACe,KAAK,IAClCH,KAAK,CAACE,KAAK,KAAKd,SAAS,CAACsB,MAAM,IAChCnB,QAAQ,CAACoB,MAAM,EACf;MACApB,QAAQ,CAACoB,MAAM,CAACX,KAAK,EAAEL,OAAO,CAAC;IACjC;IACA,IACEK,KAAK,CAACO,QAAQ,KAAKnB,SAAS,CAACiB,MAAM,IACnCL,KAAK,CAACE,KAAK,KAAKd,SAAS,CAACwB,SAAS,IACnCrB,QAAQ,CAACsB,QAAQ,EACjB;MACAtB,QAAQ,CAACsB,QAAQ,CAACb,KAAK,EAAEL,OAAO,CAAC;IACnC;IACA,IACE,CAACK,KAAK,CAACO,QAAQ,KAAKnB,SAAS,CAACe,KAAK,IACjCH,KAAK,CAACO,QAAQ,KAAKnB,SAAS,CAACiB,MAAM,KACrCL,KAAK,CAACE,KAAK,KAAKd,SAAS,CAACe,KAAK,IAC/BH,KAAK,CAACE,KAAK,KAAKd,SAAS,CAACiB,MAAM,IAChCd,QAAQ,CAACuB,QAAQ,EACjB;MACAvB,QAAQ,CAACuB,QAAQ,CACfd,KAAK,EACLL,OAAO,EACPK,KAAK,CAACE,KAAK,KAAKd,SAAS,CAACwB,SAAS,IAAIZ,KAAK,CAACE,KAAK,KAAKd,SAAS,CAACsB,MAAM,CACxE;IACH;EACF,CAAC;EAED,IAAIb,MAAM,EAAE;IACV,OAAOC,OAAO;EAChB;EAEA,OAAO,IAAAiB,eAAQ,EACbjB,OAAO,EACP,CAAC,6BAA6B,EAAE,uBAAuB,CAAC,EACxDF,oBAAoB,CACrB;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}