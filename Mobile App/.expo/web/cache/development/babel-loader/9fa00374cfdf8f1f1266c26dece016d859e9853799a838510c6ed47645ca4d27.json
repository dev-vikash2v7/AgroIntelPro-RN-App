{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BottomTabBar;\nexports.getTabBarHeight = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _BottomTabBarHeightCallbackContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));\nvar _useIsKeyboardShown = _interopRequireDefault(require(\"../utils/useIsKeyboardShown\"));\nvar _BottomTabItem = _interopRequireDefault(require(\"./BottomTabItem\"));\nvar _excluded = [\"state\", \"descriptors\", \"dimensions\", \"insets\", \"style\"];\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    layout = _ref.layout,\n    dimensions = _ref.dimensions;\n  var tabBarLabelPosition = descriptors[state.routes[state.index].key].options.tabBarLabelPosition;\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n  if (layout.width >= 768) {\n    var maxTabWidth = state.routes.reduce(function (acc, route) {\n      var tabBarItemStyle = descriptors[route.key].options.tabBarItemStyle;\n      var flattenedStyle = _reactNative.StyleSheet.flatten(tabBarItemStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - _reactNative.Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\nvar getTabBarHeight = function getTabBarHeight(_ref2) {\n  var _StyleSheet$flatten;\n  var state = _ref2.state,\n    descriptors = _ref2.descriptors,\n    dimensions = _ref2.dimensions,\n    insets = _ref2.insets,\n    style = _ref2.style,\n    rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n  var customHeight = (_StyleSheet$flatten = _reactNative.StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(Object.assign({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n  if (_reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexports.getTabBarHeight = getTabBarHeight;\nfunction BottomTabBar(_ref3) {\n  var state = _ref3.state,\n    navigation = _ref3.navigation,\n    descriptors = _ref3.descriptors,\n    insets = _ref3.insets,\n    style = _ref3.style;\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  var buildLink = (0, _native.useLinkBuilder)();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var tabBarShowLabel = focusedOptions.tabBarShowLabel,\n    _focusedOptions$tabBa = focusedOptions.tabBarHideOnKeyboard,\n    tabBarHideOnKeyboard = _focusedOptions$tabBa === void 0 ? false : _focusedOptions$tabBa,\n    tabBarVisibilityAnimationConfig = focusedOptions.tabBarVisibilityAnimationConfig,\n    tabBarStyle = focusedOptions.tabBarStyle,\n    tabBarBackground = focusedOptions.tabBarBackground,\n    tabBarActiveTintColor = focusedOptions.tabBarActiveTintColor,\n    tabBarInactiveTintColor = focusedOptions.tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor = focusedOptions.tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor = focusedOptions.tabBarInactiveBackgroundColor;\n  var dimensions = (0, _reactNativeSafeAreaContext.useSafeAreaFrame)();\n  var isKeyboardShown = (0, _useIsKeyboardShown.default)();\n  var onHeightChange = _react.default.useContext(_BottomTabBarHeightCallbackContext.default);\n  var shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  var visibilityAnimationConfigRef = _react.default.useRef(tabBarVisibilityAnimationConfig);\n  _react.default.useEffect(function () {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n  var _React$useState = _react.default.useState(!shouldShowTabBar),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    isTabBarHidden = _React$useState2[0],\n    setIsTabBarHidden = _React$useState2[1];\n  var _React$useState3 = _react.default.useState(function () {\n      return new _reactNative.Animated.Value(shouldShowTabBar ? 1 : 0);\n    }),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 1),\n    visible = _React$useState4[0];\n  _react.default.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      animation(visible, Object.assign({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      _animation(visible, Object.assign({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n    return function () {\n      return visible.stopAnimation();\n    };\n  }, [visible, shouldShowTabBar]);\n  var _React$useState5 = _react.default.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n    layout = _React$useState6[0],\n    setLayout = _React$useState6[1];\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var routes = state.routes;\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    descriptors: descriptors,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    style: [tabBarStyle, style]\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions,\n    layout: layout\n  });\n  var tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();\n  return _react.default.createElement(_reactNative.Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + _reactNative.StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, _react.default.createElement(_reactNative.View, {\n    pointerEvents: \"none\",\n    style: _reactNative.StyleSheet.absoluteFill\n  }, tabBarBackgroundElement), _react.default.createElement(_reactNative.View, {\n    accessibilityRole: \"tablist\",\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var _options$tabBarIcon;\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(Object.assign({}, _native.CommonActions.navigate({\n          name: route.name,\n          merge: true\n        }), {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && _reactNative.Platform.OS === 'ios' ? `${label}, tab, ${index + 1} of ${routes.length}` : undefined;\n    return _react.default.createElement(_native.NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, _react.default.createElement(_native.NavigationRouteContext.Provider, {\n      value: route\n    }, _react.default.createElement(_BottomTabItem.default, {\n      route: route,\n      descriptor: descriptors[route.key],\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: (_options$tabBarIcon = options.tabBarIcon) != null ? _options$tabBarIcon : function (_ref5) {\n        var color = _ref5.color,\n          size = _ref5.size;\n        return _react.default.createElement(_elements.MissingIcon, {\n          color: color,\n          size: size\n        });\n      },\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: options.tabBarItemStyle\n    })));\n  })));\n}\nvar styles = _reactNative.StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["_elements","require","_native","_react","_interopRequireDefault","_reactNative","_reactNativeSafeAreaContext","_BottomTabBarHeightCallbackContext","_useIsKeyboardShown","_BottomTabItem","_excluded","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","_ref","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","StyleSheet","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","_ref2","_StyleSheet$flatten","style","rest","_objectWithoutProperties2","customHeight","isLandscape","horizontalLabels","Object","assign","paddingBottom","isPad","exports","BottomTabBar","_ref3","navigation","_useTheme","useTheme","colors","buildLink","useLinkBuilder","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","_focusedOptions$tabBa","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","useSafeAreaFrame","isKeyboardShown","useIsKeyboardShown","onHeightChange","React","useContext","BottomTabBarHeightCallbackContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","_React$useState","useState","_React$useState2","_slicedToArray2","isTabBarHidden","setIsTabBarHidden","_React$useState3","Animated","Value","_React$useState4","visible","visibilityAnimationConfig","_visibilityAnimationC","_visibilityAnimationC2","animation","show","spring","timing","toValue","duration","config","start","_ref4","finished","_visibilityAnimationC3","_visibilityAnimationC4","hide","stopAnimation","_React$useState5","_React$useState6","setLayout","handleLayout","e","_e$nativeEvent$layout","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","createElement","View","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","pointerEvents","onLayout","absoluteFill","accessibilityRole","content","map","_options$tabBarIcon","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","length","NavigationContext","Provider","value","NavigationRouteContext","BottomTabItem","descriptor","horizontal","to","params","testID","tabBarTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","_ref5","color","size","MissingIcon","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\@react-navigation\\bottom-tabs\\src\\views\\BottomTabBar.tsx"],"sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate({ name: route.name, merge: true }),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  descriptor={descriptors[route.key]}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={options.tabBarItemStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}