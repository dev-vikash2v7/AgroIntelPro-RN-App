{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactRedux = require(\"react-redux\");\nvar _native = require(\"@react-navigation/native\");\nvar _firebase_config = require(\"../../firebase_config\");\nvar _vectorIcons = require(\"@expo/vector-icons\");\nvar _firestore = require(\"firebase/firestore\");\nvar _CustomButton = _interopRequireDefault(require(\"../../Components/CustomButton\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"E:\\\\Crop Disease Classifier- Hackaton project\\\\Android App\\\\src\\\\EXPO\\\\Screens\\\\Auth Screens\\\\LogInScreen.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar LogInScreen = function LogInScreen() {\n  var _ref;\n  var navigation = (0, _native.useNavigation)();\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var _useState = (0, _react.useState)(''),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = (0, _react.useState)(''),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = (0, _react.useState)(''),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    errorMessage = _useState6[0],\n    setErrorMessage = _useState6[1];\n  var checkCredentials = function checkCredentials(_x) {\n    return (_ref = _ref || (0, _asyncToGenerator2.default)(function* (user) {\n      var q = (0, _firestore.query)((0, _firestore.collection)(_firebase_config.db, \"Users\"), (0, _firestore.where)(\"email\", \"==\", user.email));\n      var querySnapshot = yield (0, _firestore.getDocs)(q);\n      querySnapshot.forEach(function (doc) {\n        var userData = doc.data();\n        if (userData.password == user.password) {\n          dispatch(setUser(userData));\n          navigation.navigate('HomeScreen');\n        }\n        setErrorMessage('Password is Incorrect ');\n        return;\n      });\n      setErrorMessage('Email not found');\n    })).apply(this, arguments);\n  };\n  var handleLogin = function handleLogin() {\n    if (!email || !password) {\n      setErrorMessage('Please enter both username and password');\n      return;\n    }\n    checkCredentials({\n      email: email,\n      password: password\n    });\n  };\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: styles.container,\n    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      value: email,\n      autoCapitalize: \"none\",\n      placeholderTextColor: \"gray\"\n    }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password,\n      placeholderTextColor: \"gray\"\n    }), errorMessage ? (0, _jsxRuntime.jsx)(_reactNative.Text, {\n      style: styles.errorMessage,\n      children: errorMessage\n    }) : null, (0, _jsxRuntime.jsx)(_CustomButton.default, {\n      bg: 'orange',\n      title: 'Log In',\n      onClick: handleLogin,\n      color: '#fff'\n    }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {\n      style: styles.loginText,\n      children: [\"Dont't have an Account ?\", (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: styles.loginLink,\n        onPress: function onPress() {\n          return navigation.navigate('SignUp');\n        },\n        children: \"Create Here\"\n      })]\n    })]\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 20,\n    color: '#000'\n  },\n  input: {\n    width: '90%',\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 0.5,\n    borderRadius: 10,\n    marginTop: 10,\n    paddingLeft: 20,\n    alignSelf: 'center',\n    color: '#000'\n  },\n  errorMessage: {\n    color: 'red',\n    marginTop: 10,\n    fontWeight: \"600\"\n  },\n  loginText: {\n    fontSize: 15,\n    alignSelf: 'center',\n    marginTop: 10,\n    color: 'gray'\n  },\n  loginLink: {\n    marginLeft: 4,\n    textDecorationLine: 'underline',\n    color: 'blue'\n  }\n});\nvar _default = LogInScreen;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactRedux","_native","_firebase_config","_vectorIcons","_firestore","_CustomButton","_interopRequireDefault","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","LogInScreen","_ref","navigation","useNavigation","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray2","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","errorMessage","setErrorMessage","checkCredentials","_x","_asyncToGenerator2","user","q","query","collection","db","where","querySnapshot","getDocs","forEach","doc","userData","data","setUser","navigate","apply","arguments","handleLogin","jsxs","View","style","styles","container","children","jsx","Text","title","TextInput","input","placeholder","onChangeText","text","value","autoCapitalize","placeholderTextColor","bg","onClick","color","loginText","loginLink","onPress","StyleSheet","create","flex","justifyContent","alignItems","fontSize","marginBottom","width","height","borderColor","borderWidth","borderRadius","marginTop","paddingLeft","alignSelf","fontWeight","marginLeft","textDecorationLine","_default","exports"],"sources":["E:/Crop Disease Classifier- Hackaton project/Android App/src/EXPO/Screens/Auth Screens/LogInScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Alert\r\n} from 'react-native';\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { db } from '../../firebase_config'; \r\nimport {Ionicons}   from '@expo/vector-icons';\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport CustomButton from '../../Components/CustomButton';\r\n\r\n\r\nconst LogInScreen = () => {\r\n  const navigation = useNavigation()\r\n  const dispatch = useDispatch()\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n\r\n\r\n  \r\n  const checkCredentials =async  (user)=>{\r\n    const q = query(collection(db, \"Users\"), where(\"email\", \"==\", user.email));\r\n    \r\n    const querySnapshot = await getDocs(q);\r\n\r\n    querySnapshot.forEach((doc) => {\r\n\r\n      const userData = doc.data();\r\n\r\n      if(userData.password == user.password){\r\n        dispatch(setUser(userData))\r\n        navigation.navigate('HomeScreen')\r\n      }\r\n        setErrorMessage('Password is Incorrect ')\r\n        return\r\n    });\r\n    setErrorMessage('Email not found');\r\n\r\n};\r\n\r\n  const handleLogin = () => {\r\n    if (!email || !password) {\r\n      setErrorMessage('Please enter both username and password');\r\n      return;\r\n    }\r\n    checkCredentials({email,password})\r\n  };\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n    {/* <TouchableOpacity onPress = {()=> navigation.goBack() }   style = {{\"top\":30 , \"position\":'absolute', \"left\" : 30 }}>\r\n    <Ionicons name = 'arrow-back' size = {30} />\r\n    </TouchableOpacity> */}\r\n\r\n\r\n      <Text style={styles.title}>Login</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        onChangeText={text => setEmail(text)}\r\n        value={email}\r\n             autoCapitalize=\"none\"\r\n    placeholderTextColor =  'gray'\r\n\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        onChangeText={text => setPassword(text)}\r\n        value={password}\r\n    placeholderTextColor =  'gray'\r\n\r\n      />\r\n      {errorMessage ? (\r\n        <Text style={styles.errorMessage}>{errorMessage}</Text>\r\n      ) : null}\r\n\r\n      <CustomButton\r\n       bg = {'orange'} \r\n       title = {'Log In'}\r\n        onClick = {handleLogin}\r\n         color = {'#fff'} \r\n         />\r\n\r\n        <Text style={styles.loginText}>\r\n         Dont't have an Account ?\r\n          <Text style={styles.loginLink} onPress={()=>navigation.navigate('SignUp')}>Create Here</Text>\r\n          </Text>\r\n\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    marginBottom: 20,\r\n    color : '#000',\r\n\r\n  },\r\n  input: {\r\n    width: '90%',\r\n    height: 50,\r\n    borderColor: 'gray',\r\n    borderWidth: 0.5,\r\n    borderRadius: 10,\r\n    marginTop: 10,\r\n    paddingLeft: 20,\r\n    alignSelf:'center',\r\n    color : '#000'\r\n  },\r\n  errorMessage: {\r\n    color: 'red',\r\n    marginTop: 10,\r\n    fontWeight : \"600\"\r\n  },\r\n  loginText :{\r\n    fontSize : 15,\r\n    alignSelf : 'center',\r\n    marginTop:10,\r\n    color  :  'gray'\r\n\r\n  },\r\n  loginLink:{\r\n    marginLeft : 4,\r\n    textDecorationLine:'underline',\r\n    color : 'blue'\r\n  }\r\n});\r\n\r\nexport default LogInScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}