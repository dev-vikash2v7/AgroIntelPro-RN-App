{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeIfDefined = mergeIfDefined;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nfunction mergeIfDefined(obj1, obj2) {\n  var newObj = Object.assign({}, obj1);\n  Object.entries(obj2).forEach(function (_ref) {\n    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    if (value !== null && value !== undefined) {\n      newObj[key] = value;\n    }\n  });\n  return newObj;\n}","map":{"version":3,"names":["mergeIfDefined","obj1","obj2","newObj","Object","assign","entries","forEach","_ref","_ref2","_slicedToArray2","default","key","value","undefined"],"sources":["E:/Crop Disease Classifier- Hackaton project/Android App/node_modules/react-native-toast-message/lib/src/utils/obj.js"],"sourcesContent":["export function mergeIfDefined(obj1, obj2) {\n    const newObj = {\n        ...obj1\n    };\n    Object.entries(obj2).forEach(([key, value]) => {\n        if (value !== null && value !== undefined) {\n            newObj[key] = value;\n        }\n    });\n    return newObj;\n}\n"],"mappings":";;;;;;AAAO,SAASA,cAAcA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACvC,IAAMC,MAAM,GAAAC,MAAA,CAAAC,MAAA,KACLJ,IAAI,CACV;EACDG,MAAM,CAACE,OAAO,CAACJ,IAAI,CAAC,CAACK,OAAO,CAAC,UAAAC,IAAA,EAAkB;IAAA,IAAAC,KAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAH,IAAA;MAAhBI,GAAG,GAAAH,KAAA;MAAEI,KAAK,GAAAJ,KAAA;IACrC,IAAII,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,EAAE;MACvCX,MAAM,CAACS,GAAG,CAAC,GAAGC,KAAK;IACvB;EACJ,CAAC,CAAC;EACF,OAAOV,MAAM;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}