{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGestureHandler = createGestureHandler;\nexports.dropGestureHandler = dropGestureHandler;\nexports.getHandler = getHandler;\nexports.getNodes = getNodes;\nvar gestures = {};\nfunction getHandler(tag) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n  throw new Error(`No handler for tag ${tag}`);\n}\nfunction createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\nfunction dropGestureHandler(handlerTag) {\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\nfunction getNodes() {\n  return Object.assign({}, gestures);\n}","map":{"version":3,"names":["gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes","Object","assign"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\NodeManager.ts"],"sourcesContent":["import { ValueOf } from '../typeUtils';\nimport { HammerGestures } from '../RNGestureHandlerModule.web';\n\nconst gestures: Record<\n  number,\n  InstanceType<ValueOf<typeof HammerGestures>>\n> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(\n  handlerTag: number,\n  handler: InstanceType<ValueOf<typeof HammerGestures>>\n) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"],"mappings":";;;;;;;AAGA,IAAMA,QAGL,GAAG,EAHJ;AAKO,SAASC,UAATA,CAAoBC,GAApB,EAAiC;EACtC,IAAIA,GAAG,IAAIF,QAAX,EAAqB;IACnB,OAAOA,QAAQ,CAACE,GAAD,CAAf;EACD;EAED,MAAM,IAAIC,KAAJ,CAAW,sBAAqBD,GAAI,EAApC,CAAN;AACD;AAEM,SAASE,oBAATA,CACLC,UADK,EAELC,OAFK,EAGL;EACA,IAAID,UAAU,IAAIL,QAAlB,EAA4B;IAC1B,MAAM,IAAIG,KAAJ,CAAW,oBAAmBE,UAAW,iBAAzC,CAAN;EACD;EACDL,QAAQ,CAACK,UAAD,CAAR,GAAuBC,OAAvB;EAEAN,QAAQ,CAACK,UAAD,CAAR,CAAqBA,UAArB,GAAkCA,UAAlC;AACD;AAEM,SAASE,kBAATA,CAA4BF,UAA5B,EAAgD;EAGrD,IAAI,EAAEA,UAAU,IAAIL,QAAhB,CAAJ,EAA+B;IAC7B;EACD;EACDC,UAAU,CAACI,UAAD,CAAV,CAAuBG,OAAvB;EAEA,OAAOR,QAAQ,CAACK,UAAD,CAAf;AACD;AAEM,SAASI,QAATA,CAAA,EAAoB;EACzB,OAAAC,MAAA,CAAAC,MAAA,KAAYX,QAAA;AACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}