{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.installWebGeolocationPolyfill = installWebGeolocationPolyfill;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _ExpoLocation = _interopRequireDefault(require(\"./ExpoLocation\"));\nvar _Location = require(\"./Location.types\");\nvar _LocationSubscribers = require(\"./LocationSubscribers\");\nvar _getCurrentPositionAsyncWrapper2;\nfunction installWebGeolocationPolyfill() {\n  if (_expoModulesCore.Platform.OS !== 'web') {\n    if (!('window' in global)) {\n      global.window = global;\n    }\n    if (!('navigator' in global.window)) {\n      global.window.navigator = {};\n    }\n    window.navigator.geolocation = {\n      getCurrentPosition: getCurrentPosition,\n      watchPosition: watchPosition,\n      clearWatch: clearWatch,\n      stopObserving: function stopObserving() {}\n    };\n  }\n}\nfunction convertGeolocationOptions(options) {\n  return {\n    accuracy: options.enableHighAccuracy ? _Location.LocationAccuracy.High : _Location.LocationAccuracy.Balanced\n  };\n}\nfunction getCurrentPosition(success) {\n  var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  _getCurrentPositionAsyncWrapper(success, error, options);\n}\nfunction _getCurrentPositionAsyncWrapper(_x, _x2, _x3) {\n  return (_getCurrentPositionAsyncWrapper2 = _getCurrentPositionAsyncWrapper2 || (0, _asyncToGenerator2.default)(function* (success, error, options) {\n    try {\n      yield _ExpoLocation.default.requestPermissionsAsync();\n      var result = yield _ExpoLocation.default.getCurrentPositionAsync(convertGeolocationOptions(options));\n      success(result);\n    } catch (e) {\n      error(e);\n    }\n  })).apply(this, arguments);\n}\nfunction watchPosition(success, error, options) {\n  var watchId = _LocationSubscribers.LocationSubscriber.registerCallback(success);\n  _ExpoLocation.default.watchPositionImplAsync(watchId, options).catch(function (err) {\n    _LocationSubscribers.LocationSubscriber.unregisterCallback(watchId);\n    error({\n      watchId: watchId,\n      message: err.message,\n      code: err.code\n    });\n  });\n  return watchId;\n}\nfunction clearWatch(watchId) {\n  _LocationSubscribers.LocationSubscriber.unregisterCallback(watchId);\n}","map":{"version":3,"names":["_expoModulesCore","require","_ExpoLocation","_interopRequireDefault","_Location","_LocationSubscribers","_getCurrentPositionAsyncWrapper2","installWebGeolocationPolyfill","Platform","OS","global","window","navigator","geolocation","getCurrentPosition","watchPosition","clearWatch","stopObserving","convertGeolocationOptions","options","accuracy","enableHighAccuracy","LocationAccuracy","High","Balanced","success","error","arguments","length","undefined","_getCurrentPositionAsyncWrapper","_x","_x2","_x3","_asyncToGenerator2","default","ExpoLocation","requestPermissionsAsync","result","getCurrentPositionAsync","e","apply","watchId","LocationSubscriber","registerCallback","watchPositionImplAsync","catch","err","unregisterCallback","message","code"],"sources":["D:\\vikash\\AgroIntelPro-RN-App\\node_modules\\expo-location\\src\\GeolocationPolyfill.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport ExpoLocation from './ExpoLocation';\nimport { LocationObject, LocationAccuracy, LocationOptions } from './Location.types';\nimport { LocationSubscriber } from './LocationSubscribers';\n\ntype GeolocationSuccessCallback = (data: LocationObject) => void;\ntype GeolocationErrorCallback = (error: any) => void;\n\ntype GeolocationOptions = {\n  enableHighAccuracy?: boolean;\n};\n\ndeclare const global: any;\n\n// @needsAudit\n/**\n * Polyfills `navigator.geolocation` for interop with the core React Native and Web API approach to geolocation.\n */\nexport function installWebGeolocationPolyfill(): void {\n  if (Platform.OS !== 'web') {\n    // Make sure `window.navigator` is defined in the global scope.\n    if (!('window' in global)) {\n      global.window = global;\n    }\n    if (!('navigator' in global.window)) {\n      global.window.navigator = {};\n    }\n\n    // @ts-ignore\n    window.navigator.geolocation = {\n      getCurrentPosition,\n      watchPosition,\n      clearWatch,\n\n      // We don't polyfill stopObserving, this is an internal method that probably should not even exist\n      // in react-native docs\n      stopObserving: () => {},\n    };\n  }\n}\n\nfunction convertGeolocationOptions(options: GeolocationOptions): LocationOptions {\n  return {\n    accuracy: options.enableHighAccuracy ? LocationAccuracy.High : LocationAccuracy.Balanced,\n  };\n}\n\nfunction getCurrentPosition(\n  success: GeolocationSuccessCallback,\n  error: GeolocationErrorCallback = () => {},\n  options: GeolocationOptions = {}\n): void {\n  _getCurrentPositionAsyncWrapper(success, error, options);\n}\n\n// This function exists to let us continue to return undefined from getCurrentPosition, while still\n// using async/await for the internal implementation of it\nasync function _getCurrentPositionAsyncWrapper(\n  success: GeolocationSuccessCallback,\n  error: GeolocationErrorCallback,\n  options: GeolocationOptions\n): Promise<any> {\n  try {\n    await ExpoLocation.requestPermissionsAsync();\n    const result = await ExpoLocation.getCurrentPositionAsync(convertGeolocationOptions(options));\n    success(result);\n  } catch (e) {\n    error(e);\n  }\n}\n\n// Polyfill: navigator.geolocation.watchPosition\nfunction watchPosition(\n  success: GeolocationSuccessCallback,\n  error: GeolocationErrorCallback,\n  options: GeolocationOptions\n) {\n  const watchId = LocationSubscriber.registerCallback(success);\n\n  ExpoLocation.watchPositionImplAsync(watchId, options).catch((err) => {\n    LocationSubscriber.unregisterCallback(watchId);\n    error({ watchId, message: err.message, code: err.code });\n  });\n\n  return watchId;\n}\n\n// Polyfill: navigator.geolocation.clearWatch\nfunction clearWatch(watchId: number) {\n  LocationSubscriber.unregisterCallback(watchId);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,SAAA,GAAAH,OAAA;AACA,IAAAI,oBAAA,GAAAJ,OAAA;AAA2D,IAAAK,gCAAA;AAerD,SAAUC,6BAA6BA,CAAA;EAC3C,IAAIC,yBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IAEzB,IAAI,EAAE,QAAQ,IAAIC,MAAM,CAAC,EAAE;MACzBA,MAAM,CAACC,MAAM,GAAGD,MAAM;;IAExB,IAAI,EAAE,WAAW,IAAIA,MAAM,CAACC,MAAM,CAAC,EAAE;MACnCD,MAAM,CAACC,MAAM,CAACC,SAAS,GAAG,EAAE;;IAI9BD,MAAM,CAACC,SAAS,CAACC,WAAW,GAAG;MAC7BC,kBAAkB,EAAlBA,kBAAkB;MAClBC,aAAa,EAAbA,aAAa;MACbC,UAAU,EAAVA,UAAU;MAIVC,aAAa,EAAE,SAAAA,cAAA,EAAK,CAAE;KACvB;;AAEL;AAEA,SAASC,yBAAyBA,CAACC,OAA2B;EAC5D,OAAO;IACLC,QAAQ,EAAED,OAAO,CAACE,kBAAkB,GAAGC,0BAAgB,CAACC,IAAI,GAAGD,0BAAgB,CAACE;GACjF;AACH;AAEA,SAASV,kBAAkBA,CACzBW,OAAmC,EAEH;EAAA,IADhCC,KAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAkC,YAAK,CAAE,CAAC;EAAA,IAC1CR,OAAA,GAAAQ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA8B,EAAE;EAEhCG,+BAA+B,CAACL,OAAO,EAAEC,KAAK,EAAEP,OAAO,CAAC;AAC1D;AAAC,SAIcW,+BAA+BA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,QAAA3B,gCAAA,GAAAA,gCAAA,QAAA4B,kBAAA,CAAAC,OAAA,EAA9C,WACEV,OAAmC,EACnCC,KAA+B,EAC/BP,OAA2B;IAE3B,IAAI;MACF,MAAMiB,qBAAY,CAACC,uBAAuB,EAAE;MAC5C,IAAMC,MAAM,SAASF,qBAAY,CAACG,uBAAuB,CAACrB,yBAAyB,CAACC,OAAO,CAAC,CAAC;MAC7FM,OAAO,CAACa,MAAM,CAAC;KAChB,CAAC,OAAOE,CAAC,EAAE;MACVd,KAAK,CAACc,CAAC,CAAC;;EAEZ,CAAC,GAAAC,KAAA,OAAAd,SAAA;AAAA;AAGD,SAASZ,aAAaA,CACpBU,OAAmC,EACnCC,KAA+B,EAC/BP,OAA2B;EAE3B,IAAMuB,OAAO,GAAGC,uCAAkB,CAACC,gBAAgB,CAACnB,OAAO,CAAC;EAE5DW,qBAAY,CAACS,sBAAsB,CAACH,OAAO,EAAEvB,OAAO,CAAC,CAAC2B,KAAK,CAAC,UAACC,GAAG,EAAI;IAClEJ,uCAAkB,CAACK,kBAAkB,CAACN,OAAO,CAAC;IAC9ChB,KAAK,CAAC;MAAEgB,OAAO,EAAPA,OAAO;MAAEO,OAAO,EAAEF,GAAG,CAACE,OAAO;MAAEC,IAAI,EAAEH,GAAG,CAACG;IAAI,CAAE,CAAC;EAC1D,CAAC,CAAC;EAEF,OAAOR,OAAO;AAChB;AAGA,SAAS1B,UAAUA,CAAC0B,OAAe;EACjCC,uCAAkB,CAACK,kBAAkB,CAACN,OAAO,CAAC;AAChD"},"metadata":{},"sourceType":"script","externalDependencies":[]}