{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createAnimatedComponent;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _WorkletEventHandler = _interopRequireDefault(require(\"./reanimated2/WorkletEventHandler\"));\nvar _setAndForwardRef = _interopRequireDefault(require(\"./setAndForwardRef\"));\nrequire(\"./reanimated2/layoutReanimation/animationsManager\");\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar _ConfigHelper = require(\"./ConfigHelper\");\nvar _RNRenderer = require(\"./reanimated2/platform-specific/RNRenderer\");\nvar _core = require(\"./reanimated2/core\");\nvar _PlatformChecker = require(\"./reanimated2/PlatformChecker\");\nvar _animation = require(\"./reanimated2/animation\");\nvar _layoutReanimation = require(\"./reanimated2/layoutReanimation\");\nvar _ViewDescriptorsSet = require(\"./reanimated2/ViewDescriptorsSet\");\nvar _fabricUtils = require(\"./reanimated2/fabricUtils\");\nvar _UpdateProps = _interopRequireDefault(require(\"./reanimated2/UpdateProps\"));\nvar _NativeReanimated = _interopRequireDefault(require(\"./reanimated2/NativeReanimated\"));\nvar _reanimated = require(\"./reanimated2\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction dummyListener() {}\nfunction maybeBuild(layoutAnimationOrBuilder) {\n  var isAnimationBuilder = function isAnimationBuilder(value) {\n    return 'build' in layoutAnimationOrBuilder && typeof layoutAnimationOrBuilder.build === 'function';\n  };\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  var resultArr = [];\n  var _flattenArray = function _flattenArray(arr) {\n    arr.forEach(function (item) {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nvar isSameAnimatedProps = isSameAnimatedStyle;\nvar has = function has(key, x) {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\nfunction isInlineStyleTransform(transform) {\n  if (!transform) {\n    return false;\n  }\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\nfunction hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return (0, _reanimated.isSharedValue)(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n  for (var key in props) {\n    var value = props[key];\n    if (key === 'style') {\n      var _props$style;\n      var styles = flattenArray((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n        for (var _ref of Object.entries(style)) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n          var _key = _ref2[0];\n          var styleValue = _ref2[1];\n          if ((0, _reanimated.isSharedValue)(styleValue)) {\n            inlineProps[_key] = styleValue;\n          } else if (_key === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[_key] = styleValue;\n          }\n        }\n      });\n    } else if ((0, _reanimated.isSharedValue)(value)) {\n      inlineProps[key] = value;\n    }\n  }\n  return inlineProps;\n}\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n  return false;\n}\nfunction getInlinePropsUpdate(inlineProps) {\n  'worklet';\n\n  var update = {};\n  for (var _ref3 of Object.entries(inlineProps)) {\n    var _ref4 = (0, _slicedToArray2.default)(_ref3, 2);\n    var key = _ref4[0];\n    var styleValue = _ref4[1];\n    if (key === 'transform') {\n      update[key] = styleValue.map(function (transform) {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if ((0, _reanimated.isSharedValue)(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\nfunction createAnimatedComponent(Component, options) {\n  (0, _invariant.default)(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    (0, _inherits2.default)(AnimatedComponent, _React$Component);\n    var _super = _createSuper(AnimatedComponent);\n    function AnimatedComponent(props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, AnimatedComponent);\n      _this = _super.call(this, props);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_styles\", null);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_animatedProps\", void 0);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_viewTag\", -1);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_isFirstRender\", true);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"animatedStyle\", {\n        value: {}\n      });\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"initialStyle\", {});\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_component\", null);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_inlinePropsViewDescriptors\", null);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_inlinePropsMapperId\", null);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_inlineProps\", {});\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_setComponentRef\", (0, _setAndForwardRef.default)({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = (0, _reactNative.findNodeHandle)(ref);\n          var _this$props = _this.props,\n            layout = _this$props.layout,\n            entering = _this$props.entering,\n            exiting = _this$props.exiting,\n            sharedTransitionTag = _this$props.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            if (!(0, _PlatformChecker.shouldBeUseWeb)()) {\n              (0, _core.enableLayoutAnimations)(true, false);\n            }\n            if (layout) {\n              (0, _core.configureLayoutAnimations)(tag, _layoutReanimation.LayoutAnimationType.LAYOUT, maybeBuild(layout));\n            }\n            if (entering) {\n              (0, _core.configureLayoutAnimations)(tag, _layoutReanimation.LayoutAnimationType.ENTERING, maybeBuild(entering));\n            }\n            if (exiting) {\n              (0, _core.configureLayoutAnimations)(tag, _layoutReanimation.LayoutAnimationType.EXITING, maybeBuild(exiting));\n            }\n            if (sharedTransitionTag) {\n              var _this$props$sharedTra;\n              var sharedElementTransition = (_this$props$sharedTra = _this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : _layoutReanimation.DefaultSharedTransition;\n              (0, _core.configureLayoutAnimations)(tag, _layoutReanimation.LayoutAnimationType.SHARED_ELEMENT_TRANSITION, maybeBuild(sharedElementTransition), sharedTransitionTag);\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      }));\n      if ((0, _PlatformChecker.isJest)()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n      return _this;\n    }\n    (0, _createClass2.default)(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._detachNativeEvents();\n        this._detachStyles();\n        this._detachInlineProps();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._attachNativeEvents();\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _this$_component;\n        return (_this$_component = this._component) !== null && _this$_component !== void 0 && _this$_component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = null;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof _WorkletEventHandler.default) {\n            if (viewTag === null) {\n              viewTag = (0, _reactNative.findNodeHandle)(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof _WorkletEventHandler.default) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (_reactNative.Platform.OS === 'web' && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style !== null && style !== void 0 && style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) !== null && _this$props$animatedP !== void 0 && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n          if (global._IS_FABRIC) {\n            var viewTag = this._viewTag;\n            (0, _core.runOnUI)(function () {\n              _removeShadowNodeFromRegistry(viewTag);\n            })();\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        for (var key in prevProps) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof _WorkletEventHandler.default && prop.current.reattachNeeded) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n        var viewTag = null;\n        for (var _key2 in this.props) {\n          var _prop = this.props[_key2];\n          if (has('current', _prop) && _prop.current instanceof _WorkletEventHandler.default && _prop.current.reattachNeeded) {\n            if (viewTag === null) {\n              var node = this._getEventViewRef();\n              viewTag = (0, _reactNative.findNodeHandle)(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            _prop.current.registerForEvents(viewTag, _key2);\n            _prop.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options !== null && options !== void 0 && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component2, _this$_component2$set;\n          (_this$_component2 = this._component) === null || _this$_component2 === void 0 ? void 0 : (_this$_component2$set = _this$_component2.setNativeProps) === null || _this$_component2$set === void 0 ? void 0 : _this$_component2$set.call(_this$_component2, props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component3;\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component3 = this._component) !== null && _this$_component3 !== void 0 && _this$_component3.getAnimatableRef ? this._component.getAnimatableRef() : this;\n        if (_reactNative.Platform.OS === 'web') {\n          viewTag = (0, _reactNative.findNodeHandle)(component);\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var _hostInstance$viewCon;\n          var hostInstance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = hostInstance === null || hostInstance === void 0 ? void 0 : (_hostInstance$viewCon = hostInstance.viewConfig) === null || _hostInstance$viewCon === void 0 ? void 0 : _hostInstance$viewCon.uiViewClassName;\n          viewConfig = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig;\n          if (global._IS_FABRIC) {\n            shadowNodeWrapper = (0, _fabricUtils.getShadowNodeWrapperFromRef)(this);\n          }\n        }\n        return {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _this$props$animatedP2, _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) === null || _this$props$animatedP2 === void 0 ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          (0, _ConfigHelper.adaptViewConfig)(viewConfig);\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if ((0, _PlatformChecker.isJest)()) {\n            _this2.animatedStyle.value = Object.assign({}, _this2.animatedStyle.value, style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) !== null && _this$props$animatedP3 !== void 0 && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"_attachInlineProps\",\n      value: function _attachInlineProps() {\n        var newInlineProps = extractSharedValuesMapFromProps(this.props);\n        var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n        if (hasChanged) {\n          if (!this._inlinePropsViewDescriptors) {\n            this._inlinePropsViewDescriptors = (0, _ViewDescriptorsSet.makeViewDescriptorsSet)();\n            var _this$_getViewInfo2 = this._getViewInfo(),\n              viewTag = _this$_getViewInfo2.viewTag,\n              viewName = _this$_getViewInfo2.viewName,\n              shadowNodeWrapper = _this$_getViewInfo2.shadowNodeWrapper,\n              viewConfig = _this$_getViewInfo2.viewConfig;\n            if (Object.keys(newInlineProps).length && viewConfig) {\n              (0, _ConfigHelper.adaptViewConfig)(viewConfig);\n            }\n            this._inlinePropsViewDescriptors.add({\n              tag: viewTag,\n              name: viewName,\n              shadowNodeWrapper: shadowNodeWrapper\n            });\n          }\n          var sharableViewDescriptors = this._inlinePropsViewDescriptors.sharableViewDescriptors;\n          var maybeViewRef = _NativeReanimated.default.native ? undefined : {\n            items: new Set([this])\n          };\n          var updaterFunction = function updaterFunction() {\n            'worklet';\n\n            var update = getInlinePropsUpdate(newInlineProps);\n            (0, _UpdateProps.default)(sharableViewDescriptors, update, maybeViewRef);\n          };\n          this._inlineProps = newInlineProps;\n          if (this._inlinePropsMapperId) {\n            (0, _core.stopMapper)(this._inlinePropsMapperId);\n          }\n          this._inlinePropsMapperId = null;\n          if (Object.keys(newInlineProps).length) {\n            this._inlinePropsMapperId = (0, _core.startMapper)(updaterFunction, Object.values(newInlineProps));\n          }\n        }\n      }\n    }, {\n      key: \"_detachInlineProps\",\n      value: function _detachInlineProps() {\n        if (this._inlinePropsMapperId) {\n          (0, _core.stopMapper)(this._inlinePropsMapperId);\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._reattachNativeEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n        var props = {};\n        var _loop2 = function _loop2() {\n          var value = inputProps[key];\n          if (key === 'style') {\n            var styleProp = inputProps.style;\n            var styles = flattenArray(styleProp != null ? styleProp : []);\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptors) {\n                style.viewsRef.add(_this3);\n                if (_this3._isFirstRender) {\n                  _this3.initialStyle = Object.assign({}, style.initial.value, (0, _animation.initialUpdaterRun)(style.initial.updater));\n                }\n                return _this3.initialStyle;\n              } else if (hasInlineStyles(style)) {\n                if (_this3._isFirstRender) {\n                  return getInlinePropsUpdate(style);\n                }\n                var newStyle = {};\n                for (var _ref5 of Object.entries(style)) {\n                  var _ref6 = (0, _slicedToArray2.default)(_ref5, 2);\n                  var _key3 = _ref6[0];\n                  var styleValue = _ref6[1];\n                  if (!(0, _reanimated.isSharedValue)(styleValue) && !(_key3 === 'transform' && isInlineStyleTransform(styleValue))) {\n                    newStyle[_key3] = styleValue;\n                  }\n                }\n                return newStyle;\n              } else {\n                return style;\n              }\n            });\n            props[key] = _reactNative.StyleSheet.flatten(processedStyle);\n          } else if (key === 'animatedProps') {\n            var animatedProp = inputProps.animatedProps;\n            if (animatedProp.initial !== undefined) {\n              Object.keys(animatedProp.initial.value).forEach(function (key) {\n                var _animatedProp$initial, _animatedProp$viewsRe;\n                props[key] = (_animatedProp$initial = animatedProp.initial) === null || _animatedProp$initial === void 0 ? void 0 : _animatedProp$initial.value[key];\n                (_animatedProp$viewsRe = animatedProp.viewsRef) === null || _animatedProp$viewsRe === void 0 ? void 0 : _animatedProp$viewsRe.add(_this3);\n              });\n            }\n          } else if (has('current', value) && value.current instanceof _WorkletEventHandler.default) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if ((0, _reanimated.isSharedValue)(value)) {\n            if (_this3._isFirstRender) {\n              props[key] = value.value;\n            }\n          } else if (key !== 'onGestureHandlerStateChange' || !(0, _PlatformChecker.isChromeDebugger)()) {\n            props[key] = value;\n          }\n        };\n        for (var key in inputProps) {\n          _loop2();\n        }\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n        if ((0, _PlatformChecker.isJest)()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n        if (this._isFirstRender) {\n          this._isFirstRender = false;\n        }\n        var platformProps = _reactNative.Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return _react.default.createElement(Component, _extends({}, props, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(_react.default.Component);\n  _defineProperty(AnimatedComponent, \"displayName\", void 0);\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return _react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_WorkletEventHandler","_setAndForwardRef","_invariant","_ConfigHelper","_RNRenderer","_core","_PlatformChecker","_animation","_layoutReanimation","_ViewDescriptorsSet","_fabricUtils","_UpdateProps","_NativeReanimated","_reanimated","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","dummyListener","maybeBuild","layoutAnimationOrBuilder","isAnimationBuilder","value","build","flattenArray","array","Array","isArray","resultArr","_flattenArray","arr","forEach","item","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","key","x","undefined","isInlineStyleTransform","transform","some","t","hasInlineStyles","Object","keys","styleValue","isSharedValue","extractSharedValuesMapFromProps","props","inlineProps","_props$style","_ref","entries","_ref2","_slicedToArray2","inlinePropsHasChanged","styles1","styles2","length","getInlinePropsUpdate","update","_ref3","_ref4","map","createAnimatedComponent","Component","options","invariant","isReactComponent","name","AnimatedComponent","_React$Component","_inherits2","_super","_this","_classCallCheck2","_defineProperty","_assertThisInitialized2","setAndForwardRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","findNodeHandle","_this$props","layout","entering","exiting","sharedTransitionTag","shouldBeUseWeb","enableLayoutAnimations","configureLayoutAnimations","LayoutAnimationType","LAYOUT","ENTERING","EXITING","_this$props$sharedTra","sharedElementTransition","sharedTransitionStyle","DefaultSharedTransition","SHARED_ELEMENT_TRANSITION","_component","isJest","animatedStyle","_createClass2","componentWillUnmount","_detachNativeEvents","_detachStyles","_detachInlineProps","componentDidMount","_attachNativeEvents","_attachAnimatedStyles","_attachInlineProps","_getEventViewRef","_this$_component","getScrollableNode","node","viewTag","prop","current","WorkletEventHandler","setNativeProps","registerForEvents","unregisterFromEvents","Platform","OS","_styles","remove","_viewTag","_this$props$animatedP","animatedProps","global","_IS_FABRIC","runOnUI","_removeShadowNodeFromRegistry","_reattachNativeEvents","prevProps","reattachNeeded","_updateFromNative","_this$_component2","_this$_component2$set","_getViewInfo","_this$_component3","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","_hostInstance$viewCon","hostInstance","RNRenderer","findHostInstance_DEPRECATED","Error","_nativeTag","uiViewClassName","getShadowNodeWrapperFromRef","_this2","_this$props$animatedP2","_this$props$animatedP3","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","adaptViewConfig","hasOneSameStyle","_loop","prevStyle","isPresent","add","assign","initial","newInlineProps","hasChanged","_inlineProps","_inlinePropsViewDescriptors","makeViewDescriptorsSet","_this$_getViewInfo2","sharableViewDescriptors","maybeViewRef","NativeReanimatedModule","native","items","Set","updaterFunction","updateProps","_inlinePropsMapperId","stopMapper","startMapper","values","componentDidUpdate","_filterNonAnimatedProps","inputProps","_this3","_loop2","styleProp","processedStyle","_isFirstRender","initialStyle","initialUpdaterRun","updater","newStyle","_ref5","_ref6","StyleSheet","flatten","animatedProp","_animatedProp$initial","_animatedProp$viewsRe","eventNames","eventName","listeners","isChromeDebugger","render","platformProps","select","web","collapsable","React","createElement","_extends","_setComponentRef","displayName","forwardRef"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent.tsx"],"sourcesContent":["import React, { Component, ComponentType, MutableRefObject, Ref } from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport {\n  configureLayoutAnimations,\n  enableLayoutAnimations,\n  runOnUI,\n  startMapper,\n  stopMapper,\n} from './reanimated2/core';\nimport {\n  isJest,\n  isChromeDebugger,\n  shouldBeUseWeb,\n} from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nimport {\n  BaseAnimationBuilder,\n  DefaultSharedTransition,\n  EntryExitAnimationFunction,\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from './reanimated2/layoutReanimation';\nimport {\n  SharedValue,\n  StyleProps,\n  ShadowNodeWrapper,\n} from './reanimated2/commonTypes';\nimport {\n  makeViewDescriptorsSet,\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from './reanimated2/ViewDescriptorsSet';\nimport { getShadowNodeWrapperFromRef } from './reanimated2/fabricUtils';\nimport updateProps from './reanimated2/UpdateProps';\nimport NativeReanimatedModule from './reanimated2/NativeReanimated';\nimport { isSharedValue } from './reanimated2';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nfunction maybeBuild(\n  layoutAnimationOrBuilder:\n    | ILayoutAnimationBuilder\n    | LayoutAnimationFunction\n    | Keyframe\n): LayoutAnimationFunction | Keyframe {\n  const isAnimationBuilder = (\n    value: ILayoutAnimationBuilder | LayoutAnimationFunction | Keyframe\n  ): value is ILayoutAnimationBuilder =>\n    'build' in layoutAnimationOrBuilder &&\n    typeof layoutAnimationOrBuilder.build === 'function';\n\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\n\ntype NestedArray<T> = T | NestedArray<T>[];\nfunction flattenArray<T>(array: NestedArray<T>): T[] {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  const resultArr: T[] = [];\n\n  const _flattenArray = (arr: NestedArray<T>[]): void => {\n    arr.forEach((item) => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]) {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\nfunction isSameAnimatedStyle(\n  style1?: StyleProps,\n  style2?: StyleProps\n): boolean {\n  // We cannot use equality check to compare useAnimatedStyle outputs directly.\n  // Instead, we can compare its viewsRefs.\n  return style1?.viewsRef === style2?.viewsRef;\n}\n\nconst isSameAnimatedProps = isSameAnimatedStyle;\n\nconst has = <K extends string>(\n  key: K,\n  x: unknown\n): x is { [key in K]: unknown } => {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\n\nfunction isInlineStyleTransform(transform: any): boolean {\n  if (!transform) {\n    return false;\n  }\n  return transform.some((t: Record<string, any>) => hasInlineStyles(t));\n}\n\nfunction hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<InitialComponentProps>\n): Record<string, any> {\n  const inlineProps: Record<string, any> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nfunction inlinePropsHasChanged(styles1: StyleProps, styles2: StyleProps) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, any>) {\n  'worklet';\n  const update: Record<string, any> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (key === 'transform') {\n      update[key] = styleValue.map((transform: Record<string, any>) => {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\ninterface AnimatedProps extends Record<string, unknown> {\n  viewDescriptors?: ViewDescriptorsSet;\n  viewsRef?: ViewRefSet<unknown>;\n  initial?: SharedValue<StyleProps>;\n}\n\nexport type AnimatedComponentProps<P extends Record<string, unknown>> = P & {\n  forwardedRef?: Ref<Component>;\n  style?: NestedArray<StyleProps>;\n  animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n  animatedStyle?: StyleProps;\n  layout?:\n    | BaseAnimationBuilder\n    | ILayoutAnimationBuilder\n    | typeof BaseAnimationBuilder;\n  entering?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  exiting?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  sharedTransitionTag?: string;\n  sharedTransitionStyle?: ILayoutAnimationBuilder;\n};\n\ntype Options<P> = {\n  setNativeProps: (ref: ComponentRef, props: P) => void;\n};\n\ninterface ComponentRef extends Component {\n  setNativeProps?: (props: Record<string, unknown>) => void;\n  getScrollableNode?: () => ComponentRef;\n  getAnimatableRef?: () => ComponentRef;\n}\n\nexport interface InitialComponentProps extends Record<string, unknown> {\n  ref?: Ref<Component>;\n  collapsable?: boolean;\n}\n\nexport default function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): ComponentType<AnimatedComponentProps<InitialComponentProps>> {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent extends React.Component<\n    AnimatedComponentProps<InitialComponentProps>\n  > {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    animatedStyle: { value: StyleProps } = { value: {} };\n    initialStyle = {};\n    _component: ComponentRef | null = null;\n    _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n    _inlinePropsMapperId: number | null = null;\n    _inlineProps: StyleProps = {};\n    static displayName: string;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.animatedStyle = { value: {} };\n      }\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._detachStyles();\n      this._detachInlineProps();\n    }\n\n    componentDidMount() {\n      this._attachNativeEvents();\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return this._component?.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef();\n      let viewTag = null; // We set it only if needed\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === null) {\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (Platform.OS === 'web' && this._styles !== null) {\n        for (const style of this._styles) {\n          if (style?.viewsRef) {\n            style.viewsRef.remove(this);\n          }\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (global._IS_FABRIC) {\n          const viewTag = this._viewTag;\n          runOnUI(() => {\n            _removeShadowNodeFromRegistry!(viewTag);\n          })();\n        }\n      }\n    }\n\n    _reattachNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      let viewTag = null;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          if (viewTag === null) {\n            const node = this._getEventViewRef();\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options.setNativeProps(this._component!, props);\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        this._component?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo() {\n      let viewTag: number | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = this._component?.getAnimatableRef\n        ? this._component.getAnimatableRef()\n        : this;\n      if (Platform.OS === 'web') {\n        viewTag = findNodeHandle(component);\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n\n        viewConfig = hostInstance?.viewConfig;\n\n        if (global._IS_FABRIC) {\n          shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n        }\n      }\n      return { viewTag, viewName, shadowNodeWrapper, viewConfig };\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) =>\n              isSameAnimatedStyle(style, prevStyle)\n            );\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.animatedStyle.value = {\n            ...this.animatedStyle.value,\n            ...style.initial.value,\n          };\n          style.animatedStyle.current = this.animatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (\n        prevAnimatedProps &&\n        !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)\n      ) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    _attachInlineProps() {\n      const newInlineProps: Record<string, any> =\n        extractSharedValuesMapFromProps(this.props);\n      const hasChanged = inlinePropsHasChanged(\n        newInlineProps,\n        this._inlineProps\n      );\n\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n          const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n            this._getViewInfo();\n\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n\n          this._inlinePropsViewDescriptors.add({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tag: viewTag!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            name: viewName!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            shadowNodeWrapper: shadowNodeWrapper!,\n          });\n        }\n        const sharableViewDescriptors =\n          this._inlinePropsViewDescriptors.sharableViewDescriptors;\n\n        const maybeViewRef = NativeReanimatedModule.native\n          ? undefined\n          : ({ items: new Set([this]) } as ViewRefSet<any>); // see makeViewsRefSet\n\n        const updaterFunction = () => {\n          'worklet';\n          const update = getInlinePropsUpdate(newInlineProps);\n          updateProps(sharableViewDescriptors, update, maybeViewRef);\n        };\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(\n            updaterFunction,\n            Object.values(newInlineProps)\n          );\n        }\n      }\n    }\n\n    _detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      this._reattachNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _setComponentRef = setAndForwardRef<Component>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n        const tag = findNodeHandle(ref);\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n          if (layout) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.LAYOUT,\n              maybeBuild(layout)\n            );\n          }\n          if (entering) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(entering)\n            );\n          }\n          if (exiting) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.EXITING,\n              maybeBuild(exiting)\n            );\n          }\n          if (sharedTransitionTag) {\n            const sharedElementTransition =\n              this.props.sharedTransitionStyle ?? DefaultSharedTransition;\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.SHARED_ELEMENT_TRANSITION,\n              maybeBuild(sharedElementTransition),\n              sharedTransitionTag\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    _filterNonAnimatedProps(\n      inputProps: AnimatedComponentProps<InitialComponentProps>\n    ): Record<string, unknown> {\n      const props: Record<string, unknown> = {};\n      for (const key in inputProps) {\n        const value = inputProps[key];\n        if (key === 'style') {\n          const styleProp = inputProps.style;\n          const styles = flattenArray<StyleProps>(styleProp ?? []);\n          const processedStyle: StyleProps = styles.map((style) => {\n            if (style && style.viewDescriptors) {\n              // this is how we recognize styles returned by useAnimatedStyle\n              style.viewsRef.add(this);\n              if (this._isFirstRender) {\n                this.initialStyle = {\n                  ...style.initial.value,\n                  ...initialUpdaterRun<StyleProps>(style.initial.updater),\n                };\n              }\n              return this.initialStyle;\n            } else if (hasInlineStyles(style)) {\n              if (this._isFirstRender) {\n                return getInlinePropsUpdate(style);\n              }\n              const newStyle: StyleProps = {};\n              for (const [key, styleValue] of Object.entries(style)) {\n                if (\n                  !isSharedValue(styleValue) &&\n                  !(key === 'transform' && isInlineStyleTransform(styleValue))\n                ) {\n                  newStyle[key] = styleValue;\n                }\n              }\n              return newStyle;\n            } else {\n              return style;\n            }\n          });\n          props[key] = StyleSheet.flatten(processedStyle);\n        } else if (key === 'animatedProps') {\n          const animatedProp = inputProps.animatedProps as Partial<\n            AnimatedComponentProps<AnimatedProps>\n          >;\n          if (animatedProp.initial !== undefined) {\n            Object.keys(animatedProp.initial.value).forEach((key) => {\n              props[key] = animatedProp.initial?.value[key];\n              animatedProp.viewsRef?.add(this);\n            });\n          }\n        } else if (\n          has('current', value) &&\n          value.current instanceof WorkletEventHandler\n        ) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach((eventName) => {\n              props[eventName] = has('listeners', value.current)\n                ? (value.current.listeners as Record<string, unknown>)[\n                    eventName\n                  ]\n                : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (isSharedValue(value)) {\n          if (this._isFirstRender) {\n            props[key] = (value as SharedValue<any>).value;\n          }\n        } else if (\n          key !== 'onGestureHandlerStateChange' ||\n          !isChromeDebugger()\n        ) {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n\n    render() {\n      const props = this._filterNonAnimatedProps(this.props);\n      if (isJest()) {\n        props.animatedStyle = this.animatedStyle;\n      }\n\n      if (this._isFirstRender) {\n        this._isFirstRender = false;\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n      return (\n        <Component {...props} ref={this._setComponentRef} {...platformProps} />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,oBAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,iBAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACAA,OAAA;AACA,IAAAI,UAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AACA,IAAAM,WAAA,GAAAN,OAAA;AACA,IAAAO,KAAA,GAAAP,OAAA;AAOA,IAAAQ,gBAAA,GAAAR,OAAA;AAKA,IAAAS,UAAA,GAAAT,OAAA;AACA,IAAAU,kBAAA,GAAAV,OAAA;AAaA,IAAAW,mBAAA,GAAAX,OAAA;AAKA,IAAAY,YAAA,GAAAZ,OAAA;AACA,IAAAa,YAAA,GAAAd,sBAAA,CAAAC,OAAA;AACA,IAAAc,iBAAA,GAAAf,sBAAA,CAAAC,OAAA;AACA,IAAAe,WAAA,GAAAf,OAAA;AAA6C,SAAAgB,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAC,OAAA,EAAAN,OAAA,GAAAO,MAAA,MAAAN,yBAAA,QAAAO,SAAA,OAAAH,gBAAA,CAAAC,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAP,KAAA,EAAAQ,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAH,KAAA,CAAAS,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAAR,OAAA,QAAAC,MAAA;AAAA,SAAAL,0BAAA,eAAAQ,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAV,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE7C,SAASC,aAAaA,CAAA,EAAG,CAEvB;AAGF,SAASC,UAAUA,CACjBC,wBAGY,EACwB;EACpC,IAAMC,kBAAkB,GACtB,SADIA,kBAAkBA,CACtBC,KAAmE;IAAA,OAEnE,OAAO,IAAIF,wBAAwB,IACnC,OAAOA,wBAAwB,CAACG,KAAK,KAAK,UAAU;EAAA;EAEtD,IAAIF,kBAAkB,CAACD,wBAAwB,CAAC,EAAE;IAChD,OAAOA,wBAAwB,CAACG,KAAK,EAAE;EACzC,CAAC,MAAM;IACL,OAAOH,wBAAwB;EACjC;AACF;AAGA,SAASI,YAAYA,CAAIC,KAAqB,EAAO;EACnD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACzB,OAAO,CAACA,KAAK,CAAC;EAChB;EACA,IAAMG,SAAc,GAAG,EAAE;EAEzB,IAAMC,aAAa,GAAI,SAAjBA,aAAaA,CAAIC,GAAqB,EAAW;IACrDA,GAAG,CAACC,OAAO,CAAE,UAAAC,IAAI,EAAK;MACpB,IAAIN,KAAK,CAACC,OAAO,CAACK,IAAI,CAAC,EAAE;QACvBH,aAAa,CAACG,IAAI,CAAC;MACrB,CAAC,MAAM;QACLJ,SAAS,CAACK,IAAI,CAACD,IAAI,CAAC;MACtB;IACF,CAAC,CAAC;EACJ,CAAC;EACDH,aAAa,CAACJ,KAAK,CAAC;EACpB,OAAOG,SAAS;AAClB;AAEA,SAASM,kBAAkBA,CAACC,MAAoB,EAAE;EAChD,OAAOA,MAAM,CAACC,MAAM,CAAE,UAAAC,KAAK;IAAA,OAAKA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,eAAe;EAAA,EAAC;AACzD;AAEA,SAASC,mBAAmBA,CAC1BC,MAAmB,EACnBC,MAAmB,EACV;EAGT,OAAO,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,QAAQ,OAAKD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,QAAQ;AAC9C;AAEA,IAAMC,mBAAmB,GAAGJ,mBAAmB;AAE/C,IAAMK,GAAG,GAAG,SAANA,GAAGA,CACPC,GAAM,EACNC,CAAU,EACuB;EACjC,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IACpD,IAAIA,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKC,SAAS,EAAE;MACjC,OAAO,KAAK;IACd,CAAC,MAAM;MACL,OAAOF,GAAG,IAAIC,CAAC;IACjB;EACF;EACA,OAAO,KAAK;AACd,CAAC;AAED,SAASE,sBAAsBA,CAACC,SAAc,EAAW;EACvD,IAAI,CAACA,SAAS,EAAE;IACd,OAAO,KAAK;EACd;EACA,OAAOA,SAAS,CAACC,IAAI,CAAE,UAAAC,CAAsB;IAAA,OAAKC,eAAe,CAACD,CAAC,CAAC;EAAA,EAAC;AACvE;AAEA,SAASC,eAAeA,CAACf,KAAiB,EAAW;EACnD,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,KAAK;EACd;EACA,OAAOgB,MAAM,CAACC,IAAI,CAACjB,KAAK,CAAC,CAACa,IAAI,CAAE,UAAAL,GAAG,EAAK;IACtC,IAAMU,UAAU,GAAGlB,KAAK,CAACQ,GAAG,CAAC;IAC7B,OACE,IAAAW,yBAAa,EAACD,UAAU,CAAC,IACxBV,GAAG,KAAK,WAAW,IAAIG,sBAAsB,CAACO,UAAU,CAAE;EAE/D,CAAC,CAAC;AACJ;AAEA,SAASE,+BAA+BA,CACtCC,KAAoD,EAC/B;EACrB,IAAMC,WAAgC,GAAG,CAAC,CAAC;EAE3C,KAAK,IAAMd,GAAG,IAAIa,KAAK,EAAE;IACvB,IAAMpC,KAAK,GAAGoC,KAAK,CAACb,GAAG,CAAC;IACxB,IAAIA,GAAG,KAAK,OAAO,EAAE;MAAA,IAAAe,YAAA;MACnB,IAAMzB,MAAM,GAAGX,YAAY,EAAAoC,YAAA,GAAaF,KAAK,CAACrB,KAAK,YAAAuB,YAAA,GAAI,EAAE,CAAC;MAC1DzB,MAAM,CAACJ,OAAO,CAAE,UAAAM,KAAK,EAAK;QACxB,IAAI,CAACA,KAAK,EAAE;UACV;QACF;QACA,SAAAwB,IAAA,IAAgCR,MAAM,CAACS,OAAO,CAACzB,KAAK,CAAC,EAAE;UAAA,IAAA0B,KAAA,OAAAC,eAAA,CAAA9D,OAAA,EAAA2D,IAAA;UAAA,IAA3ChB,IAAG,GAAAkB,KAAA;UAAA,IAAER,UAAU,GAAAQ,KAAA;UACzB,IAAI,IAAAP,yBAAa,EAACD,UAAU,CAAC,EAAE;YAC7BI,WAAW,CAACd,IAAG,CAAC,GAAGU,UAAU;UAC/B,CAAC,MAAM,IACLV,IAAG,KAAK,WAAW,IACnBG,sBAAsB,CAACO,UAAU,CAAC,EAClC;YACAI,WAAW,CAACd,IAAG,CAAC,GAAGU,UAAU;UAC/B;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,IAAAC,yBAAa,EAAClC,KAAK,CAAC,EAAE;MAC/BqC,WAAW,CAACd,GAAG,CAAC,GAAGvB,KAAK;IAC1B;EACF;EAEA,OAAOqC,WAAW;AACpB;AAEA,SAASM,qBAAqBA,CAACC,OAAmB,EAAEC,OAAmB,EAAE;EACvE,IAAId,MAAM,CAACC,IAAI,CAACY,OAAO,CAAC,CAACE,MAAM,KAAKf,MAAM,CAACC,IAAI,CAACa,OAAO,CAAC,CAACC,MAAM,EAAE;IAC/D,OAAO,IAAI;EACb;EAEA,KAAK,IAAMvB,GAAG,IAAIQ,MAAM,CAACC,IAAI,CAACY,OAAO,CAAC,EAAE;IACtC,IAAIA,OAAO,CAACrB,GAAG,CAAC,KAAKsB,OAAO,CAACtB,GAAG,CAAC,EAAE,OAAO,IAAI;EAChD;EAEA,OAAO,KAAK;AACd;AAEA,SAASwB,oBAAoBA,CAACV,WAAgC,EAAE;EAC9D,SAAS;;EACT,IAAMW,MAA2B,GAAG,CAAC,CAAC;EACtC,SAAAC,KAAA,IAAgClB,MAAM,CAACS,OAAO,CAACH,WAAW,CAAC,EAAE;IAAA,IAAAa,KAAA,OAAAR,eAAA,CAAA9D,OAAA,EAAAqE,KAAA;IAAA,IAAjD1B,GAAG,GAAA2B,KAAA;IAAA,IAAEjB,UAAU,GAAAiB,KAAA;IACzB,IAAI3B,GAAG,KAAK,WAAW,EAAE;MACvByB,MAAM,CAACzB,GAAG,CAAC,GAAGU,UAAU,CAACkB,GAAG,CAAE,UAAAxB,SAA8B,EAAK;QAC/D,OAAOoB,oBAAoB,CAACpB,SAAS,CAAC;MACxC,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,IAAAO,yBAAa,EAACD,UAAU,CAAC,EAAE;MACpCe,MAAM,CAACzB,GAAG,CAAC,GAAGU,UAAU,CAACjC,KAAK;IAChC,CAAC,MAAM;MACLgD,MAAM,CAACzB,GAAG,CAAC,GAAGU,UAAU;IAC1B;EACF;EACA,OAAOe,MAAM;AACf;AA8Ce,SAASI,uBAAuBA,CAC7CC,SAA+C,EAC/CC,OAAwC,EACsB;EAC9D,IAAAC,kBAAS,EACP,OAAOF,SAAS,KAAK,UAAU,IAC5BA,SAAS,CAAC7D,SAAS,IAAI6D,SAAS,CAAC7D,SAAS,CAACgE,gBAAiB,EAC9D,oDAAmDH,SAAS,CAACI,IAAK,oLAAmL,CACvP;EAAA,IAEKC,iBAAiB,aAAAC,gBAAA;IAAA,IAAAC,UAAA,CAAAhF,OAAA,EAAA8E,iBAAA,EAAAC,gBAAA;IAAA,IAAAE,MAAA,GAAAxF,YAAA,CAAAqF,iBAAA;IAerB,SAAAA,kBAAYtB,KAAoD,EAAE;MAAA,IAAA0B,KAAA;MAAA,IAAAC,gBAAA,CAAAnF,OAAA,QAAA8E,iBAAA;MAChEI,KAAA,GAAAD,MAAA,CAAAnE,IAAA,OAAM0C,KAAK;MAAE4B,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,cAbgB,IAAI;MAAAE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA;MAAAE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,eAExB,CAAC,CAAC;MAAAE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,qBACI,IAAI;MAAAE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,oBACkB;QAAE9D,KAAK,EAAE,CAAC;MAAE,CAAC;MAAAgE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,mBACrC,CAAC,CAAC;MAAAE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,iBACiB,IAAI;MAAAE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,kCACmB,IAAI;MAAAE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,2BACvB,IAAI;MAAAE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,mBACf,CAAC,CAAC;MAAAE,eAAA,KAAAC,uBAAA,CAAArF,OAAA,EAAAkF,KAAA,uBA+TV,IAAAI,yBAAgB,EAAY;QAC7CC,eAAe,EAAE,SAAAA,gBAAA;UAAA,OACfL,KAAA,CAAK1B,KAAK,CAACgC,YAEV;QAAA;QACHC,WAAW,EAAG,SAAAA,YAAAC,GAAG,EAAK;UAEpB,IAAMC,GAAG,GAAG,IAAAC,2BAAc,EAACF,GAAG,CAAC;UAC/B,IAAAG,WAAA,GAA2DX,KAAA,CAAK1B,KAAK;YAA7DsC,MAAM,GAAAD,WAAA,CAANC,MAAM;YAAEC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;YAAEC,OAAO,GAAAH,WAAA,CAAPG,OAAO;YAAEC,mBAAA,GAAAJ,WAAA,CAAAI,mBAAA;UACnC,IACE,CAACH,MAAM,IAAIC,QAAQ,IAAIC,OAAO,IAAIC,mBAAmB,KACrDN,GAAG,IAAI,IAAI,EACX;YACA,IAAI,CAAC,IAAAO,+BAAc,GAAE,EAAE;cACrB,IAAAC,4BAAsB,EAAC,IAAI,EAAE,KAAK,CAAC;YACrC;YACA,IAAIL,MAAM,EAAE;cACV,IAAAM,+BAAyB,EACvBT,GAAG,EACHU,sCAAmB,CAACC,MAAM,EAC1BrF,UAAU,CAAC6E,MAAM,CAAC,CACnB;YACH;YACA,IAAIC,QAAQ,EAAE;cACZ,IAAAK,+BAAyB,EACvBT,GAAG,EACHU,sCAAmB,CAACE,QAAQ,EAC5BtF,UAAU,CAAC8E,QAAQ,CAAC,CACrB;YACH;YACA,IAAIC,OAAO,EAAE;cACX,IAAAI,+BAAyB,EACvBT,GAAG,EACHU,sCAAmB,CAACG,OAAO,EAC3BvF,UAAU,CAAC+E,OAAO,CAAC,CACpB;YACH;YACA,IAAIC,mBAAmB,EAAE;cAAA,IAAAQ,qBAAA;cACvB,IAAMC,uBAAuB,IAAAD,qBAAA,GAC3BvB,KAAA,CAAK1B,KAAK,CAACmD,qBAAqB,YAAAF,qBAAA,GAAIG,0CAAuB;cAC7D,IAAAR,+BAAyB,EACvBT,GAAG,EACHU,sCAAmB,CAACQ,yBAAyB,EAC7C5F,UAAU,CAACyF,uBAAuB,CAAC,EACnCT,mBAAmB,CACpB;YACH;UACF;UAEA,IAAIP,GAAG,KAAKR,KAAA,CAAK4B,UAAU,EAAE;YAC3B5B,KAAA,CAAK4B,UAAU,GAAGpB,GAAG;UACvB;QACF;MACF,CAAC,CAAC;MA/WA,IAAI,IAAAqB,uBAAM,GAAE,EAAE;QACZ7B,KAAA,CAAK8B,aAAa,GAAG;UAAE5F,KAAK,EAAE,CAAC;QAAE,CAAC;MACpC;MAAA,OAAA8D,KAAA;IACF;IAAA,IAAA+B,aAAA,CAAAjH,OAAA,EAAA8E,iBAAA;MAAAnC,GAAA;MAAAvB,KAAA,EAEA,SAAA8F,qBAAA,EAAuB;QACrB,IAAI,CAACC,mBAAmB,EAAE;QAC1B,IAAI,CAACC,aAAa,EAAE;QACpB,IAAI,CAACC,kBAAkB,EAAE;MAC3B;IAAA;MAAA1E,GAAA;MAAAvB,KAAA,EAEA,SAAAkG,kBAAA,EAAoB;QAClB,IAAI,CAACC,mBAAmB,EAAE;QAC1B,IAAI,CAACC,qBAAqB,EAAE;QAC5B,IAAI,CAACC,kBAAkB,EAAE;MAC3B;IAAA;MAAA9E,GAAA;MAAAvB,KAAA,EAEA,SAAAsG,iBAAA,EAAmB;QAAA,IAAAC,gBAAA;QAGjB,OAAO,CAAAA,gBAAA,OAAI,CAACb,UAAU,cAAAa,gBAAA,eAAfA,gBAAA,CAAiBC,iBAAiB,GACrC,IAAI,CAACd,UAAU,CAACc,iBAAiB,EAAE,GACnC,IAAI,CAACd,UAAU;MACrB;IAAA;MAAAnE,GAAA;MAAAvB,KAAA,EAEA,SAAAmG,oBAAA,EAAsB;QACpB,IAAMM,IAAI,GAAG,IAAI,CAACH,gBAAgB,EAAE;QACpC,IAAII,OAAO,GAAG,IAAI;QAElB,KAAK,IAAMnF,GAAG,IAAI,IAAI,CAACa,KAAK,EAAE;UAC5B,IAAMuE,IAAI,GAAG,IAAI,CAACvE,KAAK,CAACb,GAAG,CAAC;UAC5B,IACED,GAAG,CAAC,SAAS,EAAEqF,IAAI,CAAC,IACpBA,IAAI,CAACC,OAAO,YAAYC,4BAAmB,EAC3C;YACA,IAAIH,OAAO,KAAK,IAAI,EAAE;cACpBA,OAAO,GAAG,IAAAlC,2BAAc,EAAClB,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEwD,cAAc,GAAG,IAAI,GAAGL,IAAI,CAAC;YACjE;YACAE,IAAI,CAACC,OAAO,CAACG,iBAAiB,CAACL,OAAO,EAAYnF,GAAG,CAAC;UACxD;QACF;MACF;IAAA;MAAAA,GAAA;MAAAvB,KAAA,EAEA,SAAA+F,oBAAA,EAAsB;QACpB,KAAK,IAAMxE,GAAG,IAAI,IAAI,CAACa,KAAK,EAAE;UAC5B,IAAMuE,IAAI,GAAG,IAAI,CAACvE,KAAK,CAACb,GAAG,CAAC;UAC5B,IACED,GAAG,CAAC,SAAS,EAAEqF,IAAI,CAAC,IACpBA,IAAI,CAACC,OAAO,YAAYC,4BAAmB,EAC3C;YACAF,IAAI,CAACC,OAAO,CAACI,oBAAoB,EAAE;UACrC;QACF;MACF;IAAA;MAAAzF,GAAA;MAAAvB,KAAA,EAEA,SAAAgG,cAAA,EAAgB;QACd,IAAIiB,qBAAQ,CAACC,EAAE,KAAK,KAAK,IAAI,IAAI,CAACC,OAAO,KAAK,IAAI,EAAE;UAClD,KAAK,IAAMpG,KAAK,IAAI,IAAI,CAACoG,OAAO,EAAE;YAChC,IAAIpG,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEK,QAAQ,EAAE;cACnBL,KAAK,CAACK,QAAQ,CAACgG,MAAM,CAAC,IAAI,CAAC;YAC7B;UACF;QACF,CAAC,MAAM,IAAI,IAAI,CAACC,QAAQ,KAAK,CAAC,CAAC,IAAI,IAAI,CAACF,OAAO,KAAK,IAAI,EAAE;UAAA,IAAAG,qBAAA;UACxD,KAAK,IAAMvG,MAAK,IAAI,IAAI,CAACoG,OAAO,EAAE;YAChCpG,MAAK,CAACC,eAAe,CAACoG,MAAM,CAAC,IAAI,CAACC,QAAQ,CAAC;UAC7C;UACA,KAAAC,qBAAA,GAAI,IAAI,CAAClF,KAAK,CAACmF,aAAa,cAAAD,qBAAA,eAAxBA,qBAAA,CAA0BtG,eAAe,EAAE;YAC7C,IAAI,CAACoB,KAAK,CAACmF,aAAa,CAACvG,eAAe,CAACoG,MAAM,CAAC,IAAI,CAACC,QAAQ,CAAC;UAChE;UACA,IAAIG,MAAM,CAACC,UAAU,EAAE;YACrB,IAAMf,OAAO,GAAG,IAAI,CAACW,QAAQ;YAC7B,IAAAK,aAAO,EAAC,YAAM;cACZC,6BAA6B,CAAEjB,OAAO,CAAC;YACzC,CAAC,CAAC,EAAE;UACN;QACF;MACF;IAAA;MAAAnF,GAAA;MAAAvB,KAAA,EAEA,SAAA4H,sBACEC,SAAwD,EACxD;QACA,KAAK,IAAMtG,GAAG,IAAIsG,SAAS,EAAE;UAC3B,IAAMlB,IAAI,GAAG,IAAI,CAACvE,KAAK,CAACb,GAAG,CAAC;UAC5B,IACED,GAAG,CAAC,SAAS,EAAEqF,IAAI,CAAC,IACpBA,IAAI,CAACC,OAAO,YAAYC,4BAAmB,IAC3CF,IAAI,CAACC,OAAO,CAACkB,cAAc,EAC3B;YACAnB,IAAI,CAACC,OAAO,CAACI,oBAAoB,EAAE;UACrC;QACF;QAEA,IAAIN,OAAO,GAAG,IAAI;QAElB,KAAK,IAAMnF,KAAG,IAAI,IAAI,CAACa,KAAK,EAAE;UAC5B,IAAMuE,KAAI,GAAG,IAAI,CAACvE,KAAK,CAACb,KAAG,CAAC;UAC5B,IACED,GAAG,CAAC,SAAS,EAAEqF,KAAI,CAAC,IACpBA,KAAI,CAACC,OAAO,YAAYC,4BAAmB,IAC3CF,KAAI,CAACC,OAAO,CAACkB,cAAc,EAC3B;YACA,IAAIpB,OAAO,KAAK,IAAI,EAAE;cACpB,IAAMD,IAAI,GAAG,IAAI,CAACH,gBAAgB,EAAE;cACpCI,OAAO,GAAG,IAAAlC,2BAAc,EAAClB,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEwD,cAAc,GAAG,IAAI,GAAGL,IAAI,CAAC;YACjE;YACAE,KAAI,CAACC,OAAO,CAACG,iBAAiB,CAACL,OAAO,EAAYnF,KAAG,CAAC;YACtDoF,KAAI,CAACC,OAAO,CAACkB,cAAc,GAAG,KAAK;UACrC;QACF;MACF;IAAA;MAAAvG,GAAA;MAAAvB,KAAA,EAEA,SAAA+H,kBAAkB3F,KAAiB,EAAE;QACnC,IAAIkB,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEwD,cAAc,EAAE;UAE3BxD,OAAO,CAACwD,cAAc,CAAC,IAAI,CAACpB,UAAU,EAAGtD,KAAK,CAAC;QACjD,CAAC,MAAM;UAAA,IAAA4F,iBAAA,EAAAC,qBAAA;UAEL,CAAAD,iBAAA,OAAI,CAACtC,UAAU,cAAAsC,iBAAA,wBAAAC,qBAAA,GAAfD,iBAAA,CAAiBlB,cAAc,cAAAmB,qBAAA,uBAA/BA,qBAAA,CAAAvI,IAAA,CAAAsI,iBAAA,EAAkC5F,KAAK,CAAC;QAC1C;MACF;IAAA;MAAAb,GAAA;MAAAvB,KAAA,EAEA,SAAAkI,aAAA,EAAe;QAAA,IAAAC,iBAAA;QACb,IAAIzB,OAAsB;QAC1B,IAAI0B,QAAuB;QAC3B,IAAIC,iBAA2C,GAAG,IAAI;QACtD,IAAIC,UAAU;QAGd,IAAMC,SAAS,GAAG,CAAAJ,iBAAA,OAAI,CAACzC,UAAU,cAAAyC,iBAAA,eAAfA,iBAAA,CAAiBK,gBAAgB,GAC/C,IAAI,CAAC9C,UAAU,CAAC8C,gBAAgB,EAAE,GAClC,IAAI;QACR,IAAIvB,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;UACzBR,OAAO,GAAG,IAAAlC,2BAAc,EAAC+D,SAAS,CAAC;UACnCH,QAAQ,GAAG,IAAI;UACfC,iBAAiB,GAAG,IAAI;UACxBC,UAAU,GAAG,IAAI;QACnB,CAAC,MAAM;UAAA,IAAAG,qBAAA;UAEL,IAAMC,YAAY,GAAGC,sBAAU,CAACC,2BAA2B,CAACL,SAAS,CAAC;UACtE,IAAI,CAACG,YAAY,EAAE;YACjB,MAAM,IAAIG,KAAK,CACb,yEAAyE,CAC1E;UACH;UAEAnC,OAAO,GAAGgC,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,UAAU;UAKlCV,QAAQ,GAAGM,YAAY,aAAZA,YAAY,wBAAAD,qBAAA,GAAZC,YAAY,CAAEJ,UAAU,cAAAG,qBAAA,uBAAxBA,qBAAA,CAA0BM,eAAe;UAEpDT,UAAU,GAAGI,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEJ,UAAU;UAErC,IAAId,MAAM,CAACC,UAAU,EAAE;YACrBY,iBAAiB,GAAG,IAAAW,wCAA2B,EAAC,IAAI,CAAC;UACvD;QACF;QACA,OAAO;UAAEtC,OAAO,EAAPA,OAAO;UAAE0B,QAAQ,EAARA,QAAQ;UAAEC,iBAAiB,EAAjBA,iBAAiB;UAAEC,UAAA,EAAAA;QAAW,CAAC;MAC7D;IAAA;MAAA/G,GAAA;MAAAvB,KAAA,EAEA,SAAAoG,sBAAA,EAAwB;QAAA,IAAA6C,MAAA;QAAA,IAAAC,sBAAA,EAAAC,sBAAA;QACtB,IAAMtI,MAAM,GAAG,IAAI,CAACuB,KAAK,CAACrB,KAAK,GAC3BH,kBAAkB,CAACV,YAAY,CAAa,IAAI,CAACkC,KAAK,CAACrB,KAAK,CAAC,CAAC,GAC9D,EAAE;QACN,IAAMqI,UAAU,GAAG,IAAI,CAACjC,OAAO;QAC/B,IAAI,CAACA,OAAO,GAAGtG,MAAM;QAErB,IAAMwI,iBAAiB,GAAG,IAAI,CAACC,cAAc;QAC7C,IAAI,CAACA,cAAc,GAAG,IAAI,CAAClH,KAAK,CAACmF,aAAa;QAE9C,IAAAgC,kBAAA,GACE,IAAI,CAACrB,YAAY,EAAE;UADbxB,OAAO,GAAA6C,kBAAA,CAAP7C,OAAO;UAAE0B,QAAQ,GAAAmB,kBAAA,CAARnB,QAAQ;UAAEC,iBAAiB,GAAAkB,kBAAA,CAAjBlB,iBAAiB;UAAEC,UAAA,GAAAiB,kBAAA,CAAAjB,UAAA;QAI9C,IAAMkB,mBAAmB,GACvB,EAAAN,sBAAA,OAAI,CAAC9G,KAAK,CAACmF,aAAa,cAAA2B,sBAAA,uBAAxBA,sBAAA,CAA0BlI,eAAe,KAAIH,MAAM,CAACiC,MAAM;QAC5D,IAAI0G,mBAAmB,IAAIlB,UAAU,EAAE;UACrC,IAAAmB,6BAAe,EAACnB,UAAU,CAAC;QAC7B;QAEA,IAAI,CAACjB,QAAQ,GAAGX,OAAiB;QAGjC,IAAI0C,UAAU,EAAE;UAEd,IAAMM,eAAe,GACnB7I,MAAM,CAACiC,MAAM,KAAK,CAAC,IACnBsG,UAAU,CAACtG,MAAM,KAAK,CAAC,IACvB7B,mBAAmB,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAEuI,UAAU,CAAC,CAAC,CAAC,CAAC;UAE/C,IAAI,CAACM,eAAe,EAAE;YAAA,IAAAC,KAAA,YAAAA,MAAAC,SAAA,EAEgB;cAClC,IAAMC,SAAS,GAAGhJ,MAAM,CAACe,IAAI,CAAE,UAAAb,KAAK;gBAAA,OAClCE,mBAAmB,CAACF,KAAK,EAAE6I,SAAS,CAAC;cAAA,EACtC;cACD,IAAI,CAACC,SAAS,EAAE;gBACdD,SAAS,CAAC5I,eAAe,CAACoG,MAAM,CAACV,OAAO,CAAC;cAC3C;YACF;YAPA,KAAK,IAAMkD,SAAS,IAAIR,UAAU;cAAAO,KAAA,CAAAC,SAAA;YAAA;UAQpC;QACF;QAEA/I,MAAM,CAACJ,OAAO,CAAE,UAAAM,KAAK,EAAK;UACxBA,KAAK,CAACC,eAAe,CAAC8I,GAAG,CAAC;YACxBvF,GAAG,EAAEmC,OAAO;YACZjD,IAAI,EAAE2E,QAAQ;YACdC,iBAAA,EAAAA;UACF,CAAC,CAAC;UACF,IAAI,IAAA1C,uBAAM,GAAE,EAAE;YAOZsD,MAAI,CAACrD,aAAa,CAAC5F,KAAK,GAAA+B,MAAA,CAAAgI,MAAA,KACnBd,MAAI,CAACrD,aAAa,CAAC5F,KAAK,EACxBe,KAAK,CAACiJ,OAAO,CAAChK,KAAA,CAClB;YACDe,KAAK,CAAC6E,aAAa,CAACgB,OAAO,GAAGqC,MAAI,CAACrD,aAAa;UAClD;QACF,CAAC,CAAC;QAGF,IACEyD,iBAAiB,IACjB,CAAChI,mBAAmB,CAACgI,iBAAiB,EAAE,IAAI,CAACjH,KAAK,CAACmF,aAAa,CAAC,EACjE;UACA8B,iBAAiB,CAACrI,eAAe,CAAEoG,MAAM,CAACV,OAAO,CAAW;QAC9D;QAGA,KAAAyC,sBAAA,GAAI,IAAI,CAAC/G,KAAK,CAACmF,aAAa,cAAA4B,sBAAA,eAAxBA,sBAAA,CAA0BnI,eAAe,EAAE;UAC7C,IAAI,CAACoB,KAAK,CAACmF,aAAa,CAACvG,eAAe,CAAC8I,GAAG,CAAC;YAE3CvF,GAAG,EAAEmC,OAAQ;YAEbjD,IAAI,EAAE2E,QAAS;YAEfC,iBAAiB,EAAEA;UACrB,CAAC,CAAC;QACJ;MACF;IAAA;MAAA9G,GAAA;MAAAvB,KAAA,EAEA,SAAAqG,mBAAA,EAAqB;QACnB,IAAM4D,cAAmC,GACvC9H,+BAA+B,CAAC,IAAI,CAACC,KAAK,CAAC;QAC7C,IAAM8H,UAAU,GAAGvH,qBAAqB,CACtCsH,cAAc,EACd,IAAI,CAACE,YAAY,CAClB;QAED,IAAID,UAAU,EAAE;UACd,IAAI,CAAC,IAAI,CAACE,2BAA2B,EAAE;YACrC,IAAI,CAACA,2BAA2B,GAAG,IAAAC,0CAAsB,GAAE;YAE3D,IAAAC,mBAAA,GACE,IAAI,CAACpC,YAAY,EAAE;cADbxB,OAAO,GAAA4D,mBAAA,CAAP5D,OAAO;cAAE0B,QAAQ,GAAAkC,mBAAA,CAARlC,QAAQ;cAAEC,iBAAiB,GAAAiC,mBAAA,CAAjBjC,iBAAiB;cAAEC,UAAA,GAAAgC,mBAAA,CAAAhC,UAAA;YAG9C,IAAIvG,MAAM,CAACC,IAAI,CAACiI,cAAc,CAAC,CAACnH,MAAM,IAAIwF,UAAU,EAAE;cACpD,IAAAmB,6BAAe,EAACnB,UAAU,CAAC;YAC7B;YAEA,IAAI,CAAC8B,2BAA2B,CAACN,GAAG,CAAC;cAEnCvF,GAAG,EAAEmC,OAAQ;cAEbjD,IAAI,EAAE2E,QAAS;cAEfC,iBAAiB,EAAEA;YACrB,CAAC,CAAC;UACJ;UACA,IAAMkC,uBAAuB,GAC3B,IAAI,CAACH,2BAA2B,CAACG,uBAAuB;UAE1D,IAAMC,YAAY,GAAGC,yBAAsB,CAACC,MAAM,GAC9CjJ,SAAS,GACR;YAAEkJ,KAAK,EAAE,IAAIC,GAAG,CAAC,CAAC,IAAI,CAAC;UAAE,CAAqB;UAEnD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;YAC5B,SAAS;;YACT,IAAM7H,MAAM,GAAGD,oBAAoB,CAACkH,cAAc,CAAC;YACnD,IAAAa,oBAAW,EAACP,uBAAuB,EAAEvH,MAAM,EAAEwH,YAAY,CAAC;UAC5D,CAAC;UACD,IAAI,CAACL,YAAY,GAAGF,cAAc;UAClC,IAAI,IAAI,CAACc,oBAAoB,EAAE;YAC7B,IAAAC,gBAAU,EAAC,IAAI,CAACD,oBAAoB,CAAC;UACvC;UACA,IAAI,CAACA,oBAAoB,GAAG,IAAI;UAChC,IAAIhJ,MAAM,CAACC,IAAI,CAACiI,cAAc,CAAC,CAACnH,MAAM,EAAE;YACtC,IAAI,CAACiI,oBAAoB,GAAG,IAAAE,iBAAW,EACrCJ,eAAe,EACf9I,MAAM,CAACmJ,MAAM,CAACjB,cAAc,CAAC,CAC9B;UACH;QACF;MACF;IAAA;MAAA1I,GAAA;MAAAvB,KAAA,EAEA,SAAAiG,mBAAA,EAAqB;QACnB,IAAI,IAAI,CAAC8E,oBAAoB,EAAE;UAC7B,IAAAC,gBAAU,EAAC,IAAI,CAACD,oBAAoB,CAAC;QACvC;MACF;IAAA;MAAAxJ,GAAA;MAAAvB,KAAA,EAEA,SAAAmL,mBACEtD,SAAwD,EACxD;QACA,IAAI,CAACD,qBAAqB,CAACC,SAAS,CAAC;QACrC,IAAI,CAACzB,qBAAqB,EAAE;QAC5B,IAAI,CAACC,kBAAkB,EAAE;MAC3B;IAAA;MAAA9E,GAAA;MAAAvB,KAAA,EAyDA,SAAAoL,wBACEC,UAAyD,EAChC;QAAA,IAAAC,MAAA;QACzB,IAAMlJ,KAA8B,GAAG,CAAC,CAAC;QAAA,IAAAmJ,MAAA,YAAAA,OAAA,EACX;UAC5B,IAAMvL,KAAK,GAAGqL,UAAU,CAAC9J,GAAG,CAAC;UAC7B,IAAIA,GAAG,KAAK,OAAO,EAAE;YACnB,IAAMiK,SAAS,GAAGH,UAAU,CAACtK,KAAK;YAClC,IAAMF,MAAM,GAAGX,YAAY,CAAasL,SAAS,WAATA,SAAS,GAAI,EAAE,CAAC;YACxD,IAAMC,cAA0B,GAAG5K,MAAM,CAACsC,GAAG,CAAE,UAAApC,KAAK,EAAK;cACvD,IAAIA,KAAK,IAAIA,KAAK,CAACC,eAAe,EAAE;gBAElCD,KAAK,CAACK,QAAQ,CAAC0I,GAAG,CAACwB,MAAI,CAAC;gBACxB,IAAIA,MAAI,CAACI,cAAc,EAAE;kBACvBJ,MAAI,CAACK,YAAY,GAAA5J,MAAA,CAAAgI,MAAA,KACZhJ,KAAK,CAACiJ,OAAO,CAAChK,KAAK,EACnB,IAAA4L,4BAAiB,EAAa7K,KAAK,CAACiJ,OAAO,CAAC6B,OAAO,EACvD;gBACH;gBACA,OAAOP,MAAI,CAACK,YAAY;cAC1B,CAAC,MAAM,IAAI7J,eAAe,CAACf,KAAK,CAAC,EAAE;gBACjC,IAAIuK,MAAI,CAACI,cAAc,EAAE;kBACvB,OAAO3I,oBAAoB,CAAChC,KAAK,CAAC;gBACpC;gBACA,IAAM+K,QAAoB,GAAG,CAAC,CAAC;gBAC/B,SAAAC,KAAA,IAAgChK,MAAM,CAACS,OAAO,CAACzB,KAAK,CAAC,EAAE;kBAAA,IAAAiL,KAAA,OAAAtJ,eAAA,CAAA9D,OAAA,EAAAmN,KAAA;kBAAA,IAA3CxK,KAAG,GAAAyK,KAAA;kBAAA,IAAE/J,UAAU,GAAA+J,KAAA;kBACzB,IACE,CAAC,IAAA9J,yBAAa,EAACD,UAAU,CAAC,IAC1B,EAAEV,KAAG,KAAK,WAAW,IAAIG,sBAAsB,CAACO,UAAU,CAAC,CAAC,EAC5D;oBACA6J,QAAQ,CAACvK,KAAG,CAAC,GAAGU,UAAU;kBAC5B;gBACF;gBACA,OAAO6J,QAAQ;cACjB,CAAC,MAAM;gBACL,OAAO/K,KAAK;cACd;YACF,CAAC,CAAC;YACFqB,KAAK,CAACb,GAAG,CAAC,GAAG0K,uBAAU,CAACC,OAAO,CAACT,cAAc,CAAC;UACjD,CAAC,MAAM,IAAIlK,GAAG,KAAK,eAAe,EAAE;YAClC,IAAM4K,YAAY,GAAGd,UAAU,CAAC9D,aAE/B;YACD,IAAI4E,YAAY,CAACnC,OAAO,KAAKvI,SAAS,EAAE;cACtCM,MAAM,CAACC,IAAI,CAACmK,YAAY,CAACnC,OAAO,CAAChK,KAAK,CAAC,CAACS,OAAO,CAAE,UAAAc,GAAG,EAAK;gBAAA,IAAA6K,qBAAA,EAAAC,qBAAA;gBACvDjK,KAAK,CAACb,GAAG,CAAC,IAAA6K,qBAAA,GAAGD,YAAY,CAACnC,OAAO,cAAAoC,qBAAA,uBAApBA,qBAAA,CAAsBpM,KAAK,CAACuB,GAAG,CAAC;gBAC7C,CAAA8K,qBAAA,GAAAF,YAAY,CAAC/K,QAAQ,cAAAiL,qBAAA,uBAArBA,qBAAA,CAAuBvC,GAAG,CAACwB,MAAI,CAAC;cAClC,CAAC,CAAC;YACJ;UACF,CAAC,MAAM,IACLhK,GAAG,CAAC,SAAS,EAAEtB,KAAK,CAAC,IACrBA,KAAK,CAAC4G,OAAO,YAAYC,4BAAmB,EAC5C;YACA,IAAI7G,KAAK,CAAC4G,OAAO,CAAC0F,UAAU,CAACxJ,MAAM,GAAG,CAAC,EAAE;cACvC9C,KAAK,CAAC4G,OAAO,CAAC0F,UAAU,CAAC7L,OAAO,CAAE,UAAA8L,SAAS,EAAK;gBAC9CnK,KAAK,CAACmK,SAAS,CAAC,GAAGjL,GAAG,CAAC,WAAW,EAAEtB,KAAK,CAAC4G,OAAO,CAAC,GAC7C5G,KAAK,CAAC4G,OAAO,CAAC4F,SAAS,CACtBD,SAAS,CACV,GACD3M,aAAa;cACnB,CAAC,CAAC;YACJ,CAAC,MAAM;cACLwC,KAAK,CAACb,GAAG,CAAC,GAAG3B,aAAa;YAC5B;UACF,CAAC,MAAM,IAAI,IAAAsC,yBAAa,EAAClC,KAAK,CAAC,EAAE;YAC/B,IAAIsL,MAAI,CAACI,cAAc,EAAE;cACvBtJ,KAAK,CAACb,GAAG,CAAC,GAAIvB,KAAK,CAAsBA,KAAK;YAChD;UACF,CAAC,MAAM,IACLuB,GAAG,KAAK,6BAA6B,IACrC,CAAC,IAAAkL,iCAAgB,GAAE,EACnB;YACArK,KAAK,CAACb,GAAG,CAAC,GAAGvB,KAAK;UACpB;QACF;QAtEA,KAAK,IAAMuB,GAAG,IAAI8J,UAAU;UAAAE,MAAA;QAAA;QAuE5B,OAAOnJ,KAAK;MACd;IAAA;MAAAb,GAAA;MAAAvB,KAAA,EAEA,SAAA0M,OAAA,EAAS;QACP,IAAMtK,KAAK,GAAG,IAAI,CAACgJ,uBAAuB,CAAC,IAAI,CAAChJ,KAAK,CAAC;QACtD,IAAI,IAAAuD,uBAAM,GAAE,EAAE;UACZvD,KAAK,CAACwD,aAAa,GAAG,IAAI,CAACA,aAAa;QAC1C;QAEA,IAAI,IAAI,CAAC8F,cAAc,EAAE;UACvB,IAAI,CAACA,cAAc,GAAG,KAAK;QAC7B;QAEA,IAAMiB,aAAa,GAAG1F,qBAAQ,CAAC2F,MAAM,CAAC;UACpCC,GAAG,EAAE,CAAC,CAAC;UACPjO,OAAO,EAAE;YAAEkO,WAAW,EAAE;UAAM;QAChC,CAAC,CAAC;QACF,OACEC,cAAA,CAAAC,aAAA,CAAC3J,SAAS,EAAA4J,QAAA,KAAK7K,KAAK;UAAEkC,GAAG,EAAE,IAAI,CAAC4I;QAAiB,GAAKP,aAAa,EAAI;MAE3E;IAAA;IAAA,OAAAjJ,iBAAA;EAAA,EAje8BqJ,cAAK,CAAC1J,SAAS;EAke9CW,eAAA,CAleKN,iBAAiB;EAoevBA,iBAAiB,CAACyJ,WAAW,GAAI,qBAC/B9J,SAAS,CAAC8J,WAAW,IAAI9J,SAAS,CAACI,IAAI,IAAI,WAC5C,GAAE;EAEH,OAAOsJ,cAAK,CAACK,UAAU,CAAY,UAAChL,KAAK,EAAEkC,GAAG,EAAK;IACjD,OACEyI,cAAA,CAAAC,aAAA,CAACtJ,iBAAiB,EAAAuJ,QAAA,KACZ7K,KAAK,EACJkC,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG;MAAEF,YAAY,EAAEE;IAAI,CAAC,EAChD;EAEN,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}