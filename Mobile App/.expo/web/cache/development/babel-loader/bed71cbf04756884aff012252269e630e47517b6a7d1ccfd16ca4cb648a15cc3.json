{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\nvar _IndiscreteGestureHandler = _interopRequireDefault(require(\"./IndiscreteGestureHandler\"));\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar PinchGestureHandler = function (_IndiscreteGestureHan) {\n  (0, _inherits2.default)(PinchGestureHandler, _IndiscreteGestureHan);\n  var _super = _createSuper(PinchGestureHandler);\n  function PinchGestureHandler() {\n    (0, _classCallCheck2.default)(this, PinchGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(PinchGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'pinch';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Pinch;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var scale = _ref.scale,\n        velocity = _ref.velocity,\n        center = _ref.center;\n      return {\n        focalX: center.x,\n        focalY: center.y,\n        velocity: velocity,\n        scale: scale\n      };\n    }\n  }]);\n  return PinchGestureHandler;\n}(_IndiscreteGestureHandler.default);\nvar _default = PinchGestureHandler;\nexports.default = _default;","map":{"version":3,"names":["_hammerjs","_interopRequireDefault","require","_IndiscreteGestureHandler","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","PinchGestureHandler","_IndiscreteGestureHan","_inherits2","_super","_classCallCheck2","_createClass2","key","get","Hammer","Pinch","value","transformNativeEvent","_ref","scale","velocity","center","focalX","x","focalY","y","IndiscreteGestureHandler","_default","exports"],"sources":["E:\\Crop Disease Classifier- Hackaton project\\Android App\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\PinchGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\nimport { HammerInputExt } from './GestureHandler';\n\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass PinchGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'pinch';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pinch;\n  }\n\n  transformNativeEvent({ scale, velocity, center }: HammerInputExt) {\n    return {\n      focalX: center.x,\n      focalY: center.y,\n      velocity,\n      scale,\n    };\n  }\n}\n\nexport default PinchGestureHandler;\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA,IAAAC,yBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAA,SAAAE,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAC,OAAA,EAAAN,OAAA,GAAAO,MAAA,MAAAN,yBAAA,QAAAO,SAAA,OAAAH,gBAAA,CAAAC,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAP,KAAA,EAAAQ,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAH,KAAA,CAAAS,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAAR,OAAA,QAAAC,MAAA;AAAA,SAAAL,0BAAA,eAAAQ,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAV,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAAI,CAAA;AAAA,IAEMC,mBAAN,aAAAC,qBAAA;EAAA,IAAAC,UAAA,CAAAlB,OAAA,EAAAgB,mBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAA1B,YAAA,CAAAuB,mBAAA;EAAA,SAAAA,oBAAA;IAAA,IAAAI,gBAAA,CAAApB,OAAA,QAAAgB,mBAAA;IAAA,OAAAG,MAAA,CAAAZ,KAAA,OAAAD,SAAA;EAAA;EAAA,IAAAe,aAAA,CAAArB,OAAA,EAAAgB,mBAAA;IAAAM,GAAA;IAAAC,GAAA,EACU,SAAAA,IAAA,EAAG;MACT,OAAO,OAAP;IACD;EAAA;IAAAD,GAAA;IAAAC,GAAA,EAEqB,SAAAA,IAAA,EAAG;MACvB,OAAOC,iBAAM,CAACC,KAAd;IACD;EAAA;IAAAH,GAAA;IAAAI,KAAA,EAED,SAAAC,qBAAAC,IAAA,EAAkE;MAAA,IAA3CC,KAAF,GAAAD,IAAA,CAAEC,KAAF;QAASC,QAAT,GAAAF,IAAA,CAASE,QAAT;QAAmBC,MAAA,GAAAH,IAAA,CAAAG,MAAA;MACtC,OAAO;QACLC,MAAM,EAAED,MAAM,CAACE,CADV;QAELC,MAAM,EAAEH,MAAM,CAACI,CAFV;QAGLL,QAHK,EAGLA,QAHK;QAILD,KAAA,EAAAA;MAJK,CAAP;IAMD;EAAA;EAAA,OAAAb,mBAAA;AAAA,EAhB+BoB,iCAAlC;AAAA,IAAAC,QAAA,GAmBerB,mBAAf;AAAAsB,OAAA,CAAAtC,OAAA,GAAAqC,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}