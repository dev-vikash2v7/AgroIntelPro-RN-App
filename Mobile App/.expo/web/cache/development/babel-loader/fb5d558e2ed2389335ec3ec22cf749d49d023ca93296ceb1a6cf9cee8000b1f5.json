{"ast":null,"code":"var _styleAnimation = require(\"../animation/styleAnimation\");\nvar _mutables = require(\"../mutables\");\nvar _animationBuilder = require(\"./animationBuilder\");\nvar _threads = require(\"../threads\");\nvar TAG_OFFSET = 1e9;\nfunction startObservingProgress(tag, sharedValue, animationType) {\n  'worklet';\n\n  var isSharedTransition = animationType === _animationBuilder.LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, function () {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\nfunction stopObservingProgress(tag, sharedValue, cancelled, removeView) {\n  'worklet';\n\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, cancelled, removeView);\n}\nfunction createLayoutAnimationManager() {\n  'worklet';\n\n  var enteringAnimationForTag = new Map();\n  var mutableValuesForTag = new Map();\n  return {\n    start: function start(tag, type, yogaValues, config) {\n      var style = config(yogaValues);\n      var currentAnimation = style.animations;\n      if (type === _animationBuilder.LayoutAnimationType.ENTERING) {\n        enteringAnimationForTag.set(tag, currentAnimation);\n      } else if (type === _animationBuilder.LayoutAnimationType.LAYOUT) {\n        var enteringAnimation = enteringAnimationForTag.get(tag);\n        if (enteringAnimation) {\n          currentAnimation = Object.assign({}, enteringAnimation, style.animations);\n        }\n      }\n      var value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = (0, _mutables.makeUIMutable)(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value, false, false);\n        value._value = style.initialValues;\n      }\n      var animation = (0, _styleAnimation.withStyleAnimation)(currentAnimation);\n      animation.callback = function (finished) {\n        if (finished) {\n          enteringAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          var shouldRemoveView = type === _animationBuilder.LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, finished, shouldRemoveView);\n        }\n        style.callback && style.callback(finished === undefined ? false : finished);\n      };\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop: function stop(tag) {\n      var value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value, true, true);\n    }\n  };\n}\n(0, _threads.runOnUIImmediately)(function () {\n  'worklet';\n\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();","map":{"version":3,"names":["_styleAnimation","require","_mutables","_animationBuilder","_threads","TAG_OFFSET","startObservingProgress","tag","sharedValue","animationType","isSharedTransition","LayoutAnimationType","SHARED_ELEMENT_TRANSITION","addListener","_notifyAboutProgress","value","stopObservingProgress","cancelled","removeView","removeListener","_notifyAboutEnd","createLayoutAnimationManager","enteringAnimationForTag","Map","mutableValuesForTag","start","type","yogaValues","config","style","currentAnimation","animations","ENTERING","set","LAYOUT","enteringAnimation","get","Object","assign","undefined","makeUIMutable","initialValues","_value","animation","withStyleAnimation","callback","finished","delete","shouldRemoveView","EXITING","stop","runOnUIImmediately","global","LayoutAnimationsManager"],"sources":["D:\\vikash\\AgroIntelPro-RN-App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\layoutReanimation\\animationsManager.ts"],"sourcesContent":["import { withStyleAnimation } from '../animation/styleAnimation';\nimport { SharedValue } from '../commonTypes';\nimport { makeUIMutable } from '../mutables';\nimport {\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n  LayoutAnimationsValues,\n} from './animationBuilder';\nimport { runOnUIImmediately } from '../threads';\n\nconst TAG_OFFSET = 1e9;\n\nfunction startObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  animationType: LayoutAnimationType\n): void {\n  'worklet';\n  const isSharedTransition =\n    animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, () => {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\n\nfunction stopObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  cancelled: boolean,\n  removeView: boolean\n): void {\n  'worklet';\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, cancelled, removeView);\n}\n\nfunction createLayoutAnimationManager() {\n  'worklet';\n  const enteringAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n\n  return {\n    start(\n      tag: number,\n      type: LayoutAnimationType,\n      yogaValues: LayoutAnimationsValues,\n      config: LayoutAnimationFunction\n    ) {\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n\n      if (type === LayoutAnimationType.ENTERING) {\n        enteringAnimationForTag.set(tag, currentAnimation);\n      } else if (type === LayoutAnimationType.LAYOUT) {\n        // When layout animation is requested, but entering is still running, we merge\n        // new layout animation targets into the ongoing animation\n        const enteringAnimation = enteringAnimationForTag.get(tag);\n        if (enteringAnimation) {\n          currentAnimation = { ...enteringAnimation, ...style.animations };\n        }\n      }\n\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeUIMutable(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value, false, false);\n        value._value = style.initialValues;\n      }\n\n      // @ts-ignore The line below started failing because I added types to the method â€“ don't have time to fix it right now\n      const animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = (finished?: boolean) => {\n        if (finished) {\n          enteringAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, finished, shouldRemoveView);\n        }\n        style.callback &&\n          style.callback(finished === undefined ? false : finished);\n      };\n\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop(tag: number) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value, true, true);\n    },\n  };\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}