{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _Platform = _interopRequireDefault(require(\"../../../exports/Platform\"));\nvar _RCTDeviceEventEmitter = _interopRequireDefault(require(\"./RCTDeviceEventEmitter\"));\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar NativeEventEmitter = function () {\n  function NativeEventEmitter(nativeModule) {\n    (0, _classCallCheck2.default)(this, NativeEventEmitter);\n    if (_Platform.default.OS === 'ios') {\n      (0, _invariant.default)(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n      this._nativeModule = nativeModule;\n    }\n  }\n  (0, _createClass2.default)(NativeEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventType, listener, context) {\n      var _this = this;\n      var _this$_nativeModule;\n      (_this$_nativeModule = this._nativeModule) == null ? void 0 : _this$_nativeModule.addListener(eventType);\n      var subscription = _RCTDeviceEventEmitter.default.addListener(eventType, listener, context);\n      return {\n        remove: function remove() {\n          if (subscription != null) {\n            var _this$_nativeModule2;\n            (_this$_nativeModule2 = _this._nativeModule) == null ? void 0 : _this$_nativeModule2.removeListeners(1);\n            subscription.remove();\n            subscription = null;\n          }\n        }\n      };\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(eventType, listener) {\n      var _this$_nativeModule3;\n      (_this$_nativeModule3 = this._nativeModule) == null ? void 0 : _this$_nativeModule3.removeListeners(1);\n      _RCTDeviceEventEmitter.default.removeListener(eventType, listener);\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventType) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      _RCTDeviceEventEmitter.default.emit.apply(_RCTDeviceEventEmitter.default, [eventType].concat(args));\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventType) {\n      var _this$_nativeModule4;\n      (0, _invariant.default)(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n      (_this$_nativeModule4 = this._nativeModule) == null ? void 0 : _this$_nativeModule4.removeListeners(this.listenerCount(eventType));\n      _RCTDeviceEventEmitter.default.removeAllListeners(eventType);\n    }\n  }, {\n    key: \"listenerCount\",\n    value: function listenerCount(eventType) {\n      return _RCTDeviceEventEmitter.default.listenerCount(eventType);\n    }\n  }]);\n  return NativeEventEmitter;\n}();\nexports.default = NativeEventEmitter;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classCallCheck2","_createClass2","_Platform","_RCTDeviceEventEmitter","_invariant","NativeEventEmitter","nativeModule","Platform","OS","invariant","_nativeModule","key","addListener","eventType","listener","context","_this","_this$_nativeModule","subscription","RCTDeviceEventEmitter","remove","_this$_nativeModule2","removeListeners","removeListener","_this$_nativeModule3","emit","_len","arguments","length","args","Array","_key","apply","concat","removeAllListeners","_this$_nativeModule4","listenerCount"],"sources":["D:/vikash/AgroIntelPro-RN-App/node_modules/react-native-web/dist/vendor/react-native/EventEmitter/NativeEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport Platform from '../../../exports/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'fbjs/lib/invariant';\n/**\n * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n * will be notified (via `addListener` and `removeListeners`) when the listener\n * count changes to manage \"native memory\".\n *\n * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n * This means event names must be globally unique, and it means that call sites\n * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n */\nexport default class NativeEventEmitter {\n  constructor(nativeModule) {\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n      this._nativeModule = nativeModule;\n    }\n  }\n  addListener(eventType, listener, context) {\n    var _this$_nativeModule;\n    (_this$_nativeModule = this._nativeModule) == null ? void 0 : _this$_nativeModule.addListener(eventType);\n    var subscription = RCTDeviceEventEmitter.addListener(eventType, listener, context);\n    return {\n      remove: () => {\n        if (subscription != null) {\n          var _this$_nativeModule2;\n          (_this$_nativeModule2 = this._nativeModule) == null ? void 0 : _this$_nativeModule2.removeListeners(1);\n          // $FlowFixMe[incompatible-use]\n          subscription.remove();\n          subscription = null;\n        }\n      }\n    };\n  }\n\n  /**\n   * @deprecated Use `remove` on the EventSubscription from `addListener`.\n   */\n  removeListener(eventType, listener) {\n    var _this$_nativeModule3;\n    (_this$_nativeModule3 = this._nativeModule) == null ? void 0 : _this$_nativeModule3.removeListeners(1);\n    // NOTE: This will report a deprecation notice via `console.error`.\n    // $FlowFixMe[prop-missing] - `removeListener` exists but is deprecated.\n    RCTDeviceEventEmitter.removeListener(eventType, listener);\n  }\n  emit(eventType) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n    // included for completeness.\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n  removeAllListeners(eventType) {\n    var _this$_nativeModule4;\n    invariant(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n    (_this$_nativeModule4 = this._nativeModule) == null ? void 0 : _this$_nativeModule4.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n  listenerCount(eventType) {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n}"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,OAAA;AAAA,IAAAC,gBAAA,GAAAP,sBAAA,CAAAC,OAAA;AAAA,IAAAO,aAAA,GAAAR,sBAAA,CAAAC,OAAA;AAEb,IAAAQ,SAAA,GAAAT,sBAAA,CAAAC,OAAA;AACA,IAAAS,sBAAA,GAAAV,sBAAA,CAAAC,OAAA;AACA,IAAAU,UAAA,GAAAX,sBAAA,CAAAC,OAAA;AAA2C,IAWtBW,kBAAkB;EACrC,SAAAA,mBAAYC,YAAY,EAAE;IAAA,IAAAN,gBAAA,CAAAD,OAAA,QAAAM,kBAAA;IACxB,IAAIE,iBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MACzB,IAAAC,kBAAS,EAACH,YAAY,IAAI,IAAI,EAAE,0DAA0D,CAAC;MAC3F,IAAI,CAACI,aAAa,GAAGJ,YAAY;IACnC;EACF;EAAC,IAAAL,aAAA,CAAAF,OAAA,EAAAM,kBAAA;IAAAM,GAAA;IAAAb,KAAA,EACD,SAAAc,YAAYC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,EAAE;MAAA,IAAAC,KAAA;MACxC,IAAIC,mBAAmB;MACvB,CAACA,mBAAmB,GAAG,IAAI,CAACP,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGO,mBAAmB,CAACL,WAAW,CAACC,SAAS,CAAC;MACxG,IAAIK,YAAY,GAAGC,8BAAqB,CAACP,WAAW,CAACC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,CAAC;MAClF,OAAO;QACLK,MAAM,EAAE,SAAAA,OAAA,EAAM;UACZ,IAAIF,YAAY,IAAI,IAAI,EAAE;YACxB,IAAIG,oBAAoB;YACxB,CAACA,oBAAoB,GAAGL,KAAI,CAACN,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGW,oBAAoB,CAACC,eAAe,CAAC,CAAC,CAAC;YAEtGJ,YAAY,CAACE,MAAM,CAAC,CAAC;YACrBF,YAAY,GAAG,IAAI;UACrB;QACF;MACF,CAAC;IACH;EAAC;IAAAP,GAAA;IAAAb,KAAA,EAKD,SAAAyB,eAAeV,SAAS,EAAEC,QAAQ,EAAE;MAClC,IAAIU,oBAAoB;MACxB,CAACA,oBAAoB,GAAG,IAAI,CAACd,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGc,oBAAoB,CAACF,eAAe,CAAC,CAAC,CAAC;MAGtGH,8BAAqB,CAACI,cAAc,CAACV,SAAS,EAAEC,QAAQ,CAAC;IAC3D;EAAC;IAAAH,GAAA;IAAAb,KAAA,EACD,SAAA2B,KAAKZ,SAAS,EAAE;MACd,KAAK,IAAIa,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;QAC1GF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;MAClC;MAGAZ,8BAAqB,CAACM,IAAI,CAAAO,KAAA,CAA1Bb,8BAAqB,GAAMN,SAAS,EAAAoB,MAAA,CAAKJ,IAAI,EAAC;IAChD;EAAC;IAAAlB,GAAA;IAAAb,KAAA,EACD,SAAAoC,mBAAmBrB,SAAS,EAAE;MAC5B,IAAIsB,oBAAoB;MACxB,IAAA1B,kBAAS,EAACI,SAAS,IAAI,IAAI,EAAE,wEAAwE,CAAC;MACtG,CAACsB,oBAAoB,GAAG,IAAI,CAACzB,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGyB,oBAAoB,CAACb,eAAe,CAAC,IAAI,CAACc,aAAa,CAACvB,SAAS,CAAC,CAAC;MAClIM,8BAAqB,CAACe,kBAAkB,CAACrB,SAAS,CAAC;IACrD;EAAC;IAAAF,GAAA;IAAAb,KAAA,EACD,SAAAsC,cAAcvB,SAAS,EAAE;MACvB,OAAOM,8BAAqB,CAACiB,aAAa,CAACvB,SAAS,CAAC;IACvD;EAAC;EAAA,OAAAR,kBAAA;AAAA;AAAAR,OAAA,CAAAE,OAAA,GAAAM,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}